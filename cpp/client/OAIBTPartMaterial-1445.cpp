/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTPartMaterial-1445.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTPartMaterial-1445::OAIBTPartMaterial-1445(QString json) {
    init();
    this->fromJson(json);
}

OAIBTPartMaterial-1445::OAIBTPartMaterial-1445() {
    init();
}

OAIBTPartMaterial-1445::~OAIBTPartMaterial-1445() {
    this->cleanup();
}

void
OAIBTPartMaterial-1445::init() {
    bt_type = new QString("");
    m_bt_type_isSet = false;
    id = new QString("");
    m_id_isSet = false;
    library_name = new QString("");
    m_library_name_isSet = false;
    library_reference = new OAIBTElementReference-725();
    m_library_reference_isSet = false;
    name = new QString("");
    m_name_isSet = false;
    properties = new QMap<QString, OAIBTPartMaterialProperty-1453*>();
    m_properties_isSet = false;
    version = 0;
    m_version_isSet = false;
}

void
OAIBTPartMaterial-1445::cleanup() {
    if(bt_type != nullptr) { 
        delete bt_type;
    }
    if(id != nullptr) { 
        delete id;
    }
    if(library_name != nullptr) { 
        delete library_name;
    }
    if(library_reference != nullptr) { 
        delete library_reference;
    }
    if(name != nullptr) { 
        delete name;
    }
    if(properties != nullptr) { 
        auto arr = properties;
        for(auto o: *arr) { 
            delete o;
        }
        delete properties;
    }

}

OAIBTPartMaterial-1445*
OAIBTPartMaterial-1445::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTPartMaterial-1445::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&bt_type, pJson["btType"], "QString", "QString");
    
    ::OpenAPI::setValue(&id, pJson["id"], "QString", "QString");
    
    ::OpenAPI::setValue(&library_name, pJson["libraryName"], "QString", "QString");
    
    ::OpenAPI::setValue(&library_reference, pJson["libraryReference"], "OAIBTElementReference-725", "OAIBTElementReference-725");
    
    ::OpenAPI::setValue(&name, pJson["name"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&properties, pJson["properties"], "QMap", "OAIBTPartMaterialProperty-1453");
    ::OpenAPI::setValue(&version, pJson["version"], "qint32", "");
    
}

QString
OAIBTPartMaterial-1445::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTPartMaterial-1445::asJsonObject() {
    QJsonObject obj;
    if(bt_type != nullptr && *bt_type != QString("")){
        toJsonValue(QString("btType"), bt_type, obj, QString("QString"));
    }
    if(id != nullptr && *id != QString("")){
        toJsonValue(QString("id"), id, obj, QString("QString"));
    }
    if(library_name != nullptr && *library_name != QString("")){
        toJsonValue(QString("libraryName"), library_name, obj, QString("QString"));
    }
    if((library_reference != nullptr) && (library_reference->isSet())){
        toJsonValue(QString("libraryReference"), library_reference, obj, QString("OAIBTElementReference-725"));
    }
    if(name != nullptr && *name != QString("")){
        toJsonValue(QString("name"), name, obj, QString("QString"));
    }
    if(properties->size() > 0){
        toJsonMap((QMap<QString, void*>*) properties, obj, "properties", "OAIBTPartMaterialProperty-1453");
    }
    if(m_version_isSet){
        obj.insert("version", QJsonValue(version));
    }

    return obj;
}

QString*
OAIBTPartMaterial-1445::getBtType() {
    return bt_type;
}
void
OAIBTPartMaterial-1445::setBtType(QString* bt_type) {
    this->bt_type = bt_type;
    this->m_bt_type_isSet = true;
}

QString*
OAIBTPartMaterial-1445::getId() {
    return id;
}
void
OAIBTPartMaterial-1445::setId(QString* id) {
    this->id = id;
    this->m_id_isSet = true;
}

QString*
OAIBTPartMaterial-1445::getLibraryName() {
    return library_name;
}
void
OAIBTPartMaterial-1445::setLibraryName(QString* library_name) {
    this->library_name = library_name;
    this->m_library_name_isSet = true;
}

OAIBTElementReference-725*
OAIBTPartMaterial-1445::getLibraryReference() {
    return library_reference;
}
void
OAIBTPartMaterial-1445::setLibraryReference(OAIBTElementReference-725* library_reference) {
    this->library_reference = library_reference;
    this->m_library_reference_isSet = true;
}

QString*
OAIBTPartMaterial-1445::getName() {
    return name;
}
void
OAIBTPartMaterial-1445::setName(QString* name) {
    this->name = name;
    this->m_name_isSet = true;
}

QMap<QString, OAIBTPartMaterialProperty-1453*>*
OAIBTPartMaterial-1445::getProperties() {
    return properties;
}
void
OAIBTPartMaterial-1445::setProperties(QMap<QString, OAIBTPartMaterialProperty-1453*>* properties) {
    this->properties = properties;
    this->m_properties_isSet = true;
}

qint32
OAIBTPartMaterial-1445::getVersion() {
    return version;
}
void
OAIBTPartMaterial-1445::setVersion(qint32 version) {
    this->version = version;
    this->m_version_isSet = true;
}


bool
OAIBTPartMaterial-1445::isSet(){
    bool isObjectUpdated = false;
    do{
        if(bt_type != nullptr && *bt_type != QString("")){ isObjectUpdated = true; break;}
        if(id != nullptr && *id != QString("")){ isObjectUpdated = true; break;}
        if(library_name != nullptr && *library_name != QString("")){ isObjectUpdated = true; break;}
        if(library_reference != nullptr && library_reference->isSet()){ isObjectUpdated = true; break;}
        if(name != nullptr && *name != QString("")){ isObjectUpdated = true; break;}
        if(properties->size() > 0){ isObjectUpdated = true; break;}
        if(m_version_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

