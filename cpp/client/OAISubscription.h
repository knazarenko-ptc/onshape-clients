/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscription.h
 *
 * 
 */

#ifndef OAISubscription_H_
#define OAISubscription_H_

#include <QJsonObject>


#include "OAICustomer.h"
#include "OAIDiscount.h"
#include "OAIPlan.h"
#include "OAISubscriptionItemCollection.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAISubscription: public OAIObject {
public:
    OAISubscription();
    OAISubscription(QString json);
    ~OAISubscription();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAISubscription* fromJson(QString jsonString) override;

    double getApplicationFeePercent();
    void setApplicationFeePercent(double application_fee_percent);

    QString* getBilling();
    void setBilling(QString* billing);

    bool isCancelAtPeriodEnd();
    void setCancelAtPeriodEnd(bool cancel_at_period_end);

    qint64 getCanceledAt();
    void setCanceledAt(qint64 canceled_at);

    qint64 getCreated();
    void setCreated(qint64 created);

    qint64 getCurrentPeriodEnd();
    void setCurrentPeriodEnd(qint64 current_period_end);

    qint64 getCurrentPeriodStart();
    void setCurrentPeriodStart(qint64 current_period_start);

    QString* getCustomer();
    void setCustomer(QString* customer);

    OAICustomer* getCustomerObject();
    void setCustomerObject(OAICustomer* customer_object);

    qint32 getDaysUntilDue();
    void setDaysUntilDue(qint32 days_until_due);

    OAIDiscount* getDiscount();
    void setDiscount(OAIDiscount* discount);

    qint64 getEndedAt();
    void setEndedAt(qint64 ended_at);

    QString* getId();
    void setId(QString* id);

    QMap<QString, QString*>* getMetadata();
    void setMetadata(QMap<QString, QString*>* metadata);

    QString* getObject();
    void setObject(QString* object);

    OAIPlan* getPlan();
    void setPlan(OAIPlan* plan);

    qint32 getQuantity();
    void setQuantity(qint32 quantity);

    qint64 getStart();
    void setStart(qint64 start);

    QString* getStatus();
    void setStatus(QString* status);

    OAISubscriptionItemCollection* getSubscriptionItems();
    void setSubscriptionItems(OAISubscriptionItemCollection* subscription_items);

    double getTaxPercent();
    void setTaxPercent(double tax_percent);

    qint64 getTrialEnd();
    void setTrialEnd(qint64 trial_end);

    qint64 getTrialStart();
    void setTrialStart(qint64 trial_start);


    virtual bool isSet() override;

private:
    double application_fee_percent;
    bool m_application_fee_percent_isSet;

    QString* billing;
    bool m_billing_isSet;

    bool cancel_at_period_end;
    bool m_cancel_at_period_end_isSet;

    qint64 canceled_at;
    bool m_canceled_at_isSet;

    qint64 created;
    bool m_created_isSet;

    qint64 current_period_end;
    bool m_current_period_end_isSet;

    qint64 current_period_start;
    bool m_current_period_start_isSet;

    QString* customer;
    bool m_customer_isSet;

    OAICustomer* customer_object;
    bool m_customer_object_isSet;

    qint32 days_until_due;
    bool m_days_until_due_isSet;

    OAIDiscount* discount;
    bool m_discount_isSet;

    qint64 ended_at;
    bool m_ended_at_isSet;

    QString* id;
    bool m_id_isSet;

    QMap<QString, QString*>* metadata;
    bool m_metadata_isSet;

    QString* object;
    bool m_object_isSet;

    OAIPlan* plan;
    bool m_plan_isSet;

    qint32 quantity;
    bool m_quantity_isSet;

    qint64 start;
    bool m_start_isSet;

    QString* status;
    bool m_status_isSet;

    OAISubscriptionItemCollection* subscription_items;
    bool m_subscription_items_isSet;

    double tax_percent;
    bool m_tax_percent_isSet;

    qint64 trial_end;
    bool m_trial_end_isSet;

    qint64 trial_start;
    bool m_trial_start_isSet;

};

}

#endif /* OAISubscription_H_ */
