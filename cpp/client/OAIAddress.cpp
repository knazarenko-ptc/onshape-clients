/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIAddress.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIAddress::OAIAddress(QString json) {
    init();
    this->fromJson(json);
}

OAIAddress::OAIAddress() {
    init();
}

OAIAddress::~OAIAddress() {
    this->cleanup();
}

void
OAIAddress::init() {
    city = new QString("");
    m_city_isSet = false;
    country = new QString("");
    m_country_isSet = false;
    line1 = new QString("");
    m_line1_isSet = false;
    line2 = new QString("");
    m_line2_isSet = false;
    postal_code = new QString("");
    m_postal_code_isSet = false;
    state = new QString("");
    m_state_isSet = false;
}

void
OAIAddress::cleanup() {
    if(city != nullptr) { 
        delete city;
    }
    if(country != nullptr) { 
        delete country;
    }
    if(line1 != nullptr) { 
        delete line1;
    }
    if(line2 != nullptr) { 
        delete line2;
    }
    if(postal_code != nullptr) { 
        delete postal_code;
    }
    if(state != nullptr) { 
        delete state;
    }
}

OAIAddress*
OAIAddress::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIAddress::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&city, pJson["city"], "QString", "QString");
    
    ::OpenAPI::setValue(&country, pJson["country"], "QString", "QString");
    
    ::OpenAPI::setValue(&line1, pJson["line1"], "QString", "QString");
    
    ::OpenAPI::setValue(&line2, pJson["line2"], "QString", "QString");
    
    ::OpenAPI::setValue(&postal_code, pJson["postalCode"], "QString", "QString");
    
    ::OpenAPI::setValue(&state, pJson["state"], "QString", "QString");
    
}

QString
OAIAddress::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIAddress::asJsonObject() {
    QJsonObject obj;
    if(city != nullptr && *city != QString("")){
        toJsonValue(QString("city"), city, obj, QString("QString"));
    }
    if(country != nullptr && *country != QString("")){
        toJsonValue(QString("country"), country, obj, QString("QString"));
    }
    if(line1 != nullptr && *line1 != QString("")){
        toJsonValue(QString("line1"), line1, obj, QString("QString"));
    }
    if(line2 != nullptr && *line2 != QString("")){
        toJsonValue(QString("line2"), line2, obj, QString("QString"));
    }
    if(postal_code != nullptr && *postal_code != QString("")){
        toJsonValue(QString("postalCode"), postal_code, obj, QString("QString"));
    }
    if(state != nullptr && *state != QString("")){
        toJsonValue(QString("state"), state, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIAddress::getCity() {
    return city;
}
void
OAIAddress::setCity(QString* city) {
    this->city = city;
    this->m_city_isSet = true;
}

QString*
OAIAddress::getCountry() {
    return country;
}
void
OAIAddress::setCountry(QString* country) {
    this->country = country;
    this->m_country_isSet = true;
}

QString*
OAIAddress::getLine1() {
    return line1;
}
void
OAIAddress::setLine1(QString* line1) {
    this->line1 = line1;
    this->m_line1_isSet = true;
}

QString*
OAIAddress::getLine2() {
    return line2;
}
void
OAIAddress::setLine2(QString* line2) {
    this->line2 = line2;
    this->m_line2_isSet = true;
}

QString*
OAIAddress::getPostalCode() {
    return postal_code;
}
void
OAIAddress::setPostalCode(QString* postal_code) {
    this->postal_code = postal_code;
    this->m_postal_code_isSet = true;
}

QString*
OAIAddress::getState() {
    return state;
}
void
OAIAddress::setState(QString* state) {
    this->state = state;
    this->m_state_isSet = true;
}


bool
OAIAddress::isSet(){
    bool isObjectUpdated = false;
    do{
        if(city != nullptr && *city != QString("")){ isObjectUpdated = true; break;}
        if(country != nullptr && *country != QString("")){ isObjectUpdated = true; break;}
        if(line1 != nullptr && *line1 != QString("")){ isObjectUpdated = true; break;}
        if(line2 != nullptr && *line2 != QString("")){ isObjectUpdated = true; break;}
        if(postal_code != nullptr && *postal_code != QString("")){ isObjectUpdated = true; break;}
        if(state != nullptr && *state != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

