/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTReleasePackageItemError.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTReleasePackageItemError::OAIBTReleasePackageItemError(QString json) {
    init();
    this->fromJson(json);
}

OAIBTReleasePackageItemError::OAIBTReleasePackageItemError() {
    init();
}

OAIBTReleasePackageItemError::~OAIBTReleasePackageItemError() {
    this->cleanup();
}

void
OAIBTReleasePackageItemError::init() {
    message = new QString("");
    m_message_isSet = false;
    severity = 0;
    m_severity_isSet = false;
}

void
OAIBTReleasePackageItemError::cleanup() {
    if(message != nullptr) { 
        delete message;
    }

}

OAIBTReleasePackageItemError*
OAIBTReleasePackageItemError::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTReleasePackageItemError::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&message, pJson["message"], "QString", "QString");
    
    ::OpenAPI::setValue(&severity, pJson["severity"], "qint32", "");
    
}

QString
OAIBTReleasePackageItemError::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTReleasePackageItemError::asJsonObject() {
    QJsonObject obj;
    if(message != nullptr && *message != QString("")){
        toJsonValue(QString("message"), message, obj, QString("QString"));
    }
    if(m_severity_isSet){
        obj.insert("severity", QJsonValue(severity));
    }

    return obj;
}

QString*
OAIBTReleasePackageItemError::getMessage() {
    return message;
}
void
OAIBTReleasePackageItemError::setMessage(QString* message) {
    this->message = message;
    this->m_message_isSet = true;
}

qint32
OAIBTReleasePackageItemError::getSeverity() {
    return severity;
}
void
OAIBTReleasePackageItemError::setSeverity(qint32 severity) {
    this->severity = severity;
    this->m_severity_isSet = true;
}


bool
OAIBTReleasePackageItemError::isSet(){
    bool isObjectUpdated = false;
    do{
        if(message != nullptr && *message != QString("")){ isObjectUpdated = true; break;}
        if(m_severity_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

