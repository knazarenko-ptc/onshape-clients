/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTAssemblyInsertTransformedInstancesResponse.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTAssemblyInsertTransformedInstancesResponse::OAIBTAssemblyInsertTransformedInstancesResponse(QString json) {
    init();
    this->fromJson(json);
}

OAIBTAssemblyInsertTransformedInstancesResponse::OAIBTAssemblyInsertTransformedInstancesResponse() {
    init();
}

OAIBTAssemblyInsertTransformedInstancesResponse::~OAIBTAssemblyInsertTransformedInstancesResponse() {
    this->cleanup();
}

void
OAIBTAssemblyInsertTransformedInstancesResponse::init() {
    insert_responses = new QList<OAIBTAssemblyOccurrenceInfo*>();
    m_insert_responses_isSet = false;
}

void
OAIBTAssemblyInsertTransformedInstancesResponse::cleanup() {
    if(insert_responses != nullptr) { 
        auto arr = insert_responses;
        for(auto o: *arr) { 
            delete o;
        }
        delete insert_responses;
    }
}

OAIBTAssemblyInsertTransformedInstancesResponse*
OAIBTAssemblyInsertTransformedInstancesResponse::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTAssemblyInsertTransformedInstancesResponse::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&insert_responses, pJson["insertResponses"], "QList", "OAIBTAssemblyOccurrenceInfo");
}

QString
OAIBTAssemblyInsertTransformedInstancesResponse::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTAssemblyInsertTransformedInstancesResponse::asJsonObject() {
    QJsonObject obj;
    if(insert_responses->size() > 0){
        toJsonArray((QList<void*>*)insert_responses, obj, "insertResponses", "OAIBTAssemblyOccurrenceInfo");
    }

    return obj;
}

QList<OAIBTAssemblyOccurrenceInfo*>*
OAIBTAssemblyInsertTransformedInstancesResponse::getInsertResponses() {
    return insert_responses;
}
void
OAIBTAssemblyInsertTransformedInstancesResponse::setInsertResponses(QList<OAIBTAssemblyOccurrenceInfo*>* insert_responses) {
    this->insert_responses = insert_responses;
    this->m_insert_responses_isSet = true;
}


bool
OAIBTAssemblyInsertTransformedInstancesResponse::isSet(){
    bool isObjectUpdated = false;
    do{
        if(insert_responses->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

