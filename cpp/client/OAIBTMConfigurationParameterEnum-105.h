/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTMConfigurationParameterEnum-105.h
 *
 * 
 */

#ifndef OAIBTMConfigurationParameterEnum-105_H_
#define OAIBTMConfigurationParameterEnum-105_H_

#include <QJsonObject>


#include "OAIBTMConfigurationParameter-819.h"
#include "OAIBTMEnumOption-592.h"
#include "OAIBTTreeNode-20.h"
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTMConfigurationParameterEnum-105: public OAIObject {
public:
    OAIBTMConfigurationParameterEnum-105();
    OAIBTMConfigurationParameterEnum-105(QString json);
    ~OAIBTMConfigurationParameterEnum-105();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTMConfigurationParameterEnum-105* fromJson(QString jsonString) override;

    QString* getBtType();
    void setBtType(QString* bt_type);

    OAIBTTreeNode-20* getGeneratedParameterId();
    void setGeneratedParameterId(OAIBTTreeNode-20* generated_parameter_id);

    QString* getImportMicroversion();
    void setImportMicroversion(QString* import_microversion);

    QString* getNodeId();
    void setNodeId(QString* node_id);

    QString* getParameterId();
    void setParameterId(QString* parameter_id);

    QString* getParameterName();
    void setParameterName(QString* parameter_name);

    QString* getParameterType();
    void setParameterType(QString* parameter_type);

    bool isValid();
    void setValid(bool valid);

    QList<QString*>* getOptionIds();
    void setOptionIds(QList<QString*>* option_ids);

    QString* getEnumName();
    void setEnumName(QString* enum_name);

    QString* getNamespace();
    void setNamespace(QString* _namespace);

    QString* getDefaultValue();
    void setDefaultValue(QString* default_value);

    QList<OAIBTMEnumOption-592*>* getOptions();
    void setOptions(QList<OAIBTMEnumOption-592*>* options);


    virtual bool isSet() override;

private:
    QString* bt_type;
    bool m_bt_type_isSet;

    OAIBTTreeNode-20* generated_parameter_id;
    bool m_generated_parameter_id_isSet;

    QString* import_microversion;
    bool m_import_microversion_isSet;

    QString* node_id;
    bool m_node_id_isSet;

    QString* parameter_id;
    bool m_parameter_id_isSet;

    QString* parameter_name;
    bool m_parameter_name_isSet;

    QString* parameter_type;
    bool m_parameter_type_isSet;

    bool valid;
    bool m_valid_isSet;

    QList<QString*>* option_ids;
    bool m_option_ids_isSet;

    QString* enum_name;
    bool m_enum_name_isSet;

    QString* _namespace;
    bool m__namespace_isSet;

    QString* default_value;
    bool m_default_value_isSet;

    QList<OAIBTMEnumOption-592*>* options;
    bool m_options_isSet;

};

}

#endif /* OAIBTMConfigurationParameterEnum-105_H_ */
