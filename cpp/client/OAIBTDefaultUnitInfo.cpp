/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTDefaultUnitInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTDefaultUnitInfo::OAIBTDefaultUnitInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTDefaultUnitInfo::OAIBTDefaultUnitInfo() {
    init();
}

OAIBTDefaultUnitInfo::~OAIBTDefaultUnitInfo() {
    this->cleanup();
}

void
OAIBTDefaultUnitInfo::init() {
    key = new QString("");
    m_key_isSet = false;
    value = new QString("");
    m_value_isSet = false;
}

void
OAIBTDefaultUnitInfo::cleanup() {
    if(key != nullptr) { 
        delete key;
    }
    if(value != nullptr) { 
        delete value;
    }
}

OAIBTDefaultUnitInfo*
OAIBTDefaultUnitInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTDefaultUnitInfo::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&key, pJson["key"], "QString", "QString");
    
    ::OpenAPI::setValue(&value, pJson["value"], "QString", "QString");
    
}

QString
OAIBTDefaultUnitInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTDefaultUnitInfo::asJsonObject() {
    QJsonObject obj;
    if(key != nullptr && *key != QString("")){
        toJsonValue(QString("key"), key, obj, QString("QString"));
    }
    if(value != nullptr && *value != QString("")){
        toJsonValue(QString("value"), value, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIBTDefaultUnitInfo::getKey() {
    return key;
}
void
OAIBTDefaultUnitInfo::setKey(QString* key) {
    this->key = key;
    this->m_key_isSet = true;
}

QString*
OAIBTDefaultUnitInfo::getValue() {
    return value;
}
void
OAIBTDefaultUnitInfo::setValue(QString* value) {
    this->value = value;
    this->m_value_isSet = true;
}


bool
OAIBTDefaultUnitInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(key != nullptr && *key != QString("")){ isObjectUpdated = true; break;}
        if(value != nullptr && *value != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

