/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTConfigurationParams.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTConfigurationParams::OAIBTConfigurationParams(QString json) {
    init();
    this->fromJson(json);
}

OAIBTConfigurationParams::OAIBTConfigurationParams() {
    init();
}

OAIBTConfigurationParams::~OAIBTConfigurationParams() {
    this->cleanup();
}

void
OAIBTConfigurationParams::init() {
    parameters = new QList<OAIConfigurationEntry*>();
    m_parameters_isSet = false;
    standard_content_parameters_id = new QString("");
    m_standard_content_parameters_id_isSet = false;
}

void
OAIBTConfigurationParams::cleanup() {
    if(parameters != nullptr) { 
        auto arr = parameters;
        for(auto o: *arr) { 
            delete o;
        }
        delete parameters;
    }
    if(standard_content_parameters_id != nullptr) { 
        delete standard_content_parameters_id;
    }
}

OAIBTConfigurationParams*
OAIBTConfigurationParams::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTConfigurationParams::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&parameters, pJson["parameters"], "QList", "OAIConfigurationEntry");
    ::OpenAPI::setValue(&standard_content_parameters_id, pJson["standardContentParametersId"], "QString", "QString");
    
}

QString
OAIBTConfigurationParams::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTConfigurationParams::asJsonObject() {
    QJsonObject obj;
    if(parameters->size() > 0){
        toJsonArray((QList<void*>*)parameters, obj, "parameters", "OAIConfigurationEntry");
    }
    if(standard_content_parameters_id != nullptr && *standard_content_parameters_id != QString("")){
        toJsonValue(QString("standardContentParametersId"), standard_content_parameters_id, obj, QString("QString"));
    }

    return obj;
}

QList<OAIConfigurationEntry*>*
OAIBTConfigurationParams::getParameters() {
    return parameters;
}
void
OAIBTConfigurationParams::setParameters(QList<OAIConfigurationEntry*>* parameters) {
    this->parameters = parameters;
    this->m_parameters_isSet = true;
}

QString*
OAIBTConfigurationParams::getStandardContentParametersId() {
    return standard_content_parameters_id;
}
void
OAIBTConfigurationParams::setStandardContentParametersId(QString* standard_content_parameters_id) {
    this->standard_content_parameters_id = standard_content_parameters_id;
    this->m_standard_content_parameters_id_isSet = true;
}


bool
OAIBTConfigurationParams::isSet(){
    bool isObjectUpdated = false;
    do{
        if(parameters->size() > 0){ isObjectUpdated = true; break;}
        if(standard_content_parameters_id != nullptr && *standard_content_parameters_id != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

