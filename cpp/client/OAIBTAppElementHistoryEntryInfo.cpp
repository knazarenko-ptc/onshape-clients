/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTAppElementHistoryEntryInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTAppElementHistoryEntryInfo::OAIBTAppElementHistoryEntryInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTAppElementHistoryEntryInfo::OAIBTAppElementHistoryEntryInfo() {
    init();
}

OAIBTAppElementHistoryEntryInfo::~OAIBTAppElementHistoryEntryInfo() {
    this->cleanup();
}

void
OAIBTAppElementHistoryEntryInfo::init() {
    change_id = new QString("");
    m_change_id_isSet = false;
    created_at = NULL;
    m_created_at_isSet = false;
    description = new QString("");
    m_description_isSet = false;
}

void
OAIBTAppElementHistoryEntryInfo::cleanup() {
    if(change_id != nullptr) { 
        delete change_id;
    }
    if(created_at != nullptr) { 
        delete created_at;
    }
    if(description != nullptr) { 
        delete description;
    }
}

OAIBTAppElementHistoryEntryInfo*
OAIBTAppElementHistoryEntryInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTAppElementHistoryEntryInfo::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&change_id, pJson["changeId"], "QString", "QString");
    
    ::OpenAPI::setValue(&created_at, pJson["createdAt"], "QDateTime", "QDateTime");
    
    ::OpenAPI::setValue(&description, pJson["description"], "QString", "QString");
    
}

QString
OAIBTAppElementHistoryEntryInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTAppElementHistoryEntryInfo::asJsonObject() {
    QJsonObject obj;
    if(change_id != nullptr && *change_id != QString("")){
        toJsonValue(QString("changeId"), change_id, obj, QString("QString"));
    }
    if(created_at != nullptr) { 
        toJsonValue(QString("createdAt"), created_at, obj, QString("QDateTime"));
    }
    if(description != nullptr && *description != QString("")){
        toJsonValue(QString("description"), description, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIBTAppElementHistoryEntryInfo::getChangeId() {
    return change_id;
}
void
OAIBTAppElementHistoryEntryInfo::setChangeId(QString* change_id) {
    this->change_id = change_id;
    this->m_change_id_isSet = true;
}

QDateTime*
OAIBTAppElementHistoryEntryInfo::getCreatedAt() {
    return created_at;
}
void
OAIBTAppElementHistoryEntryInfo::setCreatedAt(QDateTime* created_at) {
    this->created_at = created_at;
    this->m_created_at_isSet = true;
}

QString*
OAIBTAppElementHistoryEntryInfo::getDescription() {
    return description;
}
void
OAIBTAppElementHistoryEntryInfo::setDescription(QString* description) {
    this->description = description;
    this->m_description_isSet = true;
}


bool
OAIBTAppElementHistoryEntryInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(change_id != nullptr && *change_id != QString("")){ isObjectUpdated = true; break;}
        if(description != nullptr && *description != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

