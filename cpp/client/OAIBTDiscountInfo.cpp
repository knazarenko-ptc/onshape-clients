/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTDiscountInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTDiscountInfo::OAIBTDiscountInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTDiscountInfo::OAIBTDiscountInfo() {
    init();
}

OAIBTDiscountInfo::~OAIBTDiscountInfo() {
    this->cleanup();
}

void
OAIBTDiscountInfo::init() {
    account_balance = 0;
    m_account_balance_isSet = false;
    amount_off = 0;
    m_amount_off_isSet = false;
    coupon_type = 0;
    m_coupon_type_isSet = false;
    coupon_valid_months = 0;
    m_coupon_valid_months_isSet = false;
    created_at = NULL;
    m_created_at_isSet = false;
    created_by = new OAIBTUserSummaryInfo();
    m_created_by_isSet = false;
    expires_at = NULL;
    m_expires_at_isSet = false;
    href = new QString("");
    m_href_isSet = false;
    id = new QString("");
    m_id_isSet = false;
    name = new QString("");
    m_name_isSet = false;
    owner_id = new QString("");
    m_owner_id_isSet = false;
    percent_off = 0;
    m_percent_off_isSet = false;
    plan_id = new QString("");
    m_plan_id_isSet = false;
    trial_end_date = new QString("");
    m_trial_end_date_isSet = false;
    used_at = NULL;
    m_used_at_isSet = false;
    view_ref = new QString("");
    m_view_ref_isSet = false;
}

void
OAIBTDiscountInfo::cleanup() {




    if(created_at != nullptr) { 
        delete created_at;
    }
    if(created_by != nullptr) { 
        delete created_by;
    }
    if(expires_at != nullptr) { 
        delete expires_at;
    }
    if(href != nullptr) { 
        delete href;
    }
    if(id != nullptr) { 
        delete id;
    }
    if(name != nullptr) { 
        delete name;
    }
    if(owner_id != nullptr) { 
        delete owner_id;
    }

    if(plan_id != nullptr) { 
        delete plan_id;
    }
    if(trial_end_date != nullptr) { 
        delete trial_end_date;
    }
    if(used_at != nullptr) { 
        delete used_at;
    }
    if(view_ref != nullptr) { 
        delete view_ref;
    }
}

OAIBTDiscountInfo*
OAIBTDiscountInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTDiscountInfo::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&account_balance, pJson["accountBalance"], "qint32", "");
    
    ::OpenAPI::setValue(&amount_off, pJson["amountOff"], "qint32", "");
    
    ::OpenAPI::setValue(&coupon_type, pJson["couponType"], "qint32", "");
    
    ::OpenAPI::setValue(&coupon_valid_months, pJson["couponValidMonths"], "qint32", "");
    
    ::OpenAPI::setValue(&created_at, pJson["createdAt"], "QDateTime", "QDateTime");
    
    ::OpenAPI::setValue(&created_by, pJson["createdBy"], "OAIBTUserSummaryInfo", "OAIBTUserSummaryInfo");
    
    ::OpenAPI::setValue(&expires_at, pJson["expiresAt"], "QDateTime", "QDateTime");
    
    ::OpenAPI::setValue(&href, pJson["href"], "QString", "QString");
    
    ::OpenAPI::setValue(&id, pJson["id"], "QString", "QString");
    
    ::OpenAPI::setValue(&name, pJson["name"], "QString", "QString");
    
    ::OpenAPI::setValue(&owner_id, pJson["ownerId"], "QString", "QString");
    
    ::OpenAPI::setValue(&percent_off, pJson["percentOff"], "qint32", "");
    
    ::OpenAPI::setValue(&plan_id, pJson["planId"], "QString", "QString");
    
    ::OpenAPI::setValue(&trial_end_date, pJson["trialEndDate"], "QString", "QString");
    
    ::OpenAPI::setValue(&used_at, pJson["usedAt"], "QDateTime", "QDateTime");
    
    ::OpenAPI::setValue(&view_ref, pJson["viewRef"], "QString", "QString");
    
}

QString
OAIBTDiscountInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTDiscountInfo::asJsonObject() {
    QJsonObject obj;
    if(m_account_balance_isSet){
        obj.insert("accountBalance", QJsonValue(account_balance));
    }
    if(m_amount_off_isSet){
        obj.insert("amountOff", QJsonValue(amount_off));
    }
    if(m_coupon_type_isSet){
        obj.insert("couponType", QJsonValue(coupon_type));
    }
    if(m_coupon_valid_months_isSet){
        obj.insert("couponValidMonths", QJsonValue(coupon_valid_months));
    }
    if(created_at != nullptr) { 
        toJsonValue(QString("createdAt"), created_at, obj, QString("QDateTime"));
    }
    if((created_by != nullptr) && (created_by->isSet())){
        toJsonValue(QString("createdBy"), created_by, obj, QString("OAIBTUserSummaryInfo"));
    }
    if(expires_at != nullptr) { 
        toJsonValue(QString("expiresAt"), expires_at, obj, QString("QDateTime"));
    }
    if(href != nullptr && *href != QString("")){
        toJsonValue(QString("href"), href, obj, QString("QString"));
    }
    if(id != nullptr && *id != QString("")){
        toJsonValue(QString("id"), id, obj, QString("QString"));
    }
    if(name != nullptr && *name != QString("")){
        toJsonValue(QString("name"), name, obj, QString("QString"));
    }
    if(owner_id != nullptr && *owner_id != QString("")){
        toJsonValue(QString("ownerId"), owner_id, obj, QString("QString"));
    }
    if(m_percent_off_isSet){
        obj.insert("percentOff", QJsonValue(percent_off));
    }
    if(plan_id != nullptr && *plan_id != QString("")){
        toJsonValue(QString("planId"), plan_id, obj, QString("QString"));
    }
    if(trial_end_date != nullptr && *trial_end_date != QString("")){
        toJsonValue(QString("trialEndDate"), trial_end_date, obj, QString("QString"));
    }
    if(used_at != nullptr) { 
        toJsonValue(QString("usedAt"), used_at, obj, QString("QDateTime"));
    }
    if(view_ref != nullptr && *view_ref != QString("")){
        toJsonValue(QString("viewRef"), view_ref, obj, QString("QString"));
    }

    return obj;
}

qint32
OAIBTDiscountInfo::getAccountBalance() {
    return account_balance;
}
void
OAIBTDiscountInfo::setAccountBalance(qint32 account_balance) {
    this->account_balance = account_balance;
    this->m_account_balance_isSet = true;
}

qint32
OAIBTDiscountInfo::getAmountOff() {
    return amount_off;
}
void
OAIBTDiscountInfo::setAmountOff(qint32 amount_off) {
    this->amount_off = amount_off;
    this->m_amount_off_isSet = true;
}

qint32
OAIBTDiscountInfo::getCouponType() {
    return coupon_type;
}
void
OAIBTDiscountInfo::setCouponType(qint32 coupon_type) {
    this->coupon_type = coupon_type;
    this->m_coupon_type_isSet = true;
}

qint32
OAIBTDiscountInfo::getCouponValidMonths() {
    return coupon_valid_months;
}
void
OAIBTDiscountInfo::setCouponValidMonths(qint32 coupon_valid_months) {
    this->coupon_valid_months = coupon_valid_months;
    this->m_coupon_valid_months_isSet = true;
}

QDateTime*
OAIBTDiscountInfo::getCreatedAt() {
    return created_at;
}
void
OAIBTDiscountInfo::setCreatedAt(QDateTime* created_at) {
    this->created_at = created_at;
    this->m_created_at_isSet = true;
}

OAIBTUserSummaryInfo*
OAIBTDiscountInfo::getCreatedBy() {
    return created_by;
}
void
OAIBTDiscountInfo::setCreatedBy(OAIBTUserSummaryInfo* created_by) {
    this->created_by = created_by;
    this->m_created_by_isSet = true;
}

QDateTime*
OAIBTDiscountInfo::getExpiresAt() {
    return expires_at;
}
void
OAIBTDiscountInfo::setExpiresAt(QDateTime* expires_at) {
    this->expires_at = expires_at;
    this->m_expires_at_isSet = true;
}

QString*
OAIBTDiscountInfo::getHref() {
    return href;
}
void
OAIBTDiscountInfo::setHref(QString* href) {
    this->href = href;
    this->m_href_isSet = true;
}

QString*
OAIBTDiscountInfo::getId() {
    return id;
}
void
OAIBTDiscountInfo::setId(QString* id) {
    this->id = id;
    this->m_id_isSet = true;
}

QString*
OAIBTDiscountInfo::getName() {
    return name;
}
void
OAIBTDiscountInfo::setName(QString* name) {
    this->name = name;
    this->m_name_isSet = true;
}

QString*
OAIBTDiscountInfo::getOwnerId() {
    return owner_id;
}
void
OAIBTDiscountInfo::setOwnerId(QString* owner_id) {
    this->owner_id = owner_id;
    this->m_owner_id_isSet = true;
}

qint32
OAIBTDiscountInfo::getPercentOff() {
    return percent_off;
}
void
OAIBTDiscountInfo::setPercentOff(qint32 percent_off) {
    this->percent_off = percent_off;
    this->m_percent_off_isSet = true;
}

QString*
OAIBTDiscountInfo::getPlanId() {
    return plan_id;
}
void
OAIBTDiscountInfo::setPlanId(QString* plan_id) {
    this->plan_id = plan_id;
    this->m_plan_id_isSet = true;
}

QString*
OAIBTDiscountInfo::getTrialEndDate() {
    return trial_end_date;
}
void
OAIBTDiscountInfo::setTrialEndDate(QString* trial_end_date) {
    this->trial_end_date = trial_end_date;
    this->m_trial_end_date_isSet = true;
}

QDateTime*
OAIBTDiscountInfo::getUsedAt() {
    return used_at;
}
void
OAIBTDiscountInfo::setUsedAt(QDateTime* used_at) {
    this->used_at = used_at;
    this->m_used_at_isSet = true;
}

QString*
OAIBTDiscountInfo::getViewRef() {
    return view_ref;
}
void
OAIBTDiscountInfo::setViewRef(QString* view_ref) {
    this->view_ref = view_ref;
    this->m_view_ref_isSet = true;
}


bool
OAIBTDiscountInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_account_balance_isSet){ isObjectUpdated = true; break;}
        if(m_amount_off_isSet){ isObjectUpdated = true; break;}
        if(m_coupon_type_isSet){ isObjectUpdated = true; break;}
        if(m_coupon_valid_months_isSet){ isObjectUpdated = true; break;}
        if(created_by != nullptr && created_by->isSet()){ isObjectUpdated = true; break;}
        if(href != nullptr && *href != QString("")){ isObjectUpdated = true; break;}
        if(id != nullptr && *id != QString("")){ isObjectUpdated = true; break;}
        if(name != nullptr && *name != QString("")){ isObjectUpdated = true; break;}
        if(owner_id != nullptr && *owner_id != QString("")){ isObjectUpdated = true; break;}
        if(m_percent_off_isSet){ isObjectUpdated = true; break;}
        if(plan_id != nullptr && *plan_id != QString("")){ isObjectUpdated = true; break;}
        if(trial_end_date != nullptr && *trial_end_date != QString("")){ isObjectUpdated = true; break;}
        if(view_ref != nullptr && *view_ref != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

