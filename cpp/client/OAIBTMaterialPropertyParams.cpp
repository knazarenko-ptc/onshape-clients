/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTMaterialPropertyParams.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTMaterialPropertyParams::OAIBTMaterialPropertyParams(QString json) {
    init();
    this->fromJson(json);
}

OAIBTMaterialPropertyParams::OAIBTMaterialPropertyParams() {
    init();
}

OAIBTMaterialPropertyParams::~OAIBTMaterialPropertyParams() {
    this->cleanup();
}

void
OAIBTMaterialPropertyParams::init() {
    category = new QString("");
    m_category_isSet = false;
    description = new QString("");
    m_description_isSet = false;
    display_name = new QString("");
    m_display_name_isSet = false;
    name = new QString("");
    m_name_isSet = false;
    type = new QString("");
    m_type_isSet = false;
    units = new QString("");
    m_units_isSet = false;
    value = new QString("");
    m_value_isSet = false;
}

void
OAIBTMaterialPropertyParams::cleanup() {
    if(category != nullptr) { 
        delete category;
    }
    if(description != nullptr) { 
        delete description;
    }
    if(display_name != nullptr) { 
        delete display_name;
    }
    if(name != nullptr) { 
        delete name;
    }
    if(type != nullptr) { 
        delete type;
    }
    if(units != nullptr) { 
        delete units;
    }
    if(value != nullptr) { 
        delete value;
    }
}

OAIBTMaterialPropertyParams*
OAIBTMaterialPropertyParams::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTMaterialPropertyParams::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&category, pJson["category"], "QString", "QString");
    
    ::OpenAPI::setValue(&description, pJson["description"], "QString", "QString");
    
    ::OpenAPI::setValue(&display_name, pJson["displayName"], "QString", "QString");
    
    ::OpenAPI::setValue(&name, pJson["name"], "QString", "QString");
    
    ::OpenAPI::setValue(&type, pJson["type"], "QString", "QString");
    
    ::OpenAPI::setValue(&units, pJson["units"], "QString", "QString");
    
    ::OpenAPI::setValue(&value, pJson["value"], "QString", "QString");
    
}

QString
OAIBTMaterialPropertyParams::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTMaterialPropertyParams::asJsonObject() {
    QJsonObject obj;
    if(category != nullptr && *category != QString("")){
        toJsonValue(QString("category"), category, obj, QString("QString"));
    }
    if(description != nullptr && *description != QString("")){
        toJsonValue(QString("description"), description, obj, QString("QString"));
    }
    if(display_name != nullptr && *display_name != QString("")){
        toJsonValue(QString("displayName"), display_name, obj, QString("QString"));
    }
    if(name != nullptr && *name != QString("")){
        toJsonValue(QString("name"), name, obj, QString("QString"));
    }
    if(type != nullptr && *type != QString("")){
        toJsonValue(QString("type"), type, obj, QString("QString"));
    }
    if(units != nullptr && *units != QString("")){
        toJsonValue(QString("units"), units, obj, QString("QString"));
    }
    if(value != nullptr && *value != QString("")){
        toJsonValue(QString("value"), value, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIBTMaterialPropertyParams::getCategory() {
    return category;
}
void
OAIBTMaterialPropertyParams::setCategory(QString* category) {
    this->category = category;
    this->m_category_isSet = true;
}

QString*
OAIBTMaterialPropertyParams::getDescription() {
    return description;
}
void
OAIBTMaterialPropertyParams::setDescription(QString* description) {
    this->description = description;
    this->m_description_isSet = true;
}

QString*
OAIBTMaterialPropertyParams::getDisplayName() {
    return display_name;
}
void
OAIBTMaterialPropertyParams::setDisplayName(QString* display_name) {
    this->display_name = display_name;
    this->m_display_name_isSet = true;
}

QString*
OAIBTMaterialPropertyParams::getName() {
    return name;
}
void
OAIBTMaterialPropertyParams::setName(QString* name) {
    this->name = name;
    this->m_name_isSet = true;
}

QString*
OAIBTMaterialPropertyParams::getType() {
    return type;
}
void
OAIBTMaterialPropertyParams::setType(QString* type) {
    this->type = type;
    this->m_type_isSet = true;
}

QString*
OAIBTMaterialPropertyParams::getUnits() {
    return units;
}
void
OAIBTMaterialPropertyParams::setUnits(QString* units) {
    this->units = units;
    this->m_units_isSet = true;
}

QString*
OAIBTMaterialPropertyParams::getValue() {
    return value;
}
void
OAIBTMaterialPropertyParams::setValue(QString* value) {
    this->value = value;
    this->m_value_isSet = true;
}


bool
OAIBTMaterialPropertyParams::isSet(){
    bool isObjectUpdated = false;
    do{
        if(category != nullptr && *category != QString("")){ isObjectUpdated = true; break;}
        if(description != nullptr && *description != QString("")){ isObjectUpdated = true; break;}
        if(display_name != nullptr && *display_name != QString("")){ isObjectUpdated = true; break;}
        if(name != nullptr && *name != QString("")){ isObjectUpdated = true; break;}
        if(type != nullptr && *type != QString("")){ isObjectUpdated = true; break;}
        if(units != nullptr && *units != QString("")){ isObjectUpdated = true; break;}
        if(value != nullptr && *value != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

