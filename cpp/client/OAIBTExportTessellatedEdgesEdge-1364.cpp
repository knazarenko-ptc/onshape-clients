/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTExportTessellatedEdgesEdge-1364.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTExportTessellatedEdgesEdge-1364::OAIBTExportTessellatedEdgesEdge-1364(QString json) {
    init();
    this->fromJson(json);
}

OAIBTExportTessellatedEdgesEdge-1364::OAIBTExportTessellatedEdgesEdge-1364() {
    init();
}

OAIBTExportTessellatedEdgesEdge-1364::~OAIBTExportTessellatedEdgesEdge-1364() {
    this->cleanup();
}

void
OAIBTExportTessellatedEdgesEdge-1364::init() {
    bt_type = new QString("");
    m_bt_type_isSet = false;
    id = new QString("");
    m_id_isSet = false;
    vertices = new QList<OAIBTVector3d-389*>();
    m_vertices_isSet = false;
}

void
OAIBTExportTessellatedEdgesEdge-1364::cleanup() {
    if(bt_type != nullptr) { 
        delete bt_type;
    }
    if(id != nullptr) { 
        delete id;
    }
    if(vertices != nullptr) { 
        auto arr = vertices;
        for(auto o: *arr) { 
            delete o;
        }
        delete vertices;
    }
}

OAIBTExportTessellatedEdgesEdge-1364*
OAIBTExportTessellatedEdgesEdge-1364::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTExportTessellatedEdgesEdge-1364::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&bt_type, pJson["btType"], "QString", "QString");
    
    ::OpenAPI::setValue(&id, pJson["id"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&vertices, pJson["vertices"], "QList", "OAIBTVector3d-389");
}

QString
OAIBTExportTessellatedEdgesEdge-1364::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTExportTessellatedEdgesEdge-1364::asJsonObject() {
    QJsonObject obj;
    if(bt_type != nullptr && *bt_type != QString("")){
        toJsonValue(QString("btType"), bt_type, obj, QString("QString"));
    }
    if(id != nullptr && *id != QString("")){
        toJsonValue(QString("id"), id, obj, QString("QString"));
    }
    if(vertices->size() > 0){
        toJsonArray((QList<void*>*)vertices, obj, "vertices", "OAIBTVector3d-389");
    }

    return obj;
}

QString*
OAIBTExportTessellatedEdgesEdge-1364::getBtType() {
    return bt_type;
}
void
OAIBTExportTessellatedEdgesEdge-1364::setBtType(QString* bt_type) {
    this->bt_type = bt_type;
    this->m_bt_type_isSet = true;
}

QString*
OAIBTExportTessellatedEdgesEdge-1364::getId() {
    return id;
}
void
OAIBTExportTessellatedEdgesEdge-1364::setId(QString* id) {
    this->id = id;
    this->m_id_isSet = true;
}

QList<OAIBTVector3d-389*>*
OAIBTExportTessellatedEdgesEdge-1364::getVertices() {
    return vertices;
}
void
OAIBTExportTessellatedEdgesEdge-1364::setVertices(QList<OAIBTVector3d-389*>* vertices) {
    this->vertices = vertices;
    this->m_vertices_isSet = true;
}


bool
OAIBTExportTessellatedEdgesEdge-1364::isSet(){
    bool isObjectUpdated = false;
    do{
        if(bt_type != nullptr && *bt_type != QString("")){ isObjectUpdated = true; break;}
        if(id != nullptr && *id != QString("")){ isObjectUpdated = true; break;}
        if(vertices->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

