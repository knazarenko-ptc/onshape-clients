/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTPublishedWorkflowId.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTPublishedWorkflowId::OAIBTPublishedWorkflowId(QString json) {
    init();
    this->fromJson(json);
}

OAIBTPublishedWorkflowId::OAIBTPublishedWorkflowId() {
    init();
}

OAIBTPublishedWorkflowId::~OAIBTPublishedWorkflowId() {
    this->cleanup();
}

void
OAIBTPublishedWorkflowId::init() {
    company_id = new QString("");
    m_company_id_isSet = false;
    version_id = new QString("");
    m_version_id_isSet = false;
    workflow_id = new QString("");
    m_workflow_id_isSet = false;
}

void
OAIBTPublishedWorkflowId::cleanup() {
    if(company_id != nullptr) { 
        delete company_id;
    }
    if(version_id != nullptr) { 
        delete version_id;
    }
    if(workflow_id != nullptr) { 
        delete workflow_id;
    }
}

OAIBTPublishedWorkflowId*
OAIBTPublishedWorkflowId::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTPublishedWorkflowId::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&company_id, pJson["companyId"], "QString", "QString");
    
    ::OpenAPI::setValue(&version_id, pJson["versionId"], "QString", "QString");
    
    ::OpenAPI::setValue(&workflow_id, pJson["workflowId"], "QString", "QString");
    
}

QString
OAIBTPublishedWorkflowId::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTPublishedWorkflowId::asJsonObject() {
    QJsonObject obj;
    if(company_id != nullptr && *company_id != QString("")){
        toJsonValue(QString("companyId"), company_id, obj, QString("QString"));
    }
    if(version_id != nullptr && *version_id != QString("")){
        toJsonValue(QString("versionId"), version_id, obj, QString("QString"));
    }
    if(workflow_id != nullptr && *workflow_id != QString("")){
        toJsonValue(QString("workflowId"), workflow_id, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIBTPublishedWorkflowId::getCompanyId() {
    return company_id;
}
void
OAIBTPublishedWorkflowId::setCompanyId(QString* company_id) {
    this->company_id = company_id;
    this->m_company_id_isSet = true;
}

QString*
OAIBTPublishedWorkflowId::getVersionId() {
    return version_id;
}
void
OAIBTPublishedWorkflowId::setVersionId(QString* version_id) {
    this->version_id = version_id;
    this->m_version_id_isSet = true;
}

QString*
OAIBTPublishedWorkflowId::getWorkflowId() {
    return workflow_id;
}
void
OAIBTPublishedWorkflowId::setWorkflowId(QString* workflow_id) {
    this->workflow_id = workflow_id;
    this->m_workflow_id_isSet = true;
}


bool
OAIBTPublishedWorkflowId::isSet(){
    bool isObjectUpdated = false;
    do{
        if(company_id != nullptr && *company_id != QString("")){ isObjectUpdated = true; break;}
        if(version_id != nullptr && *version_id != QString("")){ isObjectUpdated = true; break;}
        if(workflow_id != nullptr && *workflow_id != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

