/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTGraphicsAppearance-1152.h
 *
 * 
 */

#ifndef OAIBTGraphicsAppearance-1152_H_
#define OAIBTGraphicsAppearance-1152_H_

#include <QJsonObject>


#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTGraphicsAppearance-1152: public OAIObject {
public:
    OAIBTGraphicsAppearance-1152();
    OAIBTGraphicsAppearance-1152(QString json);
    ~OAIBTGraphicsAppearance-1152();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTGraphicsAppearance-1152* fromJson(QString jsonString) override;

    QString* getBtType();
    void setBtType(QString* bt_type);

    QList<QByteArray*>* getColor();
    void setColor(QList<QByteArray*>* color);

    bool isNonTrivial();
    void setNonTrivial(bool non_trivial);

    qint32 getOpacity();
    void setOpacity(qint32 opacity);

    bool isReset();
    void setReset(bool reset);

    QList<QByteArray*>* getRgbaColor();
    void setRgbaColor(QList<QByteArray*>* rgba_color);

    bool isUsableAppearance();
    void setUsableAppearance(bool usable_appearance);


    virtual bool isSet() override;

private:
    QString* bt_type;
    bool m_bt_type_isSet;

    QList<QByteArray*>* color;
    bool m_color_isSet;

    bool non_trivial;
    bool m_non_trivial_isSet;

    qint32 opacity;
    bool m_opacity_isSet;

    bool reset;
    bool m_reset_isSet;

    QList<QByteArray*>* rgba_color;
    bool m_rgba_color_isSet;

    bool usable_appearance;
    bool m_usable_appearance_isSet;

};

}

#endif /* OAIBTGraphicsAppearance-1152_H_ */
