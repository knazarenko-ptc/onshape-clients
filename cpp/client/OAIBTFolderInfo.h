/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTFolderInfo.h
 *
 * 
 */

#ifndef OAIBTFolderInfo_H_
#define OAIBTFolderInfo_H_

#include <QJsonObject>


#include "OAIBTGlobalTreeNodeInfo.h"
#include "OAIBTOwnerInfo.h"
#include "OAIBTPermissionSet.h"
#include "OAIBTUserBasicSummaryInfo.h"
#include <QDateTime>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTFolderInfo: public OAIObject {
public:
    OAIBTFolderInfo();
    OAIBTFolderInfo(QString json);
    ~OAIBTFolderInfo();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTFolderInfo* fromJson(QString jsonString) override;

    bool isCanMove();
    void setCanMove(bool can_move);

    QDateTime* getCreatedAt();
    void setCreatedAt(QDateTime* created_at);

    OAIBTUserBasicSummaryInfo* getCreatedBy();
    void setCreatedBy(OAIBTUserBasicSummaryInfo* created_by);

    QString* getDescription();
    void setDescription(QString* description);

    bool isHasPendingOwner();
    void setHasPendingOwner(bool has_pending_owner);

    QString* getHref();
    void setHref(QString* href);

    QString* getId();
    void setId(QString* id);

    bool isIsContainer();
    void setIsContainer(bool is_container);

    bool isIsEnterpriseOwned();
    void setIsEnterpriseOwned(bool is_enterprise_owned);

    bool isIsMutable();
    void setIsMutable(bool is_mutable);

    QString* getJsonType();
    void setJsonType(QString* json_type);

    QDateTime* getModifiedAt();
    void setModifiedAt(QDateTime* modified_at);

    OAIBTUserBasicSummaryInfo* getModifiedBy();
    void setModifiedBy(OAIBTUserBasicSummaryInfo* modified_by);

    QString* getName();
    void setName(QString* name);

    OAIBTOwnerInfo* getOwner();
    void setOwner(OAIBTOwnerInfo* owner);

    QString* getProjectId();
    void setProjectId(QString* project_id);

    QString* getResourceType();
    void setResourceType(QString* resource_type);

    QString* getTreeHref();
    void setTreeHref(QString* tree_href);

    QString* getViewRef();
    void setViewRef(QString* view_ref);

    QString* getParentId();
    void setParentId(QString* parent_id);

    OAIBTPermissionSet* getPermissionSet();
    void setPermissionSet(OAIBTPermissionSet* permission_set);

    bool isTrash();
    void setTrash(bool trash);

    bool isCanUnshare();
    void setCanUnshare(bool can_unshare);

    bool isActive();
    void setActive(bool active);

    QDateTime* getTrashedAt();
    void setTrashedAt(QDateTime* trashed_at);

    bool isIsOrphaned();
    void setIsOrphaned(bool is_orphaned);


    virtual bool isSet() override;

private:
    bool can_move;
    bool m_can_move_isSet;

    QDateTime* created_at;
    bool m_created_at_isSet;

    OAIBTUserBasicSummaryInfo* created_by;
    bool m_created_by_isSet;

    QString* description;
    bool m_description_isSet;

    bool has_pending_owner;
    bool m_has_pending_owner_isSet;

    QString* href;
    bool m_href_isSet;

    QString* id;
    bool m_id_isSet;

    bool is_container;
    bool m_is_container_isSet;

    bool is_enterprise_owned;
    bool m_is_enterprise_owned_isSet;

    bool is_mutable;
    bool m_is_mutable_isSet;

    QString* json_type;
    bool m_json_type_isSet;

    QDateTime* modified_at;
    bool m_modified_at_isSet;

    OAIBTUserBasicSummaryInfo* modified_by;
    bool m_modified_by_isSet;

    QString* name;
    bool m_name_isSet;

    OAIBTOwnerInfo* owner;
    bool m_owner_isSet;

    QString* project_id;
    bool m_project_id_isSet;

    QString* resource_type;
    bool m_resource_type_isSet;

    QString* tree_href;
    bool m_tree_href_isSet;

    QString* view_ref;
    bool m_view_ref_isSet;

    QString* parent_id;
    bool m_parent_id_isSet;

    OAIBTPermissionSet* permission_set;
    bool m_permission_set_isSet;

    bool trash;
    bool m_trash_isSet;

    bool can_unshare;
    bool m_can_unshare_isSet;

    bool active;
    bool m_active_isSet;

    QDateTime* trashed_at;
    bool m_trashed_at_isSet;

    bool is_orphaned;
    bool m_is_orphaned_isSet;

};

}

#endif /* OAIBTFolderInfo_H_ */
