/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTMetadataPropertyConfigSummaryInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTMetadataPropertyConfigSummaryInfo::OAIBTMetadataPropertyConfigSummaryInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTMetadataPropertyConfigSummaryInfo::OAIBTMetadataPropertyConfigSummaryInfo() {
    init();
}

OAIBTMetadataPropertyConfigSummaryInfo::~OAIBTMetadataPropertyConfigSummaryInfo() {
    this->cleanup();
}

void
OAIBTMetadataPropertyConfigSummaryInfo::init() {
    category_id = new QString("");
    m_category_id_isSet = false;
    category_summary_info = new OAIBTMetadataCategorySummaryInfo();
    m_category_summary_info_isSet = false;
    display_name = new QString("");
    m_display_name_isSet = false;
    object_type = 0;
    m_object_type_isSet = false;
    property_id = new QString("");
    m_property_id_isSet = false;
    publish_state = 0;
    m_publish_state_isSet = false;
    schema_id = new QString("");
    m_schema_id_isSet = false;
}

void
OAIBTMetadataPropertyConfigSummaryInfo::cleanup() {
    if(category_id != nullptr) { 
        delete category_id;
    }
    if(category_summary_info != nullptr) { 
        delete category_summary_info;
    }
    if(display_name != nullptr) { 
        delete display_name;
    }

    if(property_id != nullptr) { 
        delete property_id;
    }

    if(schema_id != nullptr) { 
        delete schema_id;
    }
}

OAIBTMetadataPropertyConfigSummaryInfo*
OAIBTMetadataPropertyConfigSummaryInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTMetadataPropertyConfigSummaryInfo::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&category_id, pJson["categoryId"], "QString", "QString");
    
    ::OpenAPI::setValue(&category_summary_info, pJson["categorySummaryInfo"], "OAIBTMetadataCategorySummaryInfo", "OAIBTMetadataCategorySummaryInfo");
    
    ::OpenAPI::setValue(&display_name, pJson["displayName"], "QString", "QString");
    
    ::OpenAPI::setValue(&object_type, pJson["objectType"], "qint32", "");
    
    ::OpenAPI::setValue(&property_id, pJson["propertyId"], "QString", "QString");
    
    ::OpenAPI::setValue(&publish_state, pJson["publishState"], "qint32", "");
    
    ::OpenAPI::setValue(&schema_id, pJson["schemaId"], "QString", "QString");
    
}

QString
OAIBTMetadataPropertyConfigSummaryInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTMetadataPropertyConfigSummaryInfo::asJsonObject() {
    QJsonObject obj;
    if(category_id != nullptr && *category_id != QString("")){
        toJsonValue(QString("categoryId"), category_id, obj, QString("QString"));
    }
    if((category_summary_info != nullptr) && (category_summary_info->isSet())){
        toJsonValue(QString("categorySummaryInfo"), category_summary_info, obj, QString("OAIBTMetadataCategorySummaryInfo"));
    }
    if(display_name != nullptr && *display_name != QString("")){
        toJsonValue(QString("displayName"), display_name, obj, QString("QString"));
    }
    if(m_object_type_isSet){
        obj.insert("objectType", QJsonValue(object_type));
    }
    if(property_id != nullptr && *property_id != QString("")){
        toJsonValue(QString("propertyId"), property_id, obj, QString("QString"));
    }
    if(m_publish_state_isSet){
        obj.insert("publishState", QJsonValue(publish_state));
    }
    if(schema_id != nullptr && *schema_id != QString("")){
        toJsonValue(QString("schemaId"), schema_id, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIBTMetadataPropertyConfigSummaryInfo::getCategoryId() {
    return category_id;
}
void
OAIBTMetadataPropertyConfigSummaryInfo::setCategoryId(QString* category_id) {
    this->category_id = category_id;
    this->m_category_id_isSet = true;
}

OAIBTMetadataCategorySummaryInfo*
OAIBTMetadataPropertyConfigSummaryInfo::getCategorySummaryInfo() {
    return category_summary_info;
}
void
OAIBTMetadataPropertyConfigSummaryInfo::setCategorySummaryInfo(OAIBTMetadataCategorySummaryInfo* category_summary_info) {
    this->category_summary_info = category_summary_info;
    this->m_category_summary_info_isSet = true;
}

QString*
OAIBTMetadataPropertyConfigSummaryInfo::getDisplayName() {
    return display_name;
}
void
OAIBTMetadataPropertyConfigSummaryInfo::setDisplayName(QString* display_name) {
    this->display_name = display_name;
    this->m_display_name_isSet = true;
}

qint32
OAIBTMetadataPropertyConfigSummaryInfo::getObjectType() {
    return object_type;
}
void
OAIBTMetadataPropertyConfigSummaryInfo::setObjectType(qint32 object_type) {
    this->object_type = object_type;
    this->m_object_type_isSet = true;
}

QString*
OAIBTMetadataPropertyConfigSummaryInfo::getPropertyId() {
    return property_id;
}
void
OAIBTMetadataPropertyConfigSummaryInfo::setPropertyId(QString* property_id) {
    this->property_id = property_id;
    this->m_property_id_isSet = true;
}

qint32
OAIBTMetadataPropertyConfigSummaryInfo::getPublishState() {
    return publish_state;
}
void
OAIBTMetadataPropertyConfigSummaryInfo::setPublishState(qint32 publish_state) {
    this->publish_state = publish_state;
    this->m_publish_state_isSet = true;
}

QString*
OAIBTMetadataPropertyConfigSummaryInfo::getSchemaId() {
    return schema_id;
}
void
OAIBTMetadataPropertyConfigSummaryInfo::setSchemaId(QString* schema_id) {
    this->schema_id = schema_id;
    this->m_schema_id_isSet = true;
}


bool
OAIBTMetadataPropertyConfigSummaryInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(category_id != nullptr && *category_id != QString("")){ isObjectUpdated = true; break;}
        if(category_summary_info != nullptr && category_summary_info->isSet()){ isObjectUpdated = true; break;}
        if(display_name != nullptr && *display_name != QString("")){ isObjectUpdated = true; break;}
        if(m_object_type_isSet){ isObjectUpdated = true; break;}
        if(property_id != nullptr && *property_id != QString("")){ isObjectUpdated = true; break;}
        if(m_publish_state_isSet){ isObjectUpdated = true; break;}
        if(schema_id != nullptr && *schema_id != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

