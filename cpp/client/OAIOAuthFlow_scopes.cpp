/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOAuthFlow_scopes.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOAuthFlow_scopes::OAIOAuthFlow_scopes(QString json) {
    init();
    this->fromJson(json);
}

OAIOAuthFlow_scopes::OAIOAuthFlow_scopes() {
    init();
}

OAIOAuthFlow_scopes::~OAIOAuthFlow_scopes() {
    this->cleanup();
}

void
OAIOAuthFlow_scopes::init() {
    extensions = new QMap<QString, OAIObject*>();
    m_extensions_isSet = false;
    empty = false;
    m_empty_isSet = false;
}

void
OAIOAuthFlow_scopes::cleanup() {
    if(extensions != nullptr) { 
        auto arr = extensions;
        for(auto o: *arr) { 
            delete o;
        }
        delete extensions;
    }

}

OAIOAuthFlow_scopes*
OAIOAuthFlow_scopes::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOAuthFlow_scopes::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&extensions, pJson["extensions"], "QMap", "OAIObject");
    ::OpenAPI::setValue(&empty, pJson["empty"], "bool", "");
    
}

QString
OAIOAuthFlow_scopes::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOAuthFlow_scopes::asJsonObject() {
    QJsonObject obj;
    if(extensions->size() > 0){
        toJsonMap((QMap<QString, void*>*) extensions, obj, "extensions", "OAIObject");
    }
    if(m_empty_isSet){
        obj.insert("empty", QJsonValue(empty));
    }

    return obj;
}

QMap<QString, OAIObject*>*
OAIOAuthFlow_scopes::getExtensions() {
    return extensions;
}
void
OAIOAuthFlow_scopes::setExtensions(QMap<QString, OAIObject*>* extensions) {
    this->extensions = extensions;
    this->m_extensions_isSet = true;
}

bool
OAIOAuthFlow_scopes::isEmpty() {
    return empty;
}
void
OAIOAuthFlow_scopes::setEmpty(bool empty) {
    this->empty = empty;
    this->m_empty_isSet = true;
}


bool
OAIOAuthFlow_scopes::isSet(){
    bool isObjectUpdated = false;
    do{
        if(extensions->size() > 0){ isObjectUpdated = true; break;}
        if(m_empty_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

