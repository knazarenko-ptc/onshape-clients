/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomer.h
 *
 * 
 */

#ifndef OAICustomer_H_
#define OAICustomer_H_

#include <QJsonObject>


#include "OAICustomerCardCollection.h"
#include "OAICustomerSubscriptionCollection.h"
#include "OAIDiscount.h"
#include "OAIExternalAccount.h"
#include "OAIExternalAccountCollection.h"
#include "OAINextRecurringCharge.h"
#include "OAIShippingDetails.h"
#include "OAISubscription.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAICustomer: public OAIObject {
public:
    OAICustomer();
    OAICustomer(QString json);
    ~OAICustomer();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAICustomer* fromJson(QString jsonString) override;

    qint64 getAccountBalance();
    void setAccountBalance(qint64 account_balance);

    QString* getBusinessVatId();
    void setBusinessVatId(QString* business_vat_id);

    OAICustomerCardCollection* getCards();
    void setCards(OAICustomerCardCollection* cards);

    qint64 getCreated();
    void setCreated(qint64 created);

    QString* getCurrency();
    void setCurrency(QString* currency);

    QString* getDefaultCard();
    void setDefaultCard(QString* default_card);

    QString* getDefaultSource();
    void setDefaultSource(QString* default_source);

    OAIExternalAccount* getDefaultSourceObject();
    void setDefaultSourceObject(OAIExternalAccount* default_source_object);

    bool isDeleted();
    void setDeleted(bool deleted);

    bool isDelinquent();
    void setDelinquent(bool delinquent);

    QString* getDescription();
    void setDescription(QString* description);

    OAIDiscount* getDiscount();
    void setDiscount(OAIDiscount* discount);

    QString* getEmail();
    void setEmail(QString* email);

    QString* getId();
    void setId(QString* id);

    bool isLivemode();
    void setLivemode(bool livemode);

    QMap<QString, QString*>* getMetadata();
    void setMetadata(QMap<QString, QString*>* metadata);

    OAINextRecurringCharge* getNextRecurringCharge();
    void setNextRecurringCharge(OAINextRecurringCharge* next_recurring_charge);

    QString* getObject();
    void setObject(QString* object);

    OAIShippingDetails* getShipping();
    void setShipping(OAIShippingDetails* shipping);

    OAIExternalAccountCollection* getSources();
    void setSources(OAIExternalAccountCollection* sources);

    OAISubscription* getSubscription();
    void setSubscription(OAISubscription* subscription);

    OAICustomerSubscriptionCollection* getSubscriptions();
    void setSubscriptions(OAICustomerSubscriptionCollection* subscriptions);

    qint64 getTrialEnd();
    void setTrialEnd(qint64 trial_end);


    virtual bool isSet() override;

private:
    qint64 account_balance;
    bool m_account_balance_isSet;

    QString* business_vat_id;
    bool m_business_vat_id_isSet;

    OAICustomerCardCollection* cards;
    bool m_cards_isSet;

    qint64 created;
    bool m_created_isSet;

    QString* currency;
    bool m_currency_isSet;

    QString* default_card;
    bool m_default_card_isSet;

    QString* default_source;
    bool m_default_source_isSet;

    OAIExternalAccount* default_source_object;
    bool m_default_source_object_isSet;

    bool deleted;
    bool m_deleted_isSet;

    bool delinquent;
    bool m_delinquent_isSet;

    QString* description;
    bool m_description_isSet;

    OAIDiscount* discount;
    bool m_discount_isSet;

    QString* email;
    bool m_email_isSet;

    QString* id;
    bool m_id_isSet;

    bool livemode;
    bool m_livemode_isSet;

    QMap<QString, QString*>* metadata;
    bool m_metadata_isSet;

    OAINextRecurringCharge* next_recurring_charge;
    bool m_next_recurring_charge_isSet;

    QString* object;
    bool m_object_isSet;

    OAIShippingDetails* shipping;
    bool m_shipping_isSet;

    OAIExternalAccountCollection* sources;
    bool m_sources_isSet;

    OAISubscription* subscription;
    bool m_subscription_isSet;

    OAICustomerSubscriptionCollection* subscriptions;
    bool m_subscriptions_isSet;

    qint64 trial_end;
    bool m_trial_end_isSet;

};

}

#endif /* OAICustomer_H_ */
