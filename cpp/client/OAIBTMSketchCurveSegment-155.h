/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTMSketchCurveSegment-155.h
 *
 * 
 */

#ifndef OAIBTMSketchCurveSegment-155_H_
#define OAIBTMSketchCurveSegment-155_H_

#include <QJsonObject>


#include "OAIBTCurveGeometry-114.h"
#include "OAIBTMParameter-1.h"
#include "OAIBTMSketchCurve-4.h"
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTMSketchCurveSegment-155: public OAIObject {
public:
    OAIBTMSketchCurveSegment-155();
    OAIBTMSketchCurveSegment-155(QString json);
    ~OAIBTMSketchCurveSegment-155();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTMSketchCurveSegment-155* fromJson(QString jsonString) override;

    QString* getBtType();
    void setBtType(QString* bt_type);

    QList<QString*>* getControlBoxIds();
    void setControlBoxIds(QList<QString*>* control_box_ids);

    QString* getEntityId();
    void setEntityId(QString* entity_id);

    QString* getEntityIdAndReplaceInDependentFields();
    void setEntityIdAndReplaceInDependentFields(QString* entity_id_and_replace_in_dependent_fields);

    QString* getImportMicroversion();
    void setImportMicroversion(QString* import_microversion);

    bool isIsConstruction();
    void setIsConstruction(bool is_construction);

    QString* getNamespace();
    void setNamespace(QString* _namespace);

    QString* getNodeId();
    void setNodeId(QString* node_id);

    QList<OAIBTMParameter-1*>* getParameters();
    void setParameters(QList<OAIBTMParameter-1*>* parameters);

    OAIBTCurveGeometry-114* getGeometry();
    void setGeometry(OAIBTCurveGeometry-114* geometry);

    QString* getCenterId();
    void setCenterId(QString* center_id);

    QList<QString*>* getInternalIds();
    void setInternalIds(QList<QString*>* internal_ids);

    QString* getStartPointId();
    void setStartPointId(QString* start_point_id);

    QString* getEndPointId();
    void setEndPointId(QString* end_point_id);

    double getStartParam();
    void setStartParam(double start_param);

    double getEndParam();
    void setEndParam(double end_param);


    virtual bool isSet() override;

private:
    QString* bt_type;
    bool m_bt_type_isSet;

    QList<QString*>* control_box_ids;
    bool m_control_box_ids_isSet;

    QString* entity_id;
    bool m_entity_id_isSet;

    QString* entity_id_and_replace_in_dependent_fields;
    bool m_entity_id_and_replace_in_dependent_fields_isSet;

    QString* import_microversion;
    bool m_import_microversion_isSet;

    bool is_construction;
    bool m_is_construction_isSet;

    QString* _namespace;
    bool m__namespace_isSet;

    QString* node_id;
    bool m_node_id_isSet;

    QList<OAIBTMParameter-1*>* parameters;
    bool m_parameters_isSet;

    OAIBTCurveGeometry-114* geometry;
    bool m_geometry_isSet;

    QString* center_id;
    bool m_center_id_isSet;

    QList<QString*>* internal_ids;
    bool m_internal_ids_isSet;

    QString* start_point_id;
    bool m_start_point_id_isSet;

    QString* end_point_id;
    bool m_end_point_id_isSet;

    double start_param;
    bool m_start_param_isSet;

    double end_param;
    bool m_end_param_isSet;

};

}

#endif /* OAIBTMSketchCurveSegment-155_H_ */
