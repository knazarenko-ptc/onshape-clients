/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTPStatementLoopFor3-278.h
 *
 * 
 */

#ifndef OAIBTPStatementLoopFor3-278_H_
#define OAIBTPStatementLoopFor3-278_H_

#include <QJsonObject>


#include "OAIBTPAnnotation-231.h"
#include "OAIBTPExpression-9.h"
#include "OAIBTPSpace-10.h"
#include "OAIBTPStatement-269.h"
#include "OAIBTPStatementLoop-277.h"
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTPStatementLoopFor3-278: public OAIObject {
public:
    OAIBTPStatementLoopFor3-278();
    OAIBTPStatementLoopFor3-278(QString json);
    ~OAIBTPStatementLoopFor3-278();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTPStatementLoopFor3-278* fromJson(QString jsonString) override;

    bool isAtomic();
    void setAtomic(bool atomic);

    QString* getBtType();
    void setBtType(QString* bt_type);

    QString* getDocumentationType();
    void setDocumentationType(QString* documentation_type);

    qint32 getEndSourceLocation();
    void setEndSourceLocation(qint32 end_source_location);

    QString* getNodeId();
    void setNodeId(QString* node_id);

    QString* getShortDescriptor();
    void setShortDescriptor(QString* short_descriptor);

    OAIBTPSpace-10* getSpaceAfter();
    void setSpaceAfter(OAIBTPSpace-10* space_after);

    OAIBTPSpace-10* getSpaceBefore();
    void setSpaceBefore(OAIBTPSpace-10* space_before);

    bool isSpaceDefault();
    void setSpaceDefault(bool space_default);

    qint32 getStartSourceLocation();
    void setStartSourceLocation(qint32 start_source_location);

    OAIBTPAnnotation-231* getAnnotation();
    void setAnnotation(OAIBTPAnnotation-231* annotation);

    OAIBTPStatement-269* getBody();
    void setBody(OAIBTPStatement-269* body);

    OAIBTPSpace-10* getSpaceAfterLoopType();
    void setSpaceAfterLoopType(OAIBTPSpace-10* space_after_loop_type);

    OAIBTPExpression-9* getCondition();
    void setCondition(OAIBTPExpression-9* condition);

    OAIBTPStatement-269* getInitialization();
    void setInitialization(OAIBTPStatement-269* initialization);

    OAIBTPSpace-10* getSpaceAfterInitialization();
    void setSpaceAfterInitialization(OAIBTPSpace-10* space_after_initialization);

    OAIBTPSpace-10* getSpaceBeforeCondition();
    void setSpaceBeforeCondition(OAIBTPSpace-10* space_before_condition);

    OAIBTPSpace-10* getSpaceBeforeIncrement();
    void setSpaceBeforeIncrement(OAIBTPSpace-10* space_before_increment);

    OAIBTPStatement-269* getIncrement();
    void setIncrement(OAIBTPStatement-269* increment);


    virtual bool isSet() override;

private:
    bool atomic;
    bool m_atomic_isSet;

    QString* bt_type;
    bool m_bt_type_isSet;

    QString* documentation_type;
    bool m_documentation_type_isSet;

    qint32 end_source_location;
    bool m_end_source_location_isSet;

    QString* node_id;
    bool m_node_id_isSet;

    QString* short_descriptor;
    bool m_short_descriptor_isSet;

    OAIBTPSpace-10* space_after;
    bool m_space_after_isSet;

    OAIBTPSpace-10* space_before;
    bool m_space_before_isSet;

    bool space_default;
    bool m_space_default_isSet;

    qint32 start_source_location;
    bool m_start_source_location_isSet;

    OAIBTPAnnotation-231* annotation;
    bool m_annotation_isSet;

    OAIBTPStatement-269* body;
    bool m_body_isSet;

    OAIBTPSpace-10* space_after_loop_type;
    bool m_space_after_loop_type_isSet;

    OAIBTPExpression-9* condition;
    bool m_condition_isSet;

    OAIBTPStatement-269* initialization;
    bool m_initialization_isSet;

    OAIBTPSpace-10* space_after_initialization;
    bool m_space_after_initialization_isSet;

    OAIBTPSpace-10* space_before_condition;
    bool m_space_before_condition_isSet;

    OAIBTPSpace-10* space_before_increment;
    bool m_space_before_increment_isSet;

    OAIBTPStatement-269* increment;
    bool m_increment_isSet;

};

}

#endif /* OAIBTPStatementLoopFor3-278_H_ */
