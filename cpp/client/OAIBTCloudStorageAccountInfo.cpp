/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTCloudStorageAccountInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTCloudStorageAccountInfo::OAIBTCloudStorageAccountInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTCloudStorageAccountInfo::OAIBTCloudStorageAccountInfo() {
    init();
}

OAIBTCloudStorageAccountInfo::~OAIBTCloudStorageAccountInfo() {
    this->cleanup();
}

void
OAIBTCloudStorageAccountInfo::init() {
    can_move = false;
    m_can_move_isSet = false;
    created_at = NULL;
    m_created_at_isSet = false;
    created_by = new OAIBTUserBasicSummaryInfo();
    m_created_by_isSet = false;
    description = new QString("");
    m_description_isSet = false;
    has_pending_owner = false;
    m_has_pending_owner_isSet = false;
    href = new QString("");
    m_href_isSet = false;
    id = new QString("");
    m_id_isSet = false;
    is_container = false;
    m_is_container_isSet = false;
    is_enterprise_owned = false;
    m_is_enterprise_owned_isSet = false;
    is_mutable = false;
    m_is_mutable_isSet = false;
    json_type = new QString("");
    m_json_type_isSet = false;
    modified_at = NULL;
    m_modified_at_isSet = false;
    modified_by = new OAIBTUserBasicSummaryInfo();
    m_modified_by_isSet = false;
    name = new QString("");
    m_name_isSet = false;
    owner = new OAIBTOwnerInfo();
    m_owner_isSet = false;
    project_id = new QString("");
    m_project_id_isSet = false;
    resource_type = new QString("");
    m_resource_type_isSet = false;
    tree_href = new QString("");
    m_tree_href_isSet = false;
    view_ref = new QString("");
    m_view_ref_isSet = false;
    cloud_storage_account_id_ = new QString("");
    m_cloud_storage_account_id__isSet = false;
    import_folder = new OAIBTCloudStorageObjectInfo();
    m_import_folder_isSet = false;
    export_folder = new OAIBTCloudStorageObjectInfo();
    m_export_folder_isSet = false;
    cloud_storage_provider = 0;
    m_cloud_storage_provider_isSet = false;
    cloud_storage_account_id = new QString("");
    m_cloud_storage_account_id_isSet = false;
    enabled = false;
    m_enabled_isSet = false;
}

void
OAIBTCloudStorageAccountInfo::cleanup() {

    if(created_at != nullptr) { 
        delete created_at;
    }
    if(created_by != nullptr) { 
        delete created_by;
    }
    if(description != nullptr) { 
        delete description;
    }

    if(href != nullptr) { 
        delete href;
    }
    if(id != nullptr) { 
        delete id;
    }



    if(json_type != nullptr) { 
        delete json_type;
    }
    if(modified_at != nullptr) { 
        delete modified_at;
    }
    if(modified_by != nullptr) { 
        delete modified_by;
    }
    if(name != nullptr) { 
        delete name;
    }
    if(owner != nullptr) { 
        delete owner;
    }
    if(project_id != nullptr) { 
        delete project_id;
    }
    if(resource_type != nullptr) { 
        delete resource_type;
    }
    if(tree_href != nullptr) { 
        delete tree_href;
    }
    if(view_ref != nullptr) { 
        delete view_ref;
    }
    if(cloud_storage_account_id_ != nullptr) { 
        delete cloud_storage_account_id_;
    }
    if(import_folder != nullptr) { 
        delete import_folder;
    }
    if(export_folder != nullptr) { 
        delete export_folder;
    }

    if(cloud_storage_account_id != nullptr) { 
        delete cloud_storage_account_id;
    }

}

OAIBTCloudStorageAccountInfo*
OAIBTCloudStorageAccountInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTCloudStorageAccountInfo::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&can_move, pJson["canMove"], "bool", "");
    
    ::OpenAPI::setValue(&created_at, pJson["createdAt"], "QDateTime", "QDateTime");
    
    ::OpenAPI::setValue(&created_by, pJson["createdBy"], "OAIBTUserBasicSummaryInfo", "OAIBTUserBasicSummaryInfo");
    
    ::OpenAPI::setValue(&description, pJson["description"], "QString", "QString");
    
    ::OpenAPI::setValue(&has_pending_owner, pJson["hasPendingOwner"], "bool", "");
    
    ::OpenAPI::setValue(&href, pJson["href"], "QString", "QString");
    
    ::OpenAPI::setValue(&id, pJson["id"], "QString", "QString");
    
    ::OpenAPI::setValue(&is_container, pJson["isContainer"], "bool", "");
    
    ::OpenAPI::setValue(&is_enterprise_owned, pJson["isEnterpriseOwned"], "bool", "");
    
    ::OpenAPI::setValue(&is_mutable, pJson["isMutable"], "bool", "");
    
    ::OpenAPI::setValue(&json_type, pJson["jsonType"], "QString", "QString");
    
    ::OpenAPI::setValue(&modified_at, pJson["modifiedAt"], "QDateTime", "QDateTime");
    
    ::OpenAPI::setValue(&modified_by, pJson["modifiedBy"], "OAIBTUserBasicSummaryInfo", "OAIBTUserBasicSummaryInfo");
    
    ::OpenAPI::setValue(&name, pJson["name"], "QString", "QString");
    
    ::OpenAPI::setValue(&owner, pJson["owner"], "OAIBTOwnerInfo", "OAIBTOwnerInfo");
    
    ::OpenAPI::setValue(&project_id, pJson["projectId"], "QString", "QString");
    
    ::OpenAPI::setValue(&resource_type, pJson["resourceType"], "QString", "QString");
    
    ::OpenAPI::setValue(&tree_href, pJson["treeHref"], "QString", "QString");
    
    ::OpenAPI::setValue(&view_ref, pJson["viewRef"], "QString", "QString");
    
    ::OpenAPI::setValue(&cloud_storage_account_id_, pJson["cloudStorageAccountId_"], "QString", "QString");
    
    ::OpenAPI::setValue(&import_folder, pJson["importFolder"], "OAIBTCloudStorageObjectInfo", "OAIBTCloudStorageObjectInfo");
    
    ::OpenAPI::setValue(&export_folder, pJson["exportFolder"], "OAIBTCloudStorageObjectInfo", "OAIBTCloudStorageObjectInfo");
    
    ::OpenAPI::setValue(&cloud_storage_provider, pJson["cloudStorageProvider"], "qint32", "");
    
    ::OpenAPI::setValue(&cloud_storage_account_id, pJson["cloudStorageAccountId"], "QString", "QString");
    
    ::OpenAPI::setValue(&enabled, pJson["enabled"], "bool", "");
    
}

QString
OAIBTCloudStorageAccountInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTCloudStorageAccountInfo::asJsonObject() {
    QJsonObject obj;
    if(m_can_move_isSet){
        obj.insert("canMove", QJsonValue(can_move));
    }
    if(created_at != nullptr) { 
        toJsonValue(QString("createdAt"), created_at, obj, QString("QDateTime"));
    }
    if((created_by != nullptr) && (created_by->isSet())){
        toJsonValue(QString("createdBy"), created_by, obj, QString("OAIBTUserBasicSummaryInfo"));
    }
    if(description != nullptr && *description != QString("")){
        toJsonValue(QString("description"), description, obj, QString("QString"));
    }
    if(m_has_pending_owner_isSet){
        obj.insert("hasPendingOwner", QJsonValue(has_pending_owner));
    }
    if(href != nullptr && *href != QString("")){
        toJsonValue(QString("href"), href, obj, QString("QString"));
    }
    if(id != nullptr && *id != QString("")){
        toJsonValue(QString("id"), id, obj, QString("QString"));
    }
    if(m_is_container_isSet){
        obj.insert("isContainer", QJsonValue(is_container));
    }
    if(m_is_enterprise_owned_isSet){
        obj.insert("isEnterpriseOwned", QJsonValue(is_enterprise_owned));
    }
    if(m_is_mutable_isSet){
        obj.insert("isMutable", QJsonValue(is_mutable));
    }
    if(json_type != nullptr && *json_type != QString("")){
        toJsonValue(QString("jsonType"), json_type, obj, QString("QString"));
    }
    if(modified_at != nullptr) { 
        toJsonValue(QString("modifiedAt"), modified_at, obj, QString("QDateTime"));
    }
    if((modified_by != nullptr) && (modified_by->isSet())){
        toJsonValue(QString("modifiedBy"), modified_by, obj, QString("OAIBTUserBasicSummaryInfo"));
    }
    if(name != nullptr && *name != QString("")){
        toJsonValue(QString("name"), name, obj, QString("QString"));
    }
    if((owner != nullptr) && (owner->isSet())){
        toJsonValue(QString("owner"), owner, obj, QString("OAIBTOwnerInfo"));
    }
    if(project_id != nullptr && *project_id != QString("")){
        toJsonValue(QString("projectId"), project_id, obj, QString("QString"));
    }
    if(resource_type != nullptr && *resource_type != QString("")){
        toJsonValue(QString("resourceType"), resource_type, obj, QString("QString"));
    }
    if(tree_href != nullptr && *tree_href != QString("")){
        toJsonValue(QString("treeHref"), tree_href, obj, QString("QString"));
    }
    if(view_ref != nullptr && *view_ref != QString("")){
        toJsonValue(QString("viewRef"), view_ref, obj, QString("QString"));
    }
    if(cloud_storage_account_id_ != nullptr && *cloud_storage_account_id_ != QString("")){
        toJsonValue(QString("cloudStorageAccountId_"), cloud_storage_account_id_, obj, QString("QString"));
    }
    if((import_folder != nullptr) && (import_folder->isSet())){
        toJsonValue(QString("importFolder"), import_folder, obj, QString("OAIBTCloudStorageObjectInfo"));
    }
    if((export_folder != nullptr) && (export_folder->isSet())){
        toJsonValue(QString("exportFolder"), export_folder, obj, QString("OAIBTCloudStorageObjectInfo"));
    }
    if(m_cloud_storage_provider_isSet){
        obj.insert("cloudStorageProvider", QJsonValue(cloud_storage_provider));
    }
    if(cloud_storage_account_id != nullptr && *cloud_storage_account_id != QString("")){
        toJsonValue(QString("cloudStorageAccountId"), cloud_storage_account_id, obj, QString("QString"));
    }
    if(m_enabled_isSet){
        obj.insert("enabled", QJsonValue(enabled));
    }

    return obj;
}

bool
OAIBTCloudStorageAccountInfo::isCanMove() {
    return can_move;
}
void
OAIBTCloudStorageAccountInfo::setCanMove(bool can_move) {
    this->can_move = can_move;
    this->m_can_move_isSet = true;
}

QDateTime*
OAIBTCloudStorageAccountInfo::getCreatedAt() {
    return created_at;
}
void
OAIBTCloudStorageAccountInfo::setCreatedAt(QDateTime* created_at) {
    this->created_at = created_at;
    this->m_created_at_isSet = true;
}

OAIBTUserBasicSummaryInfo*
OAIBTCloudStorageAccountInfo::getCreatedBy() {
    return created_by;
}
void
OAIBTCloudStorageAccountInfo::setCreatedBy(OAIBTUserBasicSummaryInfo* created_by) {
    this->created_by = created_by;
    this->m_created_by_isSet = true;
}

QString*
OAIBTCloudStorageAccountInfo::getDescription() {
    return description;
}
void
OAIBTCloudStorageAccountInfo::setDescription(QString* description) {
    this->description = description;
    this->m_description_isSet = true;
}

bool
OAIBTCloudStorageAccountInfo::isHasPendingOwner() {
    return has_pending_owner;
}
void
OAIBTCloudStorageAccountInfo::setHasPendingOwner(bool has_pending_owner) {
    this->has_pending_owner = has_pending_owner;
    this->m_has_pending_owner_isSet = true;
}

QString*
OAIBTCloudStorageAccountInfo::getHref() {
    return href;
}
void
OAIBTCloudStorageAccountInfo::setHref(QString* href) {
    this->href = href;
    this->m_href_isSet = true;
}

QString*
OAIBTCloudStorageAccountInfo::getId() {
    return id;
}
void
OAIBTCloudStorageAccountInfo::setId(QString* id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool
OAIBTCloudStorageAccountInfo::isIsContainer() {
    return is_container;
}
void
OAIBTCloudStorageAccountInfo::setIsContainer(bool is_container) {
    this->is_container = is_container;
    this->m_is_container_isSet = true;
}

bool
OAIBTCloudStorageAccountInfo::isIsEnterpriseOwned() {
    return is_enterprise_owned;
}
void
OAIBTCloudStorageAccountInfo::setIsEnterpriseOwned(bool is_enterprise_owned) {
    this->is_enterprise_owned = is_enterprise_owned;
    this->m_is_enterprise_owned_isSet = true;
}

bool
OAIBTCloudStorageAccountInfo::isIsMutable() {
    return is_mutable;
}
void
OAIBTCloudStorageAccountInfo::setIsMutable(bool is_mutable) {
    this->is_mutable = is_mutable;
    this->m_is_mutable_isSet = true;
}

QString*
OAIBTCloudStorageAccountInfo::getJsonType() {
    return json_type;
}
void
OAIBTCloudStorageAccountInfo::setJsonType(QString* json_type) {
    this->json_type = json_type;
    this->m_json_type_isSet = true;
}

QDateTime*
OAIBTCloudStorageAccountInfo::getModifiedAt() {
    return modified_at;
}
void
OAIBTCloudStorageAccountInfo::setModifiedAt(QDateTime* modified_at) {
    this->modified_at = modified_at;
    this->m_modified_at_isSet = true;
}

OAIBTUserBasicSummaryInfo*
OAIBTCloudStorageAccountInfo::getModifiedBy() {
    return modified_by;
}
void
OAIBTCloudStorageAccountInfo::setModifiedBy(OAIBTUserBasicSummaryInfo* modified_by) {
    this->modified_by = modified_by;
    this->m_modified_by_isSet = true;
}

QString*
OAIBTCloudStorageAccountInfo::getName() {
    return name;
}
void
OAIBTCloudStorageAccountInfo::setName(QString* name) {
    this->name = name;
    this->m_name_isSet = true;
}

OAIBTOwnerInfo*
OAIBTCloudStorageAccountInfo::getOwner() {
    return owner;
}
void
OAIBTCloudStorageAccountInfo::setOwner(OAIBTOwnerInfo* owner) {
    this->owner = owner;
    this->m_owner_isSet = true;
}

QString*
OAIBTCloudStorageAccountInfo::getProjectId() {
    return project_id;
}
void
OAIBTCloudStorageAccountInfo::setProjectId(QString* project_id) {
    this->project_id = project_id;
    this->m_project_id_isSet = true;
}

QString*
OAIBTCloudStorageAccountInfo::getResourceType() {
    return resource_type;
}
void
OAIBTCloudStorageAccountInfo::setResourceType(QString* resource_type) {
    this->resource_type = resource_type;
    this->m_resource_type_isSet = true;
}

QString*
OAIBTCloudStorageAccountInfo::getTreeHref() {
    return tree_href;
}
void
OAIBTCloudStorageAccountInfo::setTreeHref(QString* tree_href) {
    this->tree_href = tree_href;
    this->m_tree_href_isSet = true;
}

QString*
OAIBTCloudStorageAccountInfo::getViewRef() {
    return view_ref;
}
void
OAIBTCloudStorageAccountInfo::setViewRef(QString* view_ref) {
    this->view_ref = view_ref;
    this->m_view_ref_isSet = true;
}

QString*
OAIBTCloudStorageAccountInfo::getCloudStorageAccountId() {
    return cloud_storage_account_id_;
}
void
OAIBTCloudStorageAccountInfo::setCloudStorageAccountId(QString* cloud_storage_account_id_) {
    this->cloud_storage_account_id_ = cloud_storage_account_id_;
    this->m_cloud_storage_account_id__isSet = true;
}

OAIBTCloudStorageObjectInfo*
OAIBTCloudStorageAccountInfo::getImportFolder() {
    return import_folder;
}
void
OAIBTCloudStorageAccountInfo::setImportFolder(OAIBTCloudStorageObjectInfo* import_folder) {
    this->import_folder = import_folder;
    this->m_import_folder_isSet = true;
}

OAIBTCloudStorageObjectInfo*
OAIBTCloudStorageAccountInfo::getExportFolder() {
    return export_folder;
}
void
OAIBTCloudStorageAccountInfo::setExportFolder(OAIBTCloudStorageObjectInfo* export_folder) {
    this->export_folder = export_folder;
    this->m_export_folder_isSet = true;
}

qint32
OAIBTCloudStorageAccountInfo::getCloudStorageProvider() {
    return cloud_storage_provider;
}
void
OAIBTCloudStorageAccountInfo::setCloudStorageProvider(qint32 cloud_storage_provider) {
    this->cloud_storage_provider = cloud_storage_provider;
    this->m_cloud_storage_provider_isSet = true;
}

QString*
OAIBTCloudStorageAccountInfo::getCloudStorageAccountId() {
    return cloud_storage_account_id;
}
void
OAIBTCloudStorageAccountInfo::setCloudStorageAccountId(QString* cloud_storage_account_id) {
    this->cloud_storage_account_id = cloud_storage_account_id;
    this->m_cloud_storage_account_id_isSet = true;
}

bool
OAIBTCloudStorageAccountInfo::isEnabled() {
    return enabled;
}
void
OAIBTCloudStorageAccountInfo::setEnabled(bool enabled) {
    this->enabled = enabled;
    this->m_enabled_isSet = true;
}


bool
OAIBTCloudStorageAccountInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_can_move_isSet){ isObjectUpdated = true; break;}
        if(created_by != nullptr && created_by->isSet()){ isObjectUpdated = true; break;}
        if(description != nullptr && *description != QString("")){ isObjectUpdated = true; break;}
        if(m_has_pending_owner_isSet){ isObjectUpdated = true; break;}
        if(href != nullptr && *href != QString("")){ isObjectUpdated = true; break;}
        if(id != nullptr && *id != QString("")){ isObjectUpdated = true; break;}
        if(m_is_container_isSet){ isObjectUpdated = true; break;}
        if(m_is_enterprise_owned_isSet){ isObjectUpdated = true; break;}
        if(m_is_mutable_isSet){ isObjectUpdated = true; break;}
        if(json_type != nullptr && *json_type != QString("")){ isObjectUpdated = true; break;}
        if(modified_by != nullptr && modified_by->isSet()){ isObjectUpdated = true; break;}
        if(name != nullptr && *name != QString("")){ isObjectUpdated = true; break;}
        if(owner != nullptr && owner->isSet()){ isObjectUpdated = true; break;}
        if(project_id != nullptr && *project_id != QString("")){ isObjectUpdated = true; break;}
        if(resource_type != nullptr && *resource_type != QString("")){ isObjectUpdated = true; break;}
        if(tree_href != nullptr && *tree_href != QString("")){ isObjectUpdated = true; break;}
        if(view_ref != nullptr && *view_ref != QString("")){ isObjectUpdated = true; break;}
        if(cloud_storage_account_id_ != nullptr && *cloud_storage_account_id_ != QString("")){ isObjectUpdated = true; break;}
        if(import_folder != nullptr && import_folder->isSet()){ isObjectUpdated = true; break;}
        if(export_folder != nullptr && export_folder->isSet()){ isObjectUpdated = true; break;}
        if(m_cloud_storage_provider_isSet){ isObjectUpdated = true; break;}
        if(cloud_storage_account_id != nullptr && *cloud_storage_account_id != QString("")){ isObjectUpdated = true; break;}
        if(m_enabled_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

