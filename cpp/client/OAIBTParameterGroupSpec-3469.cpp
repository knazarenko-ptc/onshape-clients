/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTParameterGroupSpec-3469.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTParameterGroupSpec-3469::OAIBTParameterGroupSpec-3469(QString json) {
    init();
    this->fromJson(json);
}

OAIBTParameterGroupSpec-3469::OAIBTParameterGroupSpec-3469() {
    init();
}

OAIBTParameterGroupSpec-3469::~OAIBTParameterGroupSpec-3469() {
    this->cleanup();
}

void
OAIBTParameterGroupSpec-3469::init() {
    additional_localized_strings = 0;
    m_additional_localized_strings_isSet = false;
    collapsed_by_default = false;
    m_collapsed_by_default_isSet = false;
    driving_parameter_id = new QString("");
    m_driving_parameter_id_isSet = false;
    group_id = new QString("");
    m_group_id_isSet = false;
    group_name = new QString("");
    m_group_name_isSet = false;
    group_or_parameter_ids = new QList<QString*>();
    m_group_or_parameter_ids_isSet = false;
    localizable_name = new QString("");
    m_localizable_name_isSet = false;
    localized_name = new QString("");
    m_localized_name_isSet = false;
    strings_to_localize = new QList<QString*>();
    m_strings_to_localize_isSet = false;
}

void
OAIBTParameterGroupSpec-3469::cleanup() {


    if(driving_parameter_id != nullptr) { 
        delete driving_parameter_id;
    }
    if(group_id != nullptr) { 
        delete group_id;
    }
    if(group_name != nullptr) { 
        delete group_name;
    }
    if(group_or_parameter_ids != nullptr) { 
        auto arr = group_or_parameter_ids;
        for(auto o: *arr) { 
            delete o;
        }
        delete group_or_parameter_ids;
    }
    if(localizable_name != nullptr) { 
        delete localizable_name;
    }
    if(localized_name != nullptr) { 
        delete localized_name;
    }
    if(strings_to_localize != nullptr) { 
        auto arr = strings_to_localize;
        for(auto o: *arr) { 
            delete o;
        }
        delete strings_to_localize;
    }
}

OAIBTParameterGroupSpec-3469*
OAIBTParameterGroupSpec-3469::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTParameterGroupSpec-3469::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&additional_localized_strings, pJson["additionalLocalizedStrings"], "qint32", "");
    
    ::OpenAPI::setValue(&collapsed_by_default, pJson["collapsedByDefault"], "bool", "");
    
    ::OpenAPI::setValue(&driving_parameter_id, pJson["drivingParameterId"], "QString", "QString");
    
    ::OpenAPI::setValue(&group_id, pJson["groupId"], "QString", "QString");
    
    ::OpenAPI::setValue(&group_name, pJson["groupName"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&group_or_parameter_ids, pJson["groupOrParameterIds"], "QList", "QString");
    ::OpenAPI::setValue(&localizable_name, pJson["localizableName"], "QString", "QString");
    
    ::OpenAPI::setValue(&localized_name, pJson["localizedName"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&strings_to_localize, pJson["stringsToLocalize"], "QList", "QString");
}

QString
OAIBTParameterGroupSpec-3469::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTParameterGroupSpec-3469::asJsonObject() {
    QJsonObject obj;
    if(m_additional_localized_strings_isSet){
        obj.insert("additionalLocalizedStrings", QJsonValue(additional_localized_strings));
    }
    if(m_collapsed_by_default_isSet){
        obj.insert("collapsedByDefault", QJsonValue(collapsed_by_default));
    }
    if(driving_parameter_id != nullptr && *driving_parameter_id != QString("")){
        toJsonValue(QString("drivingParameterId"), driving_parameter_id, obj, QString("QString"));
    }
    if(group_id != nullptr && *group_id != QString("")){
        toJsonValue(QString("groupId"), group_id, obj, QString("QString"));
    }
    if(group_name != nullptr && *group_name != QString("")){
        toJsonValue(QString("groupName"), group_name, obj, QString("QString"));
    }
    if(group_or_parameter_ids->size() > 0){
        toJsonArray((QList<void*>*)group_or_parameter_ids, obj, "groupOrParameterIds", "QString");
    }
    if(localizable_name != nullptr && *localizable_name != QString("")){
        toJsonValue(QString("localizableName"), localizable_name, obj, QString("QString"));
    }
    if(localized_name != nullptr && *localized_name != QString("")){
        toJsonValue(QString("localizedName"), localized_name, obj, QString("QString"));
    }
    if(strings_to_localize->size() > 0){
        toJsonArray((QList<void*>*)strings_to_localize, obj, "stringsToLocalize", "QString");
    }

    return obj;
}

qint32
OAIBTParameterGroupSpec-3469::getAdditionalLocalizedStrings() {
    return additional_localized_strings;
}
void
OAIBTParameterGroupSpec-3469::setAdditionalLocalizedStrings(qint32 additional_localized_strings) {
    this->additional_localized_strings = additional_localized_strings;
    this->m_additional_localized_strings_isSet = true;
}

bool
OAIBTParameterGroupSpec-3469::isCollapsedByDefault() {
    return collapsed_by_default;
}
void
OAIBTParameterGroupSpec-3469::setCollapsedByDefault(bool collapsed_by_default) {
    this->collapsed_by_default = collapsed_by_default;
    this->m_collapsed_by_default_isSet = true;
}

QString*
OAIBTParameterGroupSpec-3469::getDrivingParameterId() {
    return driving_parameter_id;
}
void
OAIBTParameterGroupSpec-3469::setDrivingParameterId(QString* driving_parameter_id) {
    this->driving_parameter_id = driving_parameter_id;
    this->m_driving_parameter_id_isSet = true;
}

QString*
OAIBTParameterGroupSpec-3469::getGroupId() {
    return group_id;
}
void
OAIBTParameterGroupSpec-3469::setGroupId(QString* group_id) {
    this->group_id = group_id;
    this->m_group_id_isSet = true;
}

QString*
OAIBTParameterGroupSpec-3469::getGroupName() {
    return group_name;
}
void
OAIBTParameterGroupSpec-3469::setGroupName(QString* group_name) {
    this->group_name = group_name;
    this->m_group_name_isSet = true;
}

QList<QString*>*
OAIBTParameterGroupSpec-3469::getGroupOrParameterIds() {
    return group_or_parameter_ids;
}
void
OAIBTParameterGroupSpec-3469::setGroupOrParameterIds(QList<QString*>* group_or_parameter_ids) {
    this->group_or_parameter_ids = group_or_parameter_ids;
    this->m_group_or_parameter_ids_isSet = true;
}

QString*
OAIBTParameterGroupSpec-3469::getLocalizableName() {
    return localizable_name;
}
void
OAIBTParameterGroupSpec-3469::setLocalizableName(QString* localizable_name) {
    this->localizable_name = localizable_name;
    this->m_localizable_name_isSet = true;
}

QString*
OAIBTParameterGroupSpec-3469::getLocalizedName() {
    return localized_name;
}
void
OAIBTParameterGroupSpec-3469::setLocalizedName(QString* localized_name) {
    this->localized_name = localized_name;
    this->m_localized_name_isSet = true;
}

QList<QString*>*
OAIBTParameterGroupSpec-3469::getStringsToLocalize() {
    return strings_to_localize;
}
void
OAIBTParameterGroupSpec-3469::setStringsToLocalize(QList<QString*>* strings_to_localize) {
    this->strings_to_localize = strings_to_localize;
    this->m_strings_to_localize_isSet = true;
}


bool
OAIBTParameterGroupSpec-3469::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_additional_localized_strings_isSet){ isObjectUpdated = true; break;}
        if(m_collapsed_by_default_isSet){ isObjectUpdated = true; break;}
        if(driving_parameter_id != nullptr && *driving_parameter_id != QString("")){ isObjectUpdated = true; break;}
        if(group_id != nullptr && *group_id != QString("")){ isObjectUpdated = true; break;}
        if(group_name != nullptr && *group_name != QString("")){ isObjectUpdated = true; break;}
        if(group_or_parameter_ids->size() > 0){ isObjectUpdated = true; break;}
        if(localizable_name != nullptr && *localizable_name != QString("")){ isObjectUpdated = true; break;}
        if(localized_name != nullptr && *localized_name != QString("")){ isObjectUpdated = true; break;}
        if(strings_to_localize->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

