/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIThreeDSecure.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIThreeDSecure::OAIThreeDSecure(QString json) {
    init();
    this->fromJson(json);
}

OAIThreeDSecure::OAIThreeDSecure() {
    init();
}

OAIThreeDSecure::~OAIThreeDSecure() {
    this->cleanup();
}

void
OAIThreeDSecure::init() {
    amount = 0L;
    m_amount_isSet = false;
    authenticated = false;
    m_authenticated_isSet = false;
    card = new OAICard();
    m_card_isSet = false;
    created = 0L;
    m_created_isSet = false;
    currency = new QString("");
    m_currency_isSet = false;
    id = new QString("");
    m_id_isSet = false;
    livemode = false;
    m_livemode_isSet = false;
    object = new QString("");
    m_object_isSet = false;
    redirect_url = new QString("");
    m_redirect_url_isSet = false;
    status = new QString("");
    m_status_isSet = false;
}

void
OAIThreeDSecure::cleanup() {


    if(card != nullptr) { 
        delete card;
    }

    if(currency != nullptr) { 
        delete currency;
    }
    if(id != nullptr) { 
        delete id;
    }

    if(object != nullptr) { 
        delete object;
    }
    if(redirect_url != nullptr) { 
        delete redirect_url;
    }
    if(status != nullptr) { 
        delete status;
    }
}

OAIThreeDSecure*
OAIThreeDSecure::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIThreeDSecure::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&amount, pJson["amount"], "qint64", "");
    
    ::OpenAPI::setValue(&authenticated, pJson["authenticated"], "bool", "");
    
    ::OpenAPI::setValue(&card, pJson["card"], "OAICard", "OAICard");
    
    ::OpenAPI::setValue(&created, pJson["created"], "qint64", "");
    
    ::OpenAPI::setValue(&currency, pJson["currency"], "QString", "QString");
    
    ::OpenAPI::setValue(&id, pJson["id"], "QString", "QString");
    
    ::OpenAPI::setValue(&livemode, pJson["livemode"], "bool", "");
    
    ::OpenAPI::setValue(&object, pJson["object"], "QString", "QString");
    
    ::OpenAPI::setValue(&redirect_url, pJson["redirectURL"], "QString", "QString");
    
    ::OpenAPI::setValue(&status, pJson["status"], "QString", "QString");
    
}

QString
OAIThreeDSecure::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIThreeDSecure::asJsonObject() {
    QJsonObject obj;
    if(m_amount_isSet){
        obj.insert("amount", QJsonValue(amount));
    }
    if(m_authenticated_isSet){
        obj.insert("authenticated", QJsonValue(authenticated));
    }
    if((card != nullptr) && (card->isSet())){
        toJsonValue(QString("card"), card, obj, QString("OAICard"));
    }
    if(m_created_isSet){
        obj.insert("created", QJsonValue(created));
    }
    if(currency != nullptr && *currency != QString("")){
        toJsonValue(QString("currency"), currency, obj, QString("QString"));
    }
    if(id != nullptr && *id != QString("")){
        toJsonValue(QString("id"), id, obj, QString("QString"));
    }
    if(m_livemode_isSet){
        obj.insert("livemode", QJsonValue(livemode));
    }
    if(object != nullptr && *object != QString("")){
        toJsonValue(QString("object"), object, obj, QString("QString"));
    }
    if(redirect_url != nullptr && *redirect_url != QString("")){
        toJsonValue(QString("redirectURL"), redirect_url, obj, QString("QString"));
    }
    if(status != nullptr && *status != QString("")){
        toJsonValue(QString("status"), status, obj, QString("QString"));
    }

    return obj;
}

qint64
OAIThreeDSecure::getAmount() {
    return amount;
}
void
OAIThreeDSecure::setAmount(qint64 amount) {
    this->amount = amount;
    this->m_amount_isSet = true;
}

bool
OAIThreeDSecure::isAuthenticated() {
    return authenticated;
}
void
OAIThreeDSecure::setAuthenticated(bool authenticated) {
    this->authenticated = authenticated;
    this->m_authenticated_isSet = true;
}

OAICard*
OAIThreeDSecure::getCard() {
    return card;
}
void
OAIThreeDSecure::setCard(OAICard* card) {
    this->card = card;
    this->m_card_isSet = true;
}

qint64
OAIThreeDSecure::getCreated() {
    return created;
}
void
OAIThreeDSecure::setCreated(qint64 created) {
    this->created = created;
    this->m_created_isSet = true;
}

QString*
OAIThreeDSecure::getCurrency() {
    return currency;
}
void
OAIThreeDSecure::setCurrency(QString* currency) {
    this->currency = currency;
    this->m_currency_isSet = true;
}

QString*
OAIThreeDSecure::getId() {
    return id;
}
void
OAIThreeDSecure::setId(QString* id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool
OAIThreeDSecure::isLivemode() {
    return livemode;
}
void
OAIThreeDSecure::setLivemode(bool livemode) {
    this->livemode = livemode;
    this->m_livemode_isSet = true;
}

QString*
OAIThreeDSecure::getObject() {
    return object;
}
void
OAIThreeDSecure::setObject(QString* object) {
    this->object = object;
    this->m_object_isSet = true;
}

QString*
OAIThreeDSecure::getRedirectUrl() {
    return redirect_url;
}
void
OAIThreeDSecure::setRedirectUrl(QString* redirect_url) {
    this->redirect_url = redirect_url;
    this->m_redirect_url_isSet = true;
}

QString*
OAIThreeDSecure::getStatus() {
    return status;
}
void
OAIThreeDSecure::setStatus(QString* status) {
    this->status = status;
    this->m_status_isSet = true;
}


bool
OAIThreeDSecure::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_amount_isSet){ isObjectUpdated = true; break;}
        if(m_authenticated_isSet){ isObjectUpdated = true; break;}
        if(card != nullptr && card->isSet()){ isObjectUpdated = true; break;}
        if(m_created_isSet){ isObjectUpdated = true; break;}
        if(currency != nullptr && *currency != QString("")){ isObjectUpdated = true; break;}
        if(id != nullptr && *id != QString("")){ isObjectUpdated = true; break;}
        if(m_livemode_isSet){ isObjectUpdated = true; break;}
        if(object != nullptr && *object != QString("")){ isObjectUpdated = true; break;}
        if(redirect_url != nullptr && *redirect_url != QString("")){ isObjectUpdated = true; break;}
        if(status != nullptr && *status != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

