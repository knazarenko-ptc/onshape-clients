/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTMetadataPropertySummaryInfo.h
 *
 * 
 */

#ifndef OAIBTMetadataPropertySummaryInfo_H_
#define OAIBTMetadataPropertySummaryInfo_H_

#include <QJsonObject>


#include "OAIBTMetadataPropertyConfigSummaryInfo.h"
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTMetadataPropertySummaryInfo: public OAIObject {
public:
    OAIBTMetadataPropertySummaryInfo();
    OAIBTMetadataPropertySummaryInfo(QString json);
    ~OAIBTMetadataPropertySummaryInfo();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTMetadataPropertySummaryInfo* fromJson(QString jsonString) override;

    QString* getDescription();
    void setDescription(QString* description);

    bool isEditableInMicroversion();
    void setEditableInMicroversion(bool editable_in_microversion);

    bool isEditableInVersion();
    void setEditableInVersion(bool editable_in_version);

    QString* getHref();
    void setHref(QString* href);

    QString* getId();
    void setId(QString* id);

    QString* getName();
    void setName(QString* name);

    QString* getNamespace();
    void setNamespace(QString* _namespace);

    QString* getOwnerId();
    void setOwnerId(QString* owner_id);

    qint32 getOwnerType();
    void setOwnerType(qint32 owner_type);

    QList<OAIBTMetadataPropertyConfigSummaryInfo*>* getPropertyConfigSummaryInfoList();
    void setPropertyConfigSummaryInfoList(QList<OAIBTMetadataPropertyConfigSummaryInfo*>* property_config_summary_info_list);

    bool isUiReadonlyInMicroversion();
    void setUiReadonlyInMicroversion(bool ui_readonly_in_microversion);

    bool isUiReadonlyInVersion();
    void setUiReadonlyInVersion(bool ui_readonly_in_version);

    qint32 getValueType();
    void setValueType(qint32 value_type);

    QString* getViewRef();
    void setViewRef(QString* view_ref);


    virtual bool isSet() override;

private:
    QString* description;
    bool m_description_isSet;

    bool editable_in_microversion;
    bool m_editable_in_microversion_isSet;

    bool editable_in_version;
    bool m_editable_in_version_isSet;

    QString* href;
    bool m_href_isSet;

    QString* id;
    bool m_id_isSet;

    QString* name;
    bool m_name_isSet;

    QString* _namespace;
    bool m__namespace_isSet;

    QString* owner_id;
    bool m_owner_id_isSet;

    qint32 owner_type;
    bool m_owner_type_isSet;

    QList<OAIBTMetadataPropertyConfigSummaryInfo*>* property_config_summary_info_list;
    bool m_property_config_summary_info_list_isSet;

    bool ui_readonly_in_microversion;
    bool m_ui_readonly_in_microversion_isSet;

    bool ui_readonly_in_version;
    bool m_ui_readonly_in_version_isSet;

    qint32 value_type;
    bool m_value_type_isSet;

    QString* view_ref;
    bool m_view_ref_isSet;

};

}

#endif /* OAIBTMetadataPropertySummaryInfo_H_ */
