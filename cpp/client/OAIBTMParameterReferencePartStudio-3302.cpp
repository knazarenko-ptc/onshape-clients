/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTMParameterReferencePartStudio-3302.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTMParameterReferencePartStudio-3302::OAIBTMParameterReferencePartStudio-3302(QString json) {
    init();
    this->fromJson(json);
}

OAIBTMParameterReferencePartStudio-3302::OAIBTMParameterReferencePartStudio-3302() {
    init();
}

OAIBTMParameterReferencePartStudio-3302::~OAIBTMParameterReferencePartStudio-3302() {
    this->cleanup();
}

void
OAIBTMParameterReferencePartStudio-3302::init() {
    bt_type = new QString("");
    m_bt_type_isSet = false;
    import_microversion = new QString("");
    m_import_microversion_isSet = false;
    node_id = new QString("");
    m_node_id_isSet = false;
    parameter_id = new QString("");
    m_parameter_id_isSet = false;
    element_id = new QString("");
    m_element_id_isSet = false;
    feature_script_type = new QString("");
    m_feature_script_type_isSet = false;
    _namespace = new QString("");
    m__namespace_isSet = false;
    part_query = new OAIBTMParameterQueryList-148();
    m_part_query_isSet = false;
    block_build_function_access = false;
    m_block_build_function_access_isSet = false;
    standard_content_parameters_id = new QString("");
    m_standard_content_parameters_id_isSet = false;
}

void
OAIBTMParameterReferencePartStudio-3302::cleanup() {
    if(bt_type != nullptr) { 
        delete bt_type;
    }
    if(import_microversion != nullptr) { 
        delete import_microversion;
    }
    if(node_id != nullptr) { 
        delete node_id;
    }
    if(parameter_id != nullptr) { 
        delete parameter_id;
    }
    if(element_id != nullptr) { 
        delete element_id;
    }
    if(feature_script_type != nullptr) { 
        delete feature_script_type;
    }
    if(_namespace != nullptr) { 
        delete _namespace;
    }
    if(part_query != nullptr) { 
        delete part_query;
    }

    if(standard_content_parameters_id != nullptr) { 
        delete standard_content_parameters_id;
    }
}

OAIBTMParameterReferencePartStudio-3302*
OAIBTMParameterReferencePartStudio-3302::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTMParameterReferencePartStudio-3302::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&bt_type, pJson["btType"], "QString", "QString");
    
    ::OpenAPI::setValue(&import_microversion, pJson["importMicroversion"], "QString", "QString");
    
    ::OpenAPI::setValue(&node_id, pJson["nodeId"], "QString", "QString");
    
    ::OpenAPI::setValue(&parameter_id, pJson["parameterId"], "QString", "QString");
    
    ::OpenAPI::setValue(&element_id, pJson["elementId"], "QString", "QString");
    
    ::OpenAPI::setValue(&feature_script_type, pJson["featureScriptType"], "QString", "QString");
    
    ::OpenAPI::setValue(&_namespace, pJson["namespace"], "QString", "QString");
    
    ::OpenAPI::setValue(&part_query, pJson["partQuery"], "OAIBTMParameterQueryList-148", "OAIBTMParameterQueryList-148");
    
    ::OpenAPI::setValue(&block_build_function_access, pJson["blockBuildFunctionAccess"], "bool", "");
    
    ::OpenAPI::setValue(&standard_content_parameters_id, pJson["standardContentParametersId"], "QString", "QString");
    
}

QString
OAIBTMParameterReferencePartStudio-3302::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTMParameterReferencePartStudio-3302::asJsonObject() {
    QJsonObject obj;
    if(bt_type != nullptr && *bt_type != QString("")){
        toJsonValue(QString("btType"), bt_type, obj, QString("QString"));
    }
    if(import_microversion != nullptr && *import_microversion != QString("")){
        toJsonValue(QString("importMicroversion"), import_microversion, obj, QString("QString"));
    }
    if(node_id != nullptr && *node_id != QString("")){
        toJsonValue(QString("nodeId"), node_id, obj, QString("QString"));
    }
    if(parameter_id != nullptr && *parameter_id != QString("")){
        toJsonValue(QString("parameterId"), parameter_id, obj, QString("QString"));
    }
    if(element_id != nullptr && *element_id != QString("")){
        toJsonValue(QString("elementId"), element_id, obj, QString("QString"));
    }
    if(feature_script_type != nullptr && *feature_script_type != QString("")){
        toJsonValue(QString("featureScriptType"), feature_script_type, obj, QString("QString"));
    }
    if(_namespace != nullptr && *_namespace != QString("")){
        toJsonValue(QString("namespace"), _namespace, obj, QString("QString"));
    }
    if((part_query != nullptr) && (part_query->isSet())){
        toJsonValue(QString("partQuery"), part_query, obj, QString("OAIBTMParameterQueryList-148"));
    }
    if(m_block_build_function_access_isSet){
        obj.insert("blockBuildFunctionAccess", QJsonValue(block_build_function_access));
    }
    if(standard_content_parameters_id != nullptr && *standard_content_parameters_id != QString("")){
        toJsonValue(QString("standardContentParametersId"), standard_content_parameters_id, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIBTMParameterReferencePartStudio-3302::getBtType() {
    return bt_type;
}
void
OAIBTMParameterReferencePartStudio-3302::setBtType(QString* bt_type) {
    this->bt_type = bt_type;
    this->m_bt_type_isSet = true;
}

QString*
OAIBTMParameterReferencePartStudio-3302::getImportMicroversion() {
    return import_microversion;
}
void
OAIBTMParameterReferencePartStudio-3302::setImportMicroversion(QString* import_microversion) {
    this->import_microversion = import_microversion;
    this->m_import_microversion_isSet = true;
}

QString*
OAIBTMParameterReferencePartStudio-3302::getNodeId() {
    return node_id;
}
void
OAIBTMParameterReferencePartStudio-3302::setNodeId(QString* node_id) {
    this->node_id = node_id;
    this->m_node_id_isSet = true;
}

QString*
OAIBTMParameterReferencePartStudio-3302::getParameterId() {
    return parameter_id;
}
void
OAIBTMParameterReferencePartStudio-3302::setParameterId(QString* parameter_id) {
    this->parameter_id = parameter_id;
    this->m_parameter_id_isSet = true;
}

QString*
OAIBTMParameterReferencePartStudio-3302::getElementId() {
    return element_id;
}
void
OAIBTMParameterReferencePartStudio-3302::setElementId(QString* element_id) {
    this->element_id = element_id;
    this->m_element_id_isSet = true;
}

QString*
OAIBTMParameterReferencePartStudio-3302::getFeatureScriptType() {
    return feature_script_type;
}
void
OAIBTMParameterReferencePartStudio-3302::setFeatureScriptType(QString* feature_script_type) {
    this->feature_script_type = feature_script_type;
    this->m_feature_script_type_isSet = true;
}

QString*
OAIBTMParameterReferencePartStudio-3302::getNamespace() {
    return _namespace;
}
void
OAIBTMParameterReferencePartStudio-3302::setNamespace(QString* _namespace) {
    this->_namespace = _namespace;
    this->m__namespace_isSet = true;
}

OAIBTMParameterQueryList-148*
OAIBTMParameterReferencePartStudio-3302::getPartQuery() {
    return part_query;
}
void
OAIBTMParameterReferencePartStudio-3302::setPartQuery(OAIBTMParameterQueryList-148* part_query) {
    this->part_query = part_query;
    this->m_part_query_isSet = true;
}

bool
OAIBTMParameterReferencePartStudio-3302::isBlockBuildFunctionAccess() {
    return block_build_function_access;
}
void
OAIBTMParameterReferencePartStudio-3302::setBlockBuildFunctionAccess(bool block_build_function_access) {
    this->block_build_function_access = block_build_function_access;
    this->m_block_build_function_access_isSet = true;
}

QString*
OAIBTMParameterReferencePartStudio-3302::getStandardContentParametersId() {
    return standard_content_parameters_id;
}
void
OAIBTMParameterReferencePartStudio-3302::setStandardContentParametersId(QString* standard_content_parameters_id) {
    this->standard_content_parameters_id = standard_content_parameters_id;
    this->m_standard_content_parameters_id_isSet = true;
}


bool
OAIBTMParameterReferencePartStudio-3302::isSet(){
    bool isObjectUpdated = false;
    do{
        if(bt_type != nullptr && *bt_type != QString("")){ isObjectUpdated = true; break;}
        if(import_microversion != nullptr && *import_microversion != QString("")){ isObjectUpdated = true; break;}
        if(node_id != nullptr && *node_id != QString("")){ isObjectUpdated = true; break;}
        if(parameter_id != nullptr && *parameter_id != QString("")){ isObjectUpdated = true; break;}
        if(element_id != nullptr && *element_id != QString("")){ isObjectUpdated = true; break;}
        if(feature_script_type != nullptr && *feature_script_type != QString("")){ isObjectUpdated = true; break;}
        if(_namespace != nullptr && *_namespace != QString("")){ isObjectUpdated = true; break;}
        if(part_query != nullptr && part_query->isSet()){ isObjectUpdated = true; break;}
        if(m_block_build_function_access_isSet){ isObjectUpdated = true; break;}
        if(standard_content_parameters_id != nullptr && *standard_content_parameters_id != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

