/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTDocumentElementInfo.h
 *
 * 
 */

#ifndef OAIBTDocumentElementInfo_H_
#define OAIBTDocumentElementInfo_H_

#include <QJsonObject>


#include "OAIBTThumbnailInfo.h"
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTDocumentElementInfo: public OAIObject {
public:
    OAIBTDocumentElementInfo();
    OAIBTDocumentElementInfo(QString json);
    ~OAIBTDocumentElementInfo();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTDocumentElementInfo* fromJson(QString jsonString) override;

    QString* getAngleUnits();
    void setAngleUnits(QString* angle_units);

    QString* getDataType();
    void setDataType(QString* data_type);

    QString* getElementType();
    void setElementType(QString* element_type);

    QString* getFilename();
    void setFilename(QString* filename);

    QString* getForeignDataId();
    void setForeignDataId(QString* foreign_data_id);

    QString* getId();
    void setId(QString* id);

    QString* getLengthUnits();
    void setLengthUnits(QString* length_units);

    QString* getMassUnits();
    void setMassUnits(QString* mass_units);

    QString* getMicroversionId();
    void setMicroversionId(QString* microversion_id);

    QString* getName();
    void setName(QString* name);

    QString* getSpecifiedUnit();
    void setSpecifiedUnit(QString* specified_unit);

    OAIBTThumbnailInfo* getThumbnailInfo();
    void setThumbnailInfo(OAIBTThumbnailInfo* thumbnail_info);

    QString* getThumbnails();
    void setThumbnails(QString* thumbnails);

    QString* getType();
    void setType(QString* type);

    bool isUnupdatable();
    void setUnupdatable(bool unupdatable);


    virtual bool isSet() override;

private:
    QString* angle_units;
    bool m_angle_units_isSet;

    QString* data_type;
    bool m_data_type_isSet;

    QString* element_type;
    bool m_element_type_isSet;

    QString* filename;
    bool m_filename_isSet;

    QString* foreign_data_id;
    bool m_foreign_data_id_isSet;

    QString* id;
    bool m_id_isSet;

    QString* length_units;
    bool m_length_units_isSet;

    QString* mass_units;
    bool m_mass_units_isSet;

    QString* microversion_id;
    bool m_microversion_id_isSet;

    QString* name;
    bool m_name_isSet;

    QString* specified_unit;
    bool m_specified_unit_isSet;

    OAIBTThumbnailInfo* thumbnail_info;
    bool m_thumbnail_info_isSet;

    QString* thumbnails;
    bool m_thumbnails_isSet;

    QString* type;
    bool m_type_isSet;

    bool unupdatable;
    bool m_unupdatable_isSet;

};

}

#endif /* OAIBTDocumentElementInfo_H_ */
