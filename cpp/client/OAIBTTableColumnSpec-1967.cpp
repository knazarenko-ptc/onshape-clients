/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTTableColumnSpec-1967.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTTableColumnSpec-1967::OAIBTTableColumnSpec-1967(QString json) {
    init();
    this->fromJson(json);
}

OAIBTTableColumnSpec-1967::OAIBTTableColumnSpec-1967() {
    init();
}

OAIBTTableColumnSpec-1967::~OAIBTTableColumnSpec-1967() {
    this->cleanup();
}

void
OAIBTTableColumnSpec-1967::init() {
    default_cell_spec = new OAIBTParameterSpec-6();
    m_default_cell_spec_isSet = false;
    default_column_width_units = new QString("");
    m_default_column_width_units_isSet = false;
    default_column_width_value = 0;
    m_default_column_width_value_isSet = false;
    default_header_name = new QString("");
    m_default_header_name_isSet = false;
    default_text_alignment = new QString("");
    m_default_text_alignment_isSet = false;
    read_only = false;
    m_read_only_isSet = false;
}

void
OAIBTTableColumnSpec-1967::cleanup() {
    if(default_cell_spec != nullptr) { 
        delete default_cell_spec;
    }
    if(default_column_width_units != nullptr) { 
        delete default_column_width_units;
    }

    if(default_header_name != nullptr) { 
        delete default_header_name;
    }
    if(default_text_alignment != nullptr) { 
        delete default_text_alignment;
    }

}

OAIBTTableColumnSpec-1967*
OAIBTTableColumnSpec-1967::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTTableColumnSpec-1967::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&default_cell_spec, pJson["defaultCellSpec"], "OAIBTParameterSpec-6", "OAIBTParameterSpec-6");
    
    ::OpenAPI::setValue(&default_column_width_units, pJson["defaultColumnWidthUnits"], "QString", "QString");
    
    ::OpenAPI::setValue(&default_column_width_value, pJson["defaultColumnWidthValue"], "qint32", "");
    
    ::OpenAPI::setValue(&default_header_name, pJson["defaultHeaderName"], "QString", "QString");
    
    ::OpenAPI::setValue(&default_text_alignment, pJson["defaultTextAlignment"], "QString", "QString");
    
    ::OpenAPI::setValue(&read_only, pJson["readOnly"], "bool", "");
    
}

QString
OAIBTTableColumnSpec-1967::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTTableColumnSpec-1967::asJsonObject() {
    QJsonObject obj;
    if((default_cell_spec != nullptr) && (default_cell_spec->isSet())){
        toJsonValue(QString("defaultCellSpec"), default_cell_spec, obj, QString("OAIBTParameterSpec-6"));
    }
    if(default_column_width_units != nullptr && *default_column_width_units != QString("")){
        toJsonValue(QString("defaultColumnWidthUnits"), default_column_width_units, obj, QString("QString"));
    }
    if(m_default_column_width_value_isSet){
        obj.insert("defaultColumnWidthValue", QJsonValue(default_column_width_value));
    }
    if(default_header_name != nullptr && *default_header_name != QString("")){
        toJsonValue(QString("defaultHeaderName"), default_header_name, obj, QString("QString"));
    }
    if(default_text_alignment != nullptr && *default_text_alignment != QString("")){
        toJsonValue(QString("defaultTextAlignment"), default_text_alignment, obj, QString("QString"));
    }
    if(m_read_only_isSet){
        obj.insert("readOnly", QJsonValue(read_only));
    }

    return obj;
}

OAIBTParameterSpec-6*
OAIBTTableColumnSpec-1967::getDefaultCellSpec() {
    return default_cell_spec;
}
void
OAIBTTableColumnSpec-1967::setDefaultCellSpec(OAIBTParameterSpec-6* default_cell_spec) {
    this->default_cell_spec = default_cell_spec;
    this->m_default_cell_spec_isSet = true;
}

QString*
OAIBTTableColumnSpec-1967::getDefaultColumnWidthUnits() {
    return default_column_width_units;
}
void
OAIBTTableColumnSpec-1967::setDefaultColumnWidthUnits(QString* default_column_width_units) {
    this->default_column_width_units = default_column_width_units;
    this->m_default_column_width_units_isSet = true;
}

qint32
OAIBTTableColumnSpec-1967::getDefaultColumnWidthValue() {
    return default_column_width_value;
}
void
OAIBTTableColumnSpec-1967::setDefaultColumnWidthValue(qint32 default_column_width_value) {
    this->default_column_width_value = default_column_width_value;
    this->m_default_column_width_value_isSet = true;
}

QString*
OAIBTTableColumnSpec-1967::getDefaultHeaderName() {
    return default_header_name;
}
void
OAIBTTableColumnSpec-1967::setDefaultHeaderName(QString* default_header_name) {
    this->default_header_name = default_header_name;
    this->m_default_header_name_isSet = true;
}

QString*
OAIBTTableColumnSpec-1967::getDefaultTextAlignment() {
    return default_text_alignment;
}
void
OAIBTTableColumnSpec-1967::setDefaultTextAlignment(QString* default_text_alignment) {
    this->default_text_alignment = default_text_alignment;
    this->m_default_text_alignment_isSet = true;
}

bool
OAIBTTableColumnSpec-1967::isReadOnly() {
    return read_only;
}
void
OAIBTTableColumnSpec-1967::setReadOnly(bool read_only) {
    this->read_only = read_only;
    this->m_read_only_isSet = true;
}


bool
OAIBTTableColumnSpec-1967::isSet(){
    bool isObjectUpdated = false;
    do{
        if(default_cell_spec != nullptr && default_cell_spec->isSet()){ isObjectUpdated = true; break;}
        if(default_column_width_units != nullptr && *default_column_width_units != QString("")){ isObjectUpdated = true; break;}
        if(m_default_column_width_value_isSet){ isObjectUpdated = true; break;}
        if(default_header_name != nullptr && *default_header_name != QString("")){ isObjectUpdated = true; break;}
        if(default_text_alignment != nullptr && *default_text_alignment != QString("")){ isObjectUpdated = true; break;}
        if(m_read_only_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

