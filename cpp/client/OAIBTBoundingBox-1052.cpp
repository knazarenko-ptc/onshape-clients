/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTBoundingBox-1052.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTBoundingBox-1052::OAIBTBoundingBox-1052(QString json) {
    init();
    this->fromJson(json);
}

OAIBTBoundingBox-1052::OAIBTBoundingBox-1052() {
    init();
}

OAIBTBoundingBox-1052::~OAIBTBoundingBox-1052() {
    this->cleanup();
}

void
OAIBTBoundingBox-1052::init() {
    max_corner = new OAIBTVector3d-389();
    m_max_corner_isSet = false;
    min_corner = new OAIBTVector3d-389();
    m_min_corner_isSet = false;
    valid = false;
    m_valid_isSet = false;
}

void
OAIBTBoundingBox-1052::cleanup() {
    if(max_corner != nullptr) { 
        delete max_corner;
    }
    if(min_corner != nullptr) { 
        delete min_corner;
    }

}

OAIBTBoundingBox-1052*
OAIBTBoundingBox-1052::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTBoundingBox-1052::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&max_corner, pJson["maxCorner"], "OAIBTVector3d-389", "OAIBTVector3d-389");
    
    ::OpenAPI::setValue(&min_corner, pJson["minCorner"], "OAIBTVector3d-389", "OAIBTVector3d-389");
    
    ::OpenAPI::setValue(&valid, pJson["valid"], "bool", "");
    
}

QString
OAIBTBoundingBox-1052::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTBoundingBox-1052::asJsonObject() {
    QJsonObject obj;
    if((max_corner != nullptr) && (max_corner->isSet())){
        toJsonValue(QString("maxCorner"), max_corner, obj, QString("OAIBTVector3d-389"));
    }
    if((min_corner != nullptr) && (min_corner->isSet())){
        toJsonValue(QString("minCorner"), min_corner, obj, QString("OAIBTVector3d-389"));
    }
    if(m_valid_isSet){
        obj.insert("valid", QJsonValue(valid));
    }

    return obj;
}

OAIBTVector3d-389*
OAIBTBoundingBox-1052::getMaxCorner() {
    return max_corner;
}
void
OAIBTBoundingBox-1052::setMaxCorner(OAIBTVector3d-389* max_corner) {
    this->max_corner = max_corner;
    this->m_max_corner_isSet = true;
}

OAIBTVector3d-389*
OAIBTBoundingBox-1052::getMinCorner() {
    return min_corner;
}
void
OAIBTBoundingBox-1052::setMinCorner(OAIBTVector3d-389* min_corner) {
    this->min_corner = min_corner;
    this->m_min_corner_isSet = true;
}

bool
OAIBTBoundingBox-1052::isValid() {
    return valid;
}
void
OAIBTBoundingBox-1052::setValid(bool valid) {
    this->valid = valid;
    this->m_valid_isSet = true;
}


bool
OAIBTBoundingBox-1052::isSet(){
    bool isObjectUpdated = false;
    do{
        if(max_corner != nullptr && max_corner->isSet()){ isObjectUpdated = true; break;}
        if(min_corner != nullptr && min_corner->isSet()){ isObjectUpdated = true; break;}
        if(m_valid_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

