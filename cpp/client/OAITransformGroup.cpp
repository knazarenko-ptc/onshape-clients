/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAITransformGroup.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAITransformGroup::OAITransformGroup(QString json) {
    init();
    this->fromJson(json);
}

OAITransformGroup::OAITransformGroup() {
    init();
}

OAITransformGroup::~OAITransformGroup() {
    this->cleanup();
}

void
OAITransformGroup::init() {
    instances = new QList<OAIBTAssemblyInstanceDefinitionParams*>();
    m_instances_isSet = false;
    transform = new QList<double>();
    m_transform_isSet = false;
}

void
OAITransformGroup::cleanup() {
    if(instances != nullptr) { 
        auto arr = instances;
        for(auto o: *arr) { 
            delete o;
        }
        delete instances;
    }

    if(transform != nullptr) { 
        delete transform;
    }
}

OAITransformGroup*
OAITransformGroup::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAITransformGroup::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&instances, pJson["instances"], "QList", "OAIBTAssemblyInstanceDefinitionParams");
    
    ::OpenAPI::setValue(&transform, pJson["transform"], "QList", "double");
}

QString
OAITransformGroup::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAITransformGroup::asJsonObject() {
    QJsonObject obj;
    if(instances->size() > 0){
        toJsonArray((QList<void*>*)instances, obj, "instances", "OAIBTAssemblyInstanceDefinitionParams");
    }
    if(transform->size() > 0){
        toJsonArray((QList<void*>*)transform, obj, "transform", "");
    }

    return obj;
}

QList<OAIBTAssemblyInstanceDefinitionParams*>*
OAITransformGroup::getInstances() {
    return instances;
}
void
OAITransformGroup::setInstances(QList<OAIBTAssemblyInstanceDefinitionParams*>* instances) {
    this->instances = instances;
    this->m_instances_isSet = true;
}

QList<double>*
OAITransformGroup::getTransform() {
    return transform;
}
void
OAITransformGroup::setTransform(QList<double>* transform) {
    this->transform = transform;
    this->m_transform_isSet = true;
}


bool
OAITransformGroup::isSet(){
    bool isObjectUpdated = false;
    do{
        if(instances->size() > 0){ isObjectUpdated = true; break;}
        if(m_transform_isSet){ isObjectUpdated = true; break;}
        if(transform->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

