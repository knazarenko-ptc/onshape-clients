/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTAssemblyFeatureInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTAssemblyFeatureInfo::OAIBTAssemblyFeatureInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTAssemblyFeatureInfo::OAIBTAssemblyFeatureInfo() {
    init();
}

OAIBTAssemblyFeatureInfo::~OAIBTAssemblyFeatureInfo() {
    this->cleanup();
}

void
OAIBTAssemblyFeatureInfo::init() {
    feature_data = new OAIBTAssemblyFeatureDataInfo();
    m_feature_data_isSet = false;
    feature_type = new QString("");
    m_feature_type_isSet = false;
    id = new QString("");
    m_id_isSet = false;
    suppressed = false;
    m_suppressed_isSet = false;
}

void
OAIBTAssemblyFeatureInfo::cleanup() {
    if(feature_data != nullptr) { 
        delete feature_data;
    }
    if(feature_type != nullptr) { 
        delete feature_type;
    }
    if(id != nullptr) { 
        delete id;
    }

}

OAIBTAssemblyFeatureInfo*
OAIBTAssemblyFeatureInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTAssemblyFeatureInfo::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&feature_data, pJson["featureData"], "OAIBTAssemblyFeatureDataInfo", "OAIBTAssemblyFeatureDataInfo");
    
    ::OpenAPI::setValue(&feature_type, pJson["featureType"], "QString", "QString");
    
    ::OpenAPI::setValue(&id, pJson["id"], "QString", "QString");
    
    ::OpenAPI::setValue(&suppressed, pJson["suppressed"], "bool", "");
    
}

QString
OAIBTAssemblyFeatureInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTAssemblyFeatureInfo::asJsonObject() {
    QJsonObject obj;
    if((feature_data != nullptr) && (feature_data->isSet())){
        toJsonValue(QString("featureData"), feature_data, obj, QString("OAIBTAssemblyFeatureDataInfo"));
    }
    if(feature_type != nullptr && *feature_type != QString("")){
        toJsonValue(QString("featureType"), feature_type, obj, QString("QString"));
    }
    if(id != nullptr && *id != QString("")){
        toJsonValue(QString("id"), id, obj, QString("QString"));
    }
    if(m_suppressed_isSet){
        obj.insert("suppressed", QJsonValue(suppressed));
    }

    return obj;
}

OAIBTAssemblyFeatureDataInfo*
OAIBTAssemblyFeatureInfo::getFeatureData() {
    return feature_data;
}
void
OAIBTAssemblyFeatureInfo::setFeatureData(OAIBTAssemblyFeatureDataInfo* feature_data) {
    this->feature_data = feature_data;
    this->m_feature_data_isSet = true;
}

QString*
OAIBTAssemblyFeatureInfo::getFeatureType() {
    return feature_type;
}
void
OAIBTAssemblyFeatureInfo::setFeatureType(QString* feature_type) {
    this->feature_type = feature_type;
    this->m_feature_type_isSet = true;
}

QString*
OAIBTAssemblyFeatureInfo::getId() {
    return id;
}
void
OAIBTAssemblyFeatureInfo::setId(QString* id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool
OAIBTAssemblyFeatureInfo::isSuppressed() {
    return suppressed;
}
void
OAIBTAssemblyFeatureInfo::setSuppressed(bool suppressed) {
    this->suppressed = suppressed;
    this->m_suppressed_isSet = true;
}


bool
OAIBTAssemblyFeatureInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(feature_data != nullptr && feature_data->isSet()){ isObjectUpdated = true; break;}
        if(feature_type != nullptr && *feature_type != QString("")){ isObjectUpdated = true; break;}
        if(id != nullptr && *id != QString("")){ isObjectUpdated = true; break;}
        if(m_suppressed_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

