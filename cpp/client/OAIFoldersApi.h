/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef _OAI_OAIFoldersApi_H_
#define _OAI_OAIFoldersApi_H_

#include "OAIHttpRequest.h"

#include "OAIBTAclInfo.h"
#include "OAIBTShareParams.h"
#include <QString>

#include <QObject>

namespace OpenAPI {

class OAIFoldersApi: public QObject {
    Q_OBJECT

public:
    OAIFoldersApi();
    OAIFoldersApi(QString host, QString basePath);
    ~OAIFoldersApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void getFolderAcl(QString* fid);
    void share(QString* fid, OAIBTShareParams& oaibt_share_params);
    void unShare(QString* fid, QString* eid, qint32 entry_type);
    
private:
    void getFolderAclCallback (OAIHttpRequestWorker * worker);
    void shareCallback (OAIHttpRequestWorker * worker);
    void unShareCallback (OAIHttpRequestWorker * worker);
    
signals:
    void getFolderAclSignal(OAIBTAclInfo* summary);
    void shareSignal(OAIBTAclInfo* summary);
    void unShareSignal();
    
    void getFolderAclSignalE(OAIBTAclInfo* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void shareSignalE(OAIBTAclInfo* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void unShareSignalE(QNetworkReply::NetworkError error_type, QString& error_str);
    
    void getFolderAclSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void shareSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void unShareSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
