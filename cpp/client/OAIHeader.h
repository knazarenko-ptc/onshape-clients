/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHeader.h
 *
 * 
 */

#ifndef OAIHeader_H_
#define OAIHeader_H_

#include <QJsonObject>


#include "OAIExample.h"
#include "OAIObject.h"
#include "OAISchema.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIHeader: public OAIObject {
public:
    OAIHeader();
    OAIHeader(QString json);
    ~OAIHeader();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIHeader* fromJson(QString jsonString) override;

    bool isDeprecated();
    void setDeprecated(bool deprecated);

    QString* getDescription();
    void setDescription(QString* description);

    OAIObject* getExample();
    void setExample(OAIObject* example);

    QMap<QString, OAIExample*>* getExamples();
    void setExamples(QMap<QString, OAIExample*>* examples);

    bool isExplode();
    void setExplode(bool explode);

    QMap<QString, OAIObject*>* getExtensions();
    void setExtensions(QMap<QString, OAIObject*>* extensions);

    QString* getGetref();
    void setGetref(QString* getref);

    bool isRequired();
    void setRequired(bool required);

    OAISchema* getSchema();
    void setSchema(OAISchema* schema);

    QString* getStyle();
    void setStyle(QString* style);


    virtual bool isSet() override;

private:
    bool deprecated;
    bool m_deprecated_isSet;

    QString* description;
    bool m_description_isSet;

    OAIObject* example;
    bool m_example_isSet;

    QMap<QString, OAIExample*>* examples;
    bool m_examples_isSet;

    bool explode;
    bool m_explode_isSet;

    QMap<QString, OAIObject*>* extensions;
    bool m_extensions_isSet;

    QString* getref;
    bool m_getref_isSet;

    bool required;
    bool m_required_isSet;

    OAISchema* schema;
    bool m_schema_isSet;

    QString* style;
    bool m_style_isSet;

};

}

#endif /* OAIHeader_H_ */
