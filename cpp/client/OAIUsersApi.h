/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef _OAI_OAIUsersApi_H_
#define _OAI_OAIUsersApi_H_

#include "OAIHttpRequest.h"

#include "OAIBTUserOAuth2SummaryInfo.h"
#include "OAIBTUserSettingsInfo.h"
#include <QString>

#include <QObject>

namespace OpenAPI {

class OAIUsersApi: public QObject {
    Q_OBJECT

public:
    OAIUsersApi();
    OAIUsersApi(QString host, QString basePath);
    ~OAIUsersApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void getUserSettings(QString* uid, bool includematerials);
    void getUserSettingsCurrentLoggedInUser(bool includematerials);
    void sessionInfo();
    
private:
    void getUserSettingsCallback (OAIHttpRequestWorker * worker);
    void getUserSettingsCurrentLoggedInUserCallback (OAIHttpRequestWorker * worker);
    void sessionInfoCallback (OAIHttpRequestWorker * worker);
    
signals:
    void getUserSettingsSignal(OAIBTUserSettingsInfo* summary);
    void getUserSettingsCurrentLoggedInUserSignal(OAIBTUserSettingsInfo* summary);
    void sessionInfoSignal(OAIBTUserOAuth2SummaryInfo* summary);
    
    void getUserSettingsSignalE(OAIBTUserSettingsInfo* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void getUserSettingsCurrentLoggedInUserSignalE(OAIBTUserSettingsInfo* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void sessionInfoSignalE(OAIBTUserOAuth2SummaryInfo* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    
    void getUserSettingsSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void getUserSettingsCurrentLoggedInUserSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void sessionInfoSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
