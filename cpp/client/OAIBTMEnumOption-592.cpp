/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTMEnumOption-592.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTMEnumOption-592::OAIBTMEnumOption-592(QString json) {
    init();
    this->fromJson(json);
}

OAIBTMEnumOption-592::OAIBTMEnumOption-592() {
    init();
}

OAIBTMEnumOption-592::~OAIBTMEnumOption-592() {
    this->cleanup();
}

void
OAIBTMEnumOption-592::init() {
    bt_type = new QString("");
    m_bt_type_isSet = false;
    import_microversion = new QString("");
    m_import_microversion_isSet = false;
    node_id = new QString("");
    m_node_id_isSet = false;
    option = new QString("");
    m_option_isSet = false;
    option_name = new QString("");
    m_option_name_isSet = false;
}

void
OAIBTMEnumOption-592::cleanup() {
    if(bt_type != nullptr) { 
        delete bt_type;
    }
    if(import_microversion != nullptr) { 
        delete import_microversion;
    }
    if(node_id != nullptr) { 
        delete node_id;
    }
    if(option != nullptr) { 
        delete option;
    }
    if(option_name != nullptr) { 
        delete option_name;
    }
}

OAIBTMEnumOption-592*
OAIBTMEnumOption-592::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTMEnumOption-592::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&bt_type, pJson["btType"], "QString", "QString");
    
    ::OpenAPI::setValue(&import_microversion, pJson["importMicroversion"], "QString", "QString");
    
    ::OpenAPI::setValue(&node_id, pJson["nodeId"], "QString", "QString");
    
    ::OpenAPI::setValue(&option, pJson["option"], "QString", "QString");
    
    ::OpenAPI::setValue(&option_name, pJson["optionName"], "QString", "QString");
    
}

QString
OAIBTMEnumOption-592::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTMEnumOption-592::asJsonObject() {
    QJsonObject obj;
    if(bt_type != nullptr && *bt_type != QString("")){
        toJsonValue(QString("btType"), bt_type, obj, QString("QString"));
    }
    if(import_microversion != nullptr && *import_microversion != QString("")){
        toJsonValue(QString("importMicroversion"), import_microversion, obj, QString("QString"));
    }
    if(node_id != nullptr && *node_id != QString("")){
        toJsonValue(QString("nodeId"), node_id, obj, QString("QString"));
    }
    if(option != nullptr && *option != QString("")){
        toJsonValue(QString("option"), option, obj, QString("QString"));
    }
    if(option_name != nullptr && *option_name != QString("")){
        toJsonValue(QString("optionName"), option_name, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIBTMEnumOption-592::getBtType() {
    return bt_type;
}
void
OAIBTMEnumOption-592::setBtType(QString* bt_type) {
    this->bt_type = bt_type;
    this->m_bt_type_isSet = true;
}

QString*
OAIBTMEnumOption-592::getImportMicroversion() {
    return import_microversion;
}
void
OAIBTMEnumOption-592::setImportMicroversion(QString* import_microversion) {
    this->import_microversion = import_microversion;
    this->m_import_microversion_isSet = true;
}

QString*
OAIBTMEnumOption-592::getNodeId() {
    return node_id;
}
void
OAIBTMEnumOption-592::setNodeId(QString* node_id) {
    this->node_id = node_id;
    this->m_node_id_isSet = true;
}

QString*
OAIBTMEnumOption-592::getOption() {
    return option;
}
void
OAIBTMEnumOption-592::setOption(QString* option) {
    this->option = option;
    this->m_option_isSet = true;
}

QString*
OAIBTMEnumOption-592::getOptionName() {
    return option_name;
}
void
OAIBTMEnumOption-592::setOptionName(QString* option_name) {
    this->option_name = option_name;
    this->m_option_name_isSet = true;
}


bool
OAIBTMEnumOption-592::isSet(){
    bool isObjectUpdated = false;
    do{
        if(bt_type != nullptr && *bt_type != QString("")){ isObjectUpdated = true; break;}
        if(import_microversion != nullptr && *import_microversion != QString("")){ isObjectUpdated = true; break;}
        if(node_id != nullptr && *node_id != QString("")){ isObjectUpdated = true; break;}
        if(option != nullptr && *option != QString("")){ isObjectUpdated = true; break;}
        if(option_name != nullptr && *option_name != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

