/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTMaterialParams.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTMaterialParams::OAIBTMaterialParams(QString json) {
    init();
    this->fromJson(json);
}

OAIBTMaterialParams::OAIBTMaterialParams() {
    init();
}

OAIBTMaterialParams::~OAIBTMaterialParams() {
    this->cleanup();
}

void
OAIBTMaterialParams::init() {
    display_name = new QString("");
    m_display_name_isSet = false;
    id = new QString("");
    m_id_isSet = false;
    library_name = new QString("");
    m_library_name_isSet = false;
    library_reference = new OAIBTExternalElementReferenceInfo();
    m_library_reference_isSet = false;
    properties = new QList<OAIBTMaterialPropertyParams*>();
    m_properties_isSet = false;
}

void
OAIBTMaterialParams::cleanup() {
    if(display_name != nullptr) { 
        delete display_name;
    }
    if(id != nullptr) { 
        delete id;
    }
    if(library_name != nullptr) { 
        delete library_name;
    }
    if(library_reference != nullptr) { 
        delete library_reference;
    }
    if(properties != nullptr) { 
        auto arr = properties;
        for(auto o: *arr) { 
            delete o;
        }
        delete properties;
    }
}

OAIBTMaterialParams*
OAIBTMaterialParams::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTMaterialParams::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&display_name, pJson["displayName"], "QString", "QString");
    
    ::OpenAPI::setValue(&id, pJson["id"], "QString", "QString");
    
    ::OpenAPI::setValue(&library_name, pJson["libraryName"], "QString", "QString");
    
    ::OpenAPI::setValue(&library_reference, pJson["libraryReference"], "OAIBTExternalElementReferenceInfo", "OAIBTExternalElementReferenceInfo");
    
    
    ::OpenAPI::setValue(&properties, pJson["properties"], "QList", "OAIBTMaterialPropertyParams");
}

QString
OAIBTMaterialParams::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTMaterialParams::asJsonObject() {
    QJsonObject obj;
    if(display_name != nullptr && *display_name != QString("")){
        toJsonValue(QString("displayName"), display_name, obj, QString("QString"));
    }
    if(id != nullptr && *id != QString("")){
        toJsonValue(QString("id"), id, obj, QString("QString"));
    }
    if(library_name != nullptr && *library_name != QString("")){
        toJsonValue(QString("libraryName"), library_name, obj, QString("QString"));
    }
    if((library_reference != nullptr) && (library_reference->isSet())){
        toJsonValue(QString("libraryReference"), library_reference, obj, QString("OAIBTExternalElementReferenceInfo"));
    }
    if(properties->size() > 0){
        toJsonArray((QList<void*>*)properties, obj, "properties", "OAIBTMaterialPropertyParams");
    }

    return obj;
}

QString*
OAIBTMaterialParams::getDisplayName() {
    return display_name;
}
void
OAIBTMaterialParams::setDisplayName(QString* display_name) {
    this->display_name = display_name;
    this->m_display_name_isSet = true;
}

QString*
OAIBTMaterialParams::getId() {
    return id;
}
void
OAIBTMaterialParams::setId(QString* id) {
    this->id = id;
    this->m_id_isSet = true;
}

QString*
OAIBTMaterialParams::getLibraryName() {
    return library_name;
}
void
OAIBTMaterialParams::setLibraryName(QString* library_name) {
    this->library_name = library_name;
    this->m_library_name_isSet = true;
}

OAIBTExternalElementReferenceInfo*
OAIBTMaterialParams::getLibraryReference() {
    return library_reference;
}
void
OAIBTMaterialParams::setLibraryReference(OAIBTExternalElementReferenceInfo* library_reference) {
    this->library_reference = library_reference;
    this->m_library_reference_isSet = true;
}

QList<OAIBTMaterialPropertyParams*>*
OAIBTMaterialParams::getProperties() {
    return properties;
}
void
OAIBTMaterialParams::setProperties(QList<OAIBTMaterialPropertyParams*>* properties) {
    this->properties = properties;
    this->m_properties_isSet = true;
}


bool
OAIBTMaterialParams::isSet(){
    bool isObjectUpdated = false;
    do{
        if(display_name != nullptr && *display_name != QString("")){ isObjectUpdated = true; break;}
        if(id != nullptr && *id != QString("")){ isObjectUpdated = true; break;}
        if(library_name != nullptr && *library_name != QString("")){ isObjectUpdated = true; break;}
        if(library_reference != nullptr && library_reference->isSet()){ isObjectUpdated = true; break;}
        if(properties->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

