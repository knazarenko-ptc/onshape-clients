/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTShareEntryParams.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTShareEntryParams::OAIBTShareEntryParams(QString json) {
    init();
    this->fromJson(json);
}

OAIBTShareEntryParams::OAIBTShareEntryParams() {
    init();
}

OAIBTShareEntryParams::~OAIBTShareEntryParams() {
    this->cleanup();
}

void
OAIBTShareEntryParams::init() {
    application_id = new QString("");
    m_application_id_isSet = false;
    company_id = new QString("");
    m_company_id_isSet = false;
    email = new QString("");
    m_email_isSet = false;
    entry_type = 0;
    m_entry_type_isSet = false;
    team_id = new QString("");
    m_team_id_isSet = false;
    user_id = new QString("");
    m_user_id_isSet = false;
}

void
OAIBTShareEntryParams::cleanup() {
    if(application_id != nullptr) { 
        delete application_id;
    }
    if(company_id != nullptr) { 
        delete company_id;
    }
    if(email != nullptr) { 
        delete email;
    }

    if(team_id != nullptr) { 
        delete team_id;
    }
    if(user_id != nullptr) { 
        delete user_id;
    }
}

OAIBTShareEntryParams*
OAIBTShareEntryParams::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTShareEntryParams::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&application_id, pJson["applicationId"], "QString", "QString");
    
    ::OpenAPI::setValue(&company_id, pJson["companyId"], "QString", "QString");
    
    ::OpenAPI::setValue(&email, pJson["email"], "QString", "QString");
    
    ::OpenAPI::setValue(&entry_type, pJson["entryType"], "qint32", "");
    
    ::OpenAPI::setValue(&team_id, pJson["teamId"], "QString", "QString");
    
    ::OpenAPI::setValue(&user_id, pJson["userId"], "QString", "QString");
    
}

QString
OAIBTShareEntryParams::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTShareEntryParams::asJsonObject() {
    QJsonObject obj;
    if(application_id != nullptr && *application_id != QString("")){
        toJsonValue(QString("applicationId"), application_id, obj, QString("QString"));
    }
    if(company_id != nullptr && *company_id != QString("")){
        toJsonValue(QString("companyId"), company_id, obj, QString("QString"));
    }
    if(email != nullptr && *email != QString("")){
        toJsonValue(QString("email"), email, obj, QString("QString"));
    }
    if(m_entry_type_isSet){
        obj.insert("entryType", QJsonValue(entry_type));
    }
    if(team_id != nullptr && *team_id != QString("")){
        toJsonValue(QString("teamId"), team_id, obj, QString("QString"));
    }
    if(user_id != nullptr && *user_id != QString("")){
        toJsonValue(QString("userId"), user_id, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIBTShareEntryParams::getApplicationId() {
    return application_id;
}
void
OAIBTShareEntryParams::setApplicationId(QString* application_id) {
    this->application_id = application_id;
    this->m_application_id_isSet = true;
}

QString*
OAIBTShareEntryParams::getCompanyId() {
    return company_id;
}
void
OAIBTShareEntryParams::setCompanyId(QString* company_id) {
    this->company_id = company_id;
    this->m_company_id_isSet = true;
}

QString*
OAIBTShareEntryParams::getEmail() {
    return email;
}
void
OAIBTShareEntryParams::setEmail(QString* email) {
    this->email = email;
    this->m_email_isSet = true;
}

qint32
OAIBTShareEntryParams::getEntryType() {
    return entry_type;
}
void
OAIBTShareEntryParams::setEntryType(qint32 entry_type) {
    this->entry_type = entry_type;
    this->m_entry_type_isSet = true;
}

QString*
OAIBTShareEntryParams::getTeamId() {
    return team_id;
}
void
OAIBTShareEntryParams::setTeamId(QString* team_id) {
    this->team_id = team_id;
    this->m_team_id_isSet = true;
}

QString*
OAIBTShareEntryParams::getUserId() {
    return user_id;
}
void
OAIBTShareEntryParams::setUserId(QString* user_id) {
    this->user_id = user_id;
    this->m_user_id_isSet = true;
}


bool
OAIBTShareEntryParams::isSet(){
    bool isObjectUpdated = false;
    do{
        if(application_id != nullptr && *application_id != QString("")){ isObjectUpdated = true; break;}
        if(company_id != nullptr && *company_id != QString("")){ isObjectUpdated = true; break;}
        if(email != nullptr && *email != QString("")){ isObjectUpdated = true; break;}
        if(m_entry_type_isSet){ isObjectUpdated = true; break;}
        if(team_id != nullptr && *team_id != QString("")){ isObjectUpdated = true; break;}
        if(user_id != nullptr && *user_id != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

