/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef ModelFactory_H_
#define ModelFactory_H_

#include "OAIObject.h"

#include "OAIAddress.h"
#include "OAIApiResponse.h"
#include "OAIApiResponse_content.h"
#include "OAIBTAPIApplicationSummaryInfo.h"
#include "OAIBTAclEntryInfo.h"
#include "OAIBTAclInfo.h"
#include "OAIBTActiveSheetMetalFilter-2944.h"
#include "OAIBTActiveWorkflowInfo.h"
#include "OAIBTAddressInfo.h"
#include "OAIBTAllowEdgePointFilter-2371.h"
#include "OAIBTAllowFlattenedGeometryFilter-2140.h"
#include "OAIBTAllowMeshGeometryFilter-1026.h"
#include "OAIBTAllowedMateTypeFilter-1511.h"
#include "OAIBTAndFilter-110.h"
#include "OAIBTAppAssociativeDataInfoArray.h"
#include "OAIBTAppElementBasicInfo.h"
#include "OAIBTAppElementChangeParams.h"
#include "OAIBTAppElementCommitTransactionParams.h"
#include "OAIBTAppElementContentDeltaInfo.h"
#include "OAIBTAppElementContentEntryInfo.h"
#include "OAIBTAppElementContentInfo.h"
#include "OAIBTAppElementHistoryEntryInfo.h"
#include "OAIBTAppElementHistoryInfo.h"
#include "OAIBTAppElementModifyInfo.h"
#include "OAIBTAppElementParams.h"
#include "OAIBTAppElementReferenceInfo.h"
#include "OAIBTAppElementReferenceParams.h"
#include "OAIBTAppElementReferenceResolveInfo.h"
#include "OAIBTAppElementReferencesResolveInfo.h"
#include "OAIBTAppElementStartTransactionParams.h"
#include "OAIBTAppElementUpdateParams.h"
#include "OAIBTApplicationElementThumbnailParams.h"
#include "OAIBTApplicationElementThumbnailParamsArray.h"
#include "OAIBTAssemblyDefinitionInfo.h"
#include "OAIBTAssemblyFeatureDataInfo.h"
#include "OAIBTAssemblyFeatureInfo.h"
#include "OAIBTAssemblyFeatureListResponse-1174.h"
#include "OAIBTAssemblyInsertTransformedInstancesResponse.h"
#include "OAIBTAssemblyInstanceDefinitionParams.h"
#include "OAIBTAssemblyInstanceInfo.h"
#include "OAIBTAssemblyMatedEntity.h"
#include "OAIBTAssemblyOccurrenceInfo.h"
#include "OAIBTAssemblyPSFeatureInfo.h"
#include "OAIBTAssemblyPartsInfo.h"
#include "OAIBTAssemblyTransformDefinitionParams.h"
#include "OAIBTAssemblyTransformedInstancesDefinitionParams.h"
#include "OAIBTAssociativeDataInfo.h"
#include "OAIBTBaseInfo.h"
#include "OAIBTBaseSMJointTableRowMetadata-2232.h"
#include "OAIBTBillOfMaterialsTable-1073.h"
#include "OAIBTBillOfMaterialsTableRow-1425.h"
#include "OAIBTBillOfMaterialsTableRowMetadata-1300.h"
#include "OAIBTBillOfMaterialsUniqueItemId-2029.h"
#include "OAIBTBillingPlanInfo.h"
#include "OAIBTBodyTypeFilter-112.h"
#include "OAIBTBoundingBox-1052.h"
#include "OAIBTBoundingBoxInfo.h"
#include "OAIBTCacheDataPath-191.h"
#include "OAIBTCardInfo.h"
#include "OAIBTCircleDescription-1145.h"
#include "OAIBTClosedCurveFilter-1206.h"
#include "OAIBTCloudStorageAccountInfo.h"
#include "OAIBTCloudStorageObjectInfo.h"
#include "OAIBTColorInfo.h"
#include "OAIBTColorParams.h"
#include "OAIBTCommentAttachmentInfo.h"
#include "OAIBTCommentInfo.h"
#include "OAIBTCommonUnitInfo.h"
#include "OAIBTCommonUnitsInfo.h"
#include "OAIBTCompanyInfo.h"
#include "OAIBTCompanySummaryInfo.h"
#include "OAIBTComputedConfigurationInputSpec-2525.h"
#include "OAIBTConeDescription-860.h"
#include "OAIBTConfigurationInfo.h"
#include "OAIBTConfigurationParams.h"
#include "OAIBTConfigurationResponse-2019.h"
#include "OAIBTConfigurationUpdateCall-2933.h"
#include "OAIBTConfiguredDimensionColumnInfo-2168.h"
#include "OAIBTConfiguredFeatureColumnInfo-1014.h"
#include "OAIBTConfiguredParameterColumnInfo-2900.h"
#include "OAIBTConfiguredPartPropertiesTable-2740.h"
#include "OAIBTConfiguredSuppressionColumnInfo-2498.h"
#include "OAIBTConfiguredValuesColumnInfo-1025.h"
#include "OAIBTConstructionObjectFilter-113.h"
#include "OAIBTCopyDocumentInfo.h"
#include "OAIBTCopyDocumentParams.h"
#include "OAIBTCopyElementParams.h"
#include "OAIBTCurveDescription-1583.h"
#include "OAIBTCurveGeometry-114.h"
#include "OAIBTCurveGeometryCircle-115.h"
#include "OAIBTCurveGeometryConic-2284.h"
#include "OAIBTCurveGeometryEllipse-1189.h"
#include "OAIBTCurveGeometryInterpolatedSpline-116.h"
#include "OAIBTCurveGeometryLine-117.h"
#include "OAIBTCurveGeometrySpline-118.h"
#include "OAIBTCustomPropertyDefinitionInfo.h"
#include "OAIBTCustomPropertyDefinitionParams.h"
#include "OAIBTCylinderDescription-686.h"
#include "OAIBTDefaultUnitInfo.h"
#include "OAIBTDefaultUnitsInfo.h"
#include "OAIBTDiffInfo.h"
#include "OAIBTDiscountInfo.h"
#include "OAIBTDocumentElementInfo.h"
#include "OAIBTDocumentElementProcessingInfo.h"
#include "OAIBTDocumentInfo.h"
#include "OAIBTDocumentLabelInfo.h"
#include "OAIBTDocumentMergeInfo.h"
#include "OAIBTDocumentParams.h"
#include "OAIBTDocumentProcessingInfo.h"
#include "OAIBTDocumentSearchHitInfo.h"
#include "OAIBTDocumentSearchParams.h"
#include "OAIBTDocumentSummaryInfo.h"
#include "OAIBTDocumentSummarySearchInfo.h"
#include "OAIBTDocumentVersionElementIds-1897.h"
#include "OAIBTDocumentWithVersionAndElementId.h"
#include "OAIBTDocumentWithVersionId.h"
#include "OAIBTDrawingParams.h"
#include "OAIBTEdgeTopologyFilter-122.h"
#include "OAIBTEditingLogic-2350.h"
#include "OAIBTElementLocationParams.h"
#include "OAIBTElementReference-725.h"
#include "OAIBTEllipseDescription-866.h"
#include "OAIBTEncodedConfigurationInfo.h"
#include "OAIBTEntityTypeFilter-124.h"
#include "OAIBTExplosion-2754.h"
#include "OAIBTExplosionStepFeature-3008.h"
#include "OAIBTExportModelArcEdgeGeometry-1257.h"
#include "OAIBTExportModelBodiesResponse-734.h"
#include "OAIBTExportModelBody-1272.h"
#include "OAIBTExportModelCoedge-1342.h"
#include "OAIBTExportModelEdge-1782.h"
#include "OAIBTExportModelEdgeGeometry-1125.h"
#include "OAIBTExportModelFace-1363.h"
#include "OAIBTExportModelLoop-1182.h"
#include "OAIBTExportModelParams.h"
#include "OAIBTExportModelVertex-858.h"
#include "OAIBTExportTessellatedBody-3398.h"
#include "OAIBTExportTessellatedEdgesBody-890.h"
#include "OAIBTExportTessellatedEdgesEdge-1364.h"
#include "OAIBTExportTessellatedEdgesResponse-327.h"
#include "OAIBTExportTessellatedFacesBody-1321.h"
#include "OAIBTExportTessellatedFacesFace-1192.h"
#include "OAIBTExportTessellatedFacesFacet-1417.h"
#include "OAIBTExportTessellatedFacesResponse-898.h"
#include "OAIBTExternalElementReferenceInfo.h"
#include "OAIBTExternalReference-1936.h"
#include "OAIBTFSTable-953.h"
#include "OAIBTFSTableColumnInfo-623.h"
#include "OAIBTFSTableRowMetadata-2262.h"
#include "OAIBTFSValue-1888.h"
#include "OAIBTFSValueArray-1499.h"
#include "OAIBTFSValueBoolean-1195.h"
#include "OAIBTFSValueMap-2062.h"
#include "OAIBTFSValueMapEntry-2077.h"
#include "OAIBTFSValueNumber-772.h"
#include "OAIBTFSValueOther-1124.h"
#include "OAIBTFSValueString-1422.h"
#include "OAIBTFSValueTooBig-1247.h"
#include "OAIBTFSValueUndefined-2003.h"
#include "OAIBTFSValueWithUnits-1817.h"
#include "OAIBTFeatureApiBase-1430.h"
#include "OAIBTFeatureDefinitionCall-1406.h"
#include "OAIBTFeatureDefinitionResponse-1617.h"
#include "OAIBTFeatureFilter-127.h"
#include "OAIBTFeatureListResponse-2457.h"
#include "OAIBTFeatureScriptEvalCall-2377.h"
#include "OAIBTFeatureScriptEvalResponse-1859.h"
#include "OAIBTFeatureSpec-129.h"
#include "OAIBTFeatureSpecsResponse-664.h"
#include "OAIBTFeatureState-1688.h"
#include "OAIBTFeatureStudioContents-2239.h"
#include "OAIBTFeatureTypeFilter-962.h"
#include "OAIBTFlatSheetMetalFilter-3018.h"
#include "OAIBTFolderInfo.h"
#include "OAIBTForeignDataResponse-1070.h"
#include "OAIBTFullElementId-756.h"
#include "OAIBTFullElementIdAndPartId-643.h"
#include "OAIBTFullElementIdWithDocument-1729.h"
#include "OAIBTGeometryFilter-130.h"
#include "OAIBTGlobalTreeMagicNodeInfo.h"
#include "OAIBTGlobalTreeNodeInfo.h"
#include "OAIBTGlobalTreeNodeListResponse.h"
#include "OAIBTGlobalTreeNodeListResponseBTTeamInfo.h"
#include "OAIBTGraphicsAppearance-1152.h"
#include "OAIBTIdTranslationInfo.h"
#include "OAIBTIdTranslationParams.h"
#include "OAIBTIdTranslationResultInfo.h"
#include "OAIBTIdentityInfo.h"
#include "OAIBTImageFilter-853.h"
#include "OAIBTImport.h"
#include "OAIBTInheritedAclInfo.h"
#include "OAIBTInnerArrayParameterLocation-2368.h"
#include "OAIBTInnerDerivedParameterLocation-591.h"
#include "OAIBTInnerParameterLocation-1715.h"
#include "OAIBTInsertableInfo.h"
#include "OAIBTInsertablesListResponse.h"
#include "OAIBTKeyMouseValuesInfo.h"
#include "OAIBTLineDescription-1559.h"
#include "OAIBTLinkToLatestDocumentInfo.h"
#include "OAIBTLinkToLatestDocumentParams.h"
#include "OAIBTListResponseBTCompanyInfo.h"
#include "OAIBTListResponseBTInsertableInfo.h"
#include "OAIBTListResponseBTMetadataPropertySummaryInfo.h"
#include "OAIBTListResponseBTPurchaseInfo.h"
#include "OAIBTListResponseBTRevisionInfo.h"
#include "OAIBTListResponseBTTranslationRequestInfo.h"
#include "OAIBTListResponseBTWebhookInfo.h"
#include "OAIBTLocationInfo-226.h"
#include "OAIBTMArrayParameterItem-1843.h"
#include "OAIBTMAssemblyFeature-887.h"
#include "OAIBTMAssemblyFeature1-2218.h"
#include "OAIBTMAssemblyFeature2-1022.h"
#include "OAIBTMAssemblyPatternFeature-2241.h"
#include "OAIBTMConfigurationParameter-819.h"
#include "OAIBTMConfigurationParameterBoolean-2550.h"
#include "OAIBTMConfigurationParameterEnum-105.h"
#include "OAIBTMConfigurationParameterQuantity-1826.h"
#include "OAIBTMConfigurationParameterString-872.h"
#include "OAIBTMConfiguredValue-1341.h"
#include "OAIBTMConfiguredValueByBoolean-1501.h"
#include "OAIBTMConfiguredValueByEnum-1923.h"
#include "OAIBTMDatabaseParameter-2229.h"
#include "OAIBTMEnumOption-592.h"
#include "OAIBTMFeature-134.h"
#include "OAIBTMFeatureInvalid-1031.h"
#include "OAIBTMFeatureQueryWithOccurrence-157.h"
#include "OAIBTMGeometryMate-1260.h"
#include "OAIBTMImport-136.h"
#include "OAIBTMInContextQuery-2254.h"
#include "OAIBTMIndividualCoEdgeQuery-1332.h"
#include "OAIBTMIndividualCreatedByQuery-137.h"
#include "OAIBTMIndividualOccurrenceQuery-626.h"
#include "OAIBTMIndividualQuery-138.h"
#include "OAIBTMIndividualQueryBase-139.h"
#include "OAIBTMIndividualQueryWithOccurrence-811.h"
#include "OAIBTMIndividualQueryWithOccurrenceBase-904.h"
#include "OAIBTMIndividualSketchRegionQuery-140.h"
#include "OAIBTMIndividualSketchUniqueVerticesQuery-1472.h"
#include "OAIBTMInferenceQueryWithOccurrence-1083.h"
#include "OAIBTMMate-64.h"
#include "OAIBTMMateConnector-66.h"
#include "OAIBTMMateGroup-65.h"
#include "OAIBTMMateRelation-1412.h"
#include "OAIBTMNonGeometricItem-1864.h"
#include "OAIBTMParameter-1.h"
#include "OAIBTMParameterAppearance-627.h"
#include "OAIBTMParameterArray-2025.h"
#include "OAIBTMParameterBlobReference-1679.h"
#include "OAIBTMParameterBoolean-144.h"
#include "OAIBTMParameterConfigured-2222.h"
#include "OAIBTMParameterDerived-864.h"
#include "OAIBTMParameterEnum-145.h"
#include "OAIBTMParameterFeatureList-1749.h"
#include "OAIBTMParameterForeignId-146.h"
#include "OAIBTMParameterInvalid-1664.h"
#include "OAIBTMParameterLookupTablePath-1419.h"
#include "OAIBTMParameterMaterial-1388.h"
#include "OAIBTMParameterNullableQuantity-807.h"
#include "OAIBTMParameterQuantity-147.h"
#include "OAIBTMParameterQueryList-148.h"
#include "OAIBTMParameterQueryWithOccurrenceList-67.h"
#include "OAIBTMParameterReference-2434.h"
#include "OAIBTMParameterReferenceAssembly-938.h"
#include "OAIBTMParameterReferenceBlob-3281.h"
#include "OAIBTMParameterReferenceCADImport-2016.h"
#include "OAIBTMParameterReferenceImage-2014.h"
#include "OAIBTMParameterReferenceJSON-790.h"
#include "OAIBTMParameterReferencePartStudio-3302.h"
#include "OAIBTMParameterReferenceTable-917.h"
#include "OAIBTMParameterReferenceWithConfiguration-3028.h"
#include "OAIBTMParameterString-149.h"
#include "OAIBTMPartStudioMateConnectorQuery-1324.h"
#include "OAIBTMSketch-151.h"
#include "OAIBTMSketchConstraint-2.h"
#include "OAIBTMSketchCurve-4.h"
#include "OAIBTMSketchCurveSegment-155.h"
#include "OAIBTMSketchGeomEntity-5.h"
#include "OAIBTMSketchImageEntity-763.h"
#include "OAIBTMSketchPoint-158.h"
#include "OAIBTMSketchTextEntity-1761.h"
#include "OAIBTMassPropertiesBulkInfo.h"
#include "OAIBTMassPropertiesInfo-null.h"
#include "OAIBTMateConnectorCSInfo.h"
#include "OAIBTMateConnectorFilter-163.h"
#include "OAIBTMateFilter-162.h"
#include "OAIBTMaterialLibraryMetadataInfo.h"
#include "OAIBTMaterialLibrarySettingsInfo.h"
#include "OAIBTMaterialParams.h"
#include "OAIBTMaterialPropertyParams.h"
#include "OAIBTMetadataCategorySummaryInfo.h"
#include "OAIBTMetadataEnumValueInfo.h"
#include "OAIBTMetadataPropertyConfigSummaryInfo.h"
#include "OAIBTMetadataPropertyInfo.h"
#include "OAIBTMetadataPropertySummaryInfo.h"
#include "OAIBTMetadataPropertyUiHintsInfo.h"
#include "OAIBTMetadataPropertyValidatorInfo.h"
#include "OAIBTMetadataSchemaInfo.h"
#include "OAIBTMicroversionId-366.h"
#include "OAIBTMicroversionIdAndConfiguration-2338.h"
#include "OAIBTMicroversionInfo.h"
#include "OAIBTModelElementParams.h"
#include "OAIBTModelFormatFullInfo.h"
#include "OAIBTModelFormatInfo.h"
#include "OAIBTModifiableEntityOnlyFilter-1593.h"
#include "OAIBTMoveElementInfo.h"
#include "OAIBTMoveElementParams.h"
#include "OAIBTNameValuePair.h"
#include "OAIBTNamedViewInfo.h"
#include "OAIBTNamedViewsInfo.h"
#include "OAIBTNodeReference-21.h"
#include "OAIBTNotFilter-165.h"
#include "OAIBTNotice-227.h"
#include "OAIBTNullableQuantityRange-1340.h"
#include "OAIBTObjectId.h"
#include "OAIBTOccurrence-74.h"
#include "OAIBTOccurrenceFilter-166.h"
#include "OAIBTOrFilter-167.h"
#include "OAIBTOwner-3114.h"
#include "OAIBTOwnerInfo.h"
#include "OAIBTPAnnotation-231.h"
#include "OAIBTPArgumentDeclaration-232.h"
#include "OAIBTPBuiltinIdentifier-233.h"
#include "OAIBTPConversionFunction-1362.h"
#include "OAIBTPExpression-9.h"
#include "OAIBTPExpressionAccess-237.h"
#include "OAIBTPExpressionAs-238.h"
#include "OAIBTPExpressionBuiltinCall-239.h"
#include "OAIBTPExpressionCall-240.h"
#include "OAIBTPExpressionFunction-1325.h"
#include "OAIBTPExpressionGroup-241.h"
#include "OAIBTPExpressionIs-242.h"
#include "OAIBTPExpressionNew-243.h"
#include "OAIBTPExpressionOperator-244.h"
#include "OAIBTPExpressionSwitch-2632.h"
#include "OAIBTPExpressionTry-1271.h"
#include "OAIBTPExpressionVarReference-245.h"
#include "OAIBTPFunctionDeclaration-246.h"
#include "OAIBTPFunctionOrPredicateDeclaration-247.h"
#include "OAIBTPIdentifier-8.h"
#include "OAIBTPLValue-249.h"
#include "OAIBTPLValueAccess-250.h"
#include "OAIBTPLValueBoxDereference-251.h"
#include "OAIBTPLValueVarReference-252.h"
#include "OAIBTPLiteral-253.h"
#include "OAIBTPLiteralArray-254.h"
#include "OAIBTPLiteralBoolean-255.h"
#include "OAIBTPLiteralMap-256.h"
#include "OAIBTPLiteralMapEntry-257.h"
#include "OAIBTPLiteralNumber-258.h"
#include "OAIBTPLiteralString-259.h"
#include "OAIBTPLiteralUndefined-260.h"
#include "OAIBTPModule-234.h"
#include "OAIBTPModuleId-235.h"
#include "OAIBTPName-261.h"
#include "OAIBTPNode-7.h"
#include "OAIBTPOperatorDeclaration-264.h"
#include "OAIBTPPredicateDeclaration-265.h"
#include "OAIBTPProcedureDeclarationBase-266.h"
#include "OAIBTPPropertyAccessor-23.h"
#include "OAIBTPSpace-10.h"
#include "OAIBTPStatement-269.h"
#include "OAIBTPStatementAssignment-270.h"
#include "OAIBTPStatementBlock-271.h"
#include "OAIBTPStatementBreak-272.h"
#include "OAIBTPStatementCompressedQuery-1237.h"
#include "OAIBTPStatementConstantDeclaration-273.h"
#include "OAIBTPStatementContinue-274.h"
#include "OAIBTPStatementExpression-275.h"
#include "OAIBTPStatementIf-276.h"
#include "OAIBTPStatementLoop-277.h"
#include "OAIBTPStatementLoopFor3-278.h"
#include "OAIBTPStatementLoopForIn-279.h"
#include "OAIBTPStatementLoopWhile-280.h"
#include "OAIBTPStatementReturn-281.h"
#include "OAIBTPStatementThrow-1080.h"
#include "OAIBTPStatementTry-1523.h"
#include "OAIBTPStatementVarDeclaration-282.h"
#include "OAIBTPTopLevelConstantDeclaration-283.h"
#include "OAIBTPTopLevelEnumDeclaration-284.h"
#include "OAIBTPTopLevelImport-285.h"
#include "OAIBTPTopLevelNode-286.h"
#include "OAIBTPTopLevelTypeDeclaration-287.h"
#include "OAIBTPTopLevelUserTypeDeclaration-288.h"
#include "OAIBTPTypeName-290.h"
#include "OAIBTPTypeNameStandard-291.h"
#include "OAIBTPTypeNameUser-292.h"
#include "OAIBTParameterGroupSpec-3469.h"
#include "OAIBTParameterLookupTableEntry-1667.h"
#include "OAIBTParameterLookupTableListEntry-1916.h"
#include "OAIBTParameterSpec-6.h"
#include "OAIBTParameterSpecAppearance-1740.h"
#include "OAIBTParameterSpecArray-2600.h"
#include "OAIBTParameterSpecBoolean-170.h"
#include "OAIBTParameterSpecDatabase-1071.h"
#include "OAIBTParameterSpecDerived-736.h"
#include "OAIBTParameterSpecEnum-171.h"
#include "OAIBTParameterSpecFeatureList-703.h"
#include "OAIBTParameterSpecForeignId-172.h"
#include "OAIBTParameterSpecLookupTablePath-761.h"
#include "OAIBTParameterSpecMaterial-2700.h"
#include "OAIBTParameterSpecNullableQuantity-715.h"
#include "OAIBTParameterSpecQuantity-173.h"
#include "OAIBTParameterSpecQuery-174.h"
#include "OAIBTParameterSpecReference-2789.h"
#include "OAIBTParameterSpecReferenceAssembly-2821.h"
#include "OAIBTParameterSpecReferenceBlob-1367.h"
#include "OAIBTParameterSpecReferenceCADImport-1792.h"
#include "OAIBTParameterSpecReferenceImage-1722.h"
#include "OAIBTParameterSpecReferenceJSON-1816.h"
#include "OAIBTParameterSpecReferencePartStudio-1256.h"
#include "OAIBTParameterSpecReferenceTable-1520.h"
#include "OAIBTParameterSpecReferenceWithConfiguration-2950.h"
#include "OAIBTParameterSpecString-175.h"
#include "OAIBTParameterVisibilityAlwaysHidden-176.h"
#include "OAIBTParameterVisibilityCondition-177.h"
#include "OAIBTParameterVisibilityLogical-178.h"
#include "OAIBTParameterVisibilityOnEqual-180.h"
#include "OAIBTParameterVisibilityOnMateDOFType-2114.h"
#include "OAIBTPartAppearanceInfo.h"
#include "OAIBTPartAppearanceParams.h"
#include "OAIBTPartMaterial-1445.h"
#include "OAIBTPartMaterialInfo.h"
#include "OAIBTPartMaterialProperty-1453.h"
#include "OAIBTPartMaterialPropertyInfo.h"
#include "OAIBTPartMetadataInfo.h"
#include "OAIBTPermissionSet.h"
#include "OAIBTPlanSubscriberInfo.h"
#include "OAIBTPlaneDescription-692.h"
#include "OAIBTPlaneOrientationFilter-1700.h"
#include "OAIBTProjectInfo.h"
#include "OAIBTPropertyValueParam.h"
#include "OAIBTPublishedWorkflowId.h"
#include "OAIBTPublishedWorkflowInfo.h"
#include "OAIBTPurchaseInfo.h"
#include "OAIBTPurchaseUserParams.h"
#include "OAIBTQuantityRange-181.h"
#include "OAIBTQueryFilter-183.h"
#include "OAIBTRbacPermissionSchemeInfo.h"
#include "OAIBTRbacRoleInfo.h"
#include "OAIBTReleaseCommentListInfo.h"
#include "OAIBTReleasePackageInfo.h"
#include "OAIBTReleasePackageItemError.h"
#include "OAIBTReleasePackageItemInfo.h"
#include "OAIBTReleasePackageItemParams.h"
#include "OAIBTReleasePackageItemParams_notEditableInVersionProperties.h"
#include "OAIBTReleasePackageParams.h"
#include "OAIBTRevisionApproverInfo.h"
#include "OAIBTRevisionInfo.h"
#include "OAIBTRootAssemblyInfo.h"
#include "OAIBTRootDiffInfo.h"
#include "OAIBTSMBendTableRowMetadata-1705.h"
#include "OAIBTSMDefinitionEntityTypeFilter-1651.h"
#include "OAIBTSMOtherJointTableRowMetadata-2640.h"
#include "OAIBTSectionPlaneInfo.h"
#include "OAIBTSetFeatureRollbackCall-1899.h"
#include "OAIBTSetFeatureRollbackResponse-1042.h"
#include "OAIBTSettingInfo.h"
#include "OAIBTSettingParam.h"
#include "OAIBTShadedViewsInfo.h"
#include "OAIBTShareEntryParams.h"
#include "OAIBTShareParams.h"
#include "OAIBTSketchObjectFilter-184.h"
#include "OAIBTSphereDescription-1263.h"
#include "OAIBTSplineDescription-2118.h"
#include "OAIBTSpunDescription-657.h"
#include "OAIBTStringFormatBlockPattern-1755.h"
#include "OAIBTStringFormatCondition-683.h"
#include "OAIBTStringFormatMatchPattern-2446.h"
#include "OAIBTStringMaximumLengthPattern-2593.h"
#include "OAIBTStringMinimumLengthPattern-895.h"
#include "OAIBTSubAssemblyInfo.h"
#include "OAIBTSubstituteApproverInfo.h"
#include "OAIBTSurfaceDescription-1564.h"
#include "OAIBTSweepDescription-1473.h"
#include "OAIBTTable-1825.h"
#include "OAIBTTableAssemblyCrossHighlightData-2675.h"
#include "OAIBTTableAssemblyCrossHighlightDataItem-2659.h"
#include "OAIBTTableBaseCrossHighlightData-2609.h"
#include "OAIBTTableBaseRowMetadata-3181.h"
#include "OAIBTTableCell-1114.h"
#include "OAIBTTableCellParameter-2399.h"
#include "OAIBTTableCellPropertyParameter-2983.h"
#include "OAIBTTableColumnInfo-1222.h"
#include "OAIBTTableColumnSpec-1967.h"
#include "OAIBTTableCrossHighlightData-1753.h"
#include "OAIBTTableResponse-1546.h"
#include "OAIBTTableRow-1054.h"
#include "OAIBTTableSpec-915.h"
#include "OAIBTTableTestCellDouble-2509.h"
#include "OAIBTTableTestCellString-2112.h"
#include "OAIBTTeamInfo.h"
#include "OAIBTTeamSummaryInfo.h"
#include "OAIBTTextObjectFilter-1515.h"
#include "OAIBTTextStrokeFilter-461.h"
#include "OAIBTThumbnailInfo.h"
#include "OAIBTThumbnailSizeInfo.h"
#include "OAIBTTorusDescription-1834.h"
#include "OAIBTTranslateFormatParams.h"
#include "OAIBTTranslationRequestInfo.h"
#include "OAIBTTreeNode-20.h"
#include "OAIBTUniqueDocumentItemParams.h"
#include "OAIBTUnitsDisplayPrecision.h"
#include "OAIBTUnitsMaximumDisplayPrecisionInfo.h"
#include "OAIBTUpdateFeaturesCall-1748.h"
#include "OAIBTUpdateFeaturesResponse-1333.h"
#include "OAIBTUpdateMeshUnitsParams.h"
#include "OAIBTUpdateReferenceParams.h"
#include "OAIBTUpdateReleasePackageParams.h"
#include "OAIBTUpdateWorkflowableTestObjectParams.h"
#include "OAIBTUserAppSettingsInfo.h"
#include "OAIBTUserAppSettingsParams.h"
#include "OAIBTUserBasicSummaryInfo.h"
#include "OAIBTUserOAuth2SummaryInfo.h"
#include "OAIBTUserSettingsInfo.h"
#include "OAIBTUserSummaryInfo.h"
#include "OAIBTVector2d-1812.h"
#include "OAIBTVector3d-389.h"
#include "OAIBTVersionInfo.h"
#include "OAIBTVersionInfoBase.h"
#include "OAIBTVersionOrWorkspaceInfo.h"
#include "OAIBTVersionOrWorkspaceParams.h"
#include "OAIBTViewDataInfo.h"
#include "OAIBTViewManipulationMouseKeyMappingInfo.h"
#include "OAIBTWebhookInfo.h"
#include "OAIBTWebhookOptions.h"
#include "OAIBTWebhookParams.h"
#include "OAIBTWorkflowActionInfo.h"
#include "OAIBTWorkflowPropertyInfo.h"
#include "OAIBTWorkflowSnapshotInfo.h"
#include "OAIBTWorkflowStateInfo.h"
#include "OAIBTWorkflowableTestObjectInfo.h"
#include "OAIBTWorkspaceInfo.h"
#include "OAIBTWorkspacePartParams.h"
#include "OAICard.h"
#include "OAIComponents.h"
#include "OAIConfigurationEntry.h"
#include "OAIConfigurationInfoEntry.h"
#include "OAIContact.h"
#include "OAICoupon.h"
#include "OAICustomer.h"
#include "OAICustomerCardCollection.h"
#include "OAICustomerSubscriptionCollection.h"
#include "OAIDiscount.h"
#include "OAIDiscriminator.h"
#include "OAIEncoding.h"
#include "OAIEntry.h"
#include "OAIExample.h"
#include "OAIExternalAccount.h"
#include "OAIExternalAccountCollection.h"
#include "OAIExternalDocumentation.h"
#include "OAIGlobalPermissionInfo.h"
#include "OAIHeader.h"
#include "OAIInfo.h"
#include "OAIJsonNode.h"
#include "OAILicense.h"
#include "OAILink.h"
#include "OAIMediaType.h"
#include "OAINextCharge.h"
#include "OAINextRecurringCharge.h"
#include "OAIOAuthFlow.h"
#include "OAIOAuthFlow_scopes.h"
#include "OAIOAuthFlows.h"
#include "OAIOpenAPI.h"
#include "OAIOperation.h"
#include "OAIOperation_responses.h"
#include "OAIParameter.h"
#include "OAIParameterizedHeader.h"
#include "OAIPathItem.h"
#include "OAIPlan.h"
#include "OAIProratedCharges.h"
#include "OAIRequestBody.h"
#include "OAIRequestOptions.h"
#include "OAIRoleMapEntry.h"
#include "OAISchema.h"
#include "OAISecurityScheme.h"
#include "OAIServer.h"
#include "OAIServerVariable.h"
#include "OAIShippingDetails.h"
#include "OAISubscription.h"
#include "OAISubscriptionItem.h"
#include "OAISubscriptionItemCollection.h"
#include "OAITag.h"
#include "OAIThreeDSecure.h"
#include "OAITransformGroup.h"
#include "OAIUpdateParams.h"
#include "OAIXML.h"

namespace OpenAPI {

  inline void* create(QString type) {
    if(QString("OAIAddress").compare(type) == 0) {
      return new OAIAddress();
    }
    if(QString("OAIApiResponse").compare(type) == 0) {
      return new OAIApiResponse();
    }
    if(QString("OAIApiResponse_content").compare(type) == 0) {
      return new OAIApiResponse_content();
    }
    if(QString("OAIBTAPIApplicationSummaryInfo").compare(type) == 0) {
      return new OAIBTAPIApplicationSummaryInfo();
    }
    if(QString("OAIBTAclEntryInfo").compare(type) == 0) {
      return new OAIBTAclEntryInfo();
    }
    if(QString("OAIBTAclInfo").compare(type) == 0) {
      return new OAIBTAclInfo();
    }
    if(QString("OAIBTActiveSheetMetalFilter-2944").compare(type) == 0) {
      return new OAIBTActiveSheetMetalFilter-2944();
    }
    if(QString("OAIBTActiveWorkflowInfo").compare(type) == 0) {
      return new OAIBTActiveWorkflowInfo();
    }
    if(QString("OAIBTAddressInfo").compare(type) == 0) {
      return new OAIBTAddressInfo();
    }
    if(QString("OAIBTAllowEdgePointFilter-2371").compare(type) == 0) {
      return new OAIBTAllowEdgePointFilter-2371();
    }
    if(QString("OAIBTAllowFlattenedGeometryFilter-2140").compare(type) == 0) {
      return new OAIBTAllowFlattenedGeometryFilter-2140();
    }
    if(QString("OAIBTAllowMeshGeometryFilter-1026").compare(type) == 0) {
      return new OAIBTAllowMeshGeometryFilter-1026();
    }
    if(QString("OAIBTAllowedMateTypeFilter-1511").compare(type) == 0) {
      return new OAIBTAllowedMateTypeFilter-1511();
    }
    if(QString("OAIBTAndFilter-110").compare(type) == 0) {
      return new OAIBTAndFilter-110();
    }
    if(QString("OAIBTAppAssociativeDataInfoArray").compare(type) == 0) {
      return new OAIBTAppAssociativeDataInfoArray();
    }
    if(QString("OAIBTAppElementBasicInfo").compare(type) == 0) {
      return new OAIBTAppElementBasicInfo();
    }
    if(QString("OAIBTAppElementChangeParams").compare(type) == 0) {
      return new OAIBTAppElementChangeParams();
    }
    if(QString("OAIBTAppElementCommitTransactionParams").compare(type) == 0) {
      return new OAIBTAppElementCommitTransactionParams();
    }
    if(QString("OAIBTAppElementContentDeltaInfo").compare(type) == 0) {
      return new OAIBTAppElementContentDeltaInfo();
    }
    if(QString("OAIBTAppElementContentEntryInfo").compare(type) == 0) {
      return new OAIBTAppElementContentEntryInfo();
    }
    if(QString("OAIBTAppElementContentInfo").compare(type) == 0) {
      return new OAIBTAppElementContentInfo();
    }
    if(QString("OAIBTAppElementHistoryEntryInfo").compare(type) == 0) {
      return new OAIBTAppElementHistoryEntryInfo();
    }
    if(QString("OAIBTAppElementHistoryInfo").compare(type) == 0) {
      return new OAIBTAppElementHistoryInfo();
    }
    if(QString("OAIBTAppElementModifyInfo").compare(type) == 0) {
      return new OAIBTAppElementModifyInfo();
    }
    if(QString("OAIBTAppElementParams").compare(type) == 0) {
      return new OAIBTAppElementParams();
    }
    if(QString("OAIBTAppElementReferenceInfo").compare(type) == 0) {
      return new OAIBTAppElementReferenceInfo();
    }
    if(QString("OAIBTAppElementReferenceParams").compare(type) == 0) {
      return new OAIBTAppElementReferenceParams();
    }
    if(QString("OAIBTAppElementReferenceResolveInfo").compare(type) == 0) {
      return new OAIBTAppElementReferenceResolveInfo();
    }
    if(QString("OAIBTAppElementReferencesResolveInfo").compare(type) == 0) {
      return new OAIBTAppElementReferencesResolveInfo();
    }
    if(QString("OAIBTAppElementStartTransactionParams").compare(type) == 0) {
      return new OAIBTAppElementStartTransactionParams();
    }
    if(QString("OAIBTAppElementUpdateParams").compare(type) == 0) {
      return new OAIBTAppElementUpdateParams();
    }
    if(QString("OAIBTApplicationElementThumbnailParams").compare(type) == 0) {
      return new OAIBTApplicationElementThumbnailParams();
    }
    if(QString("OAIBTApplicationElementThumbnailParamsArray").compare(type) == 0) {
      return new OAIBTApplicationElementThumbnailParamsArray();
    }
    if(QString("OAIBTAssemblyDefinitionInfo").compare(type) == 0) {
      return new OAIBTAssemblyDefinitionInfo();
    }
    if(QString("OAIBTAssemblyFeatureDataInfo").compare(type) == 0) {
      return new OAIBTAssemblyFeatureDataInfo();
    }
    if(QString("OAIBTAssemblyFeatureInfo").compare(type) == 0) {
      return new OAIBTAssemblyFeatureInfo();
    }
    if(QString("OAIBTAssemblyFeatureListResponse-1174").compare(type) == 0) {
      return new OAIBTAssemblyFeatureListResponse-1174();
    }
    if(QString("OAIBTAssemblyInsertTransformedInstancesResponse").compare(type) == 0) {
      return new OAIBTAssemblyInsertTransformedInstancesResponse();
    }
    if(QString("OAIBTAssemblyInstanceDefinitionParams").compare(type) == 0) {
      return new OAIBTAssemblyInstanceDefinitionParams();
    }
    if(QString("OAIBTAssemblyInstanceInfo").compare(type) == 0) {
      return new OAIBTAssemblyInstanceInfo();
    }
    if(QString("OAIBTAssemblyMatedEntity").compare(type) == 0) {
      return new OAIBTAssemblyMatedEntity();
    }
    if(QString("OAIBTAssemblyOccurrenceInfo").compare(type) == 0) {
      return new OAIBTAssemblyOccurrenceInfo();
    }
    if(QString("OAIBTAssemblyPSFeatureInfo").compare(type) == 0) {
      return new OAIBTAssemblyPSFeatureInfo();
    }
    if(QString("OAIBTAssemblyPartsInfo").compare(type) == 0) {
      return new OAIBTAssemblyPartsInfo();
    }
    if(QString("OAIBTAssemblyTransformDefinitionParams").compare(type) == 0) {
      return new OAIBTAssemblyTransformDefinitionParams();
    }
    if(QString("OAIBTAssemblyTransformedInstancesDefinitionParams").compare(type) == 0) {
      return new OAIBTAssemblyTransformedInstancesDefinitionParams();
    }
    if(QString("OAIBTAssociativeDataInfo").compare(type) == 0) {
      return new OAIBTAssociativeDataInfo();
    }
    if(QString("OAIBTBaseInfo").compare(type) == 0) {
      return new OAIBTBaseInfo();
    }
    if(QString("OAIBTBaseSMJointTableRowMetadata-2232").compare(type) == 0) {
      return new OAIBTBaseSMJointTableRowMetadata-2232();
    }
    if(QString("OAIBTBillOfMaterialsTable-1073").compare(type) == 0) {
      return new OAIBTBillOfMaterialsTable-1073();
    }
    if(QString("OAIBTBillOfMaterialsTableRow-1425").compare(type) == 0) {
      return new OAIBTBillOfMaterialsTableRow-1425();
    }
    if(QString("OAIBTBillOfMaterialsTableRowMetadata-1300").compare(type) == 0) {
      return new OAIBTBillOfMaterialsTableRowMetadata-1300();
    }
    if(QString("OAIBTBillOfMaterialsUniqueItemId-2029").compare(type) == 0) {
      return new OAIBTBillOfMaterialsUniqueItemId-2029();
    }
    if(QString("OAIBTBillingPlanInfo").compare(type) == 0) {
      return new OAIBTBillingPlanInfo();
    }
    if(QString("OAIBTBodyTypeFilter-112").compare(type) == 0) {
      return new OAIBTBodyTypeFilter-112();
    }
    if(QString("OAIBTBoundingBox-1052").compare(type) == 0) {
      return new OAIBTBoundingBox-1052();
    }
    if(QString("OAIBTBoundingBoxInfo").compare(type) == 0) {
      return new OAIBTBoundingBoxInfo();
    }
    if(QString("OAIBTCacheDataPath-191").compare(type) == 0) {
      return new OAIBTCacheDataPath-191();
    }
    if(QString("OAIBTCardInfo").compare(type) == 0) {
      return new OAIBTCardInfo();
    }
    if(QString("OAIBTCircleDescription-1145").compare(type) == 0) {
      return new OAIBTCircleDescription-1145();
    }
    if(QString("OAIBTClosedCurveFilter-1206").compare(type) == 0) {
      return new OAIBTClosedCurveFilter-1206();
    }
    if(QString("OAIBTCloudStorageAccountInfo").compare(type) == 0) {
      return new OAIBTCloudStorageAccountInfo();
    }
    if(QString("OAIBTCloudStorageObjectInfo").compare(type) == 0) {
      return new OAIBTCloudStorageObjectInfo();
    }
    if(QString("OAIBTColorInfo").compare(type) == 0) {
      return new OAIBTColorInfo();
    }
    if(QString("OAIBTColorParams").compare(type) == 0) {
      return new OAIBTColorParams();
    }
    if(QString("OAIBTCommentAttachmentInfo").compare(type) == 0) {
      return new OAIBTCommentAttachmentInfo();
    }
    if(QString("OAIBTCommentInfo").compare(type) == 0) {
      return new OAIBTCommentInfo();
    }
    if(QString("OAIBTCommonUnitInfo").compare(type) == 0) {
      return new OAIBTCommonUnitInfo();
    }
    if(QString("OAIBTCommonUnitsInfo").compare(type) == 0) {
      return new OAIBTCommonUnitsInfo();
    }
    if(QString("OAIBTCompanyInfo").compare(type) == 0) {
      return new OAIBTCompanyInfo();
    }
    if(QString("OAIBTCompanySummaryInfo").compare(type) == 0) {
      return new OAIBTCompanySummaryInfo();
    }
    if(QString("OAIBTComputedConfigurationInputSpec-2525").compare(type) == 0) {
      return new OAIBTComputedConfigurationInputSpec-2525();
    }
    if(QString("OAIBTConeDescription-860").compare(type) == 0) {
      return new OAIBTConeDescription-860();
    }
    if(QString("OAIBTConfigurationInfo").compare(type) == 0) {
      return new OAIBTConfigurationInfo();
    }
    if(QString("OAIBTConfigurationParams").compare(type) == 0) {
      return new OAIBTConfigurationParams();
    }
    if(QString("OAIBTConfigurationResponse-2019").compare(type) == 0) {
      return new OAIBTConfigurationResponse-2019();
    }
    if(QString("OAIBTConfigurationUpdateCall-2933").compare(type) == 0) {
      return new OAIBTConfigurationUpdateCall-2933();
    }
    if(QString("OAIBTConfiguredDimensionColumnInfo-2168").compare(type) == 0) {
      return new OAIBTConfiguredDimensionColumnInfo-2168();
    }
    if(QString("OAIBTConfiguredFeatureColumnInfo-1014").compare(type) == 0) {
      return new OAIBTConfiguredFeatureColumnInfo-1014();
    }
    if(QString("OAIBTConfiguredParameterColumnInfo-2900").compare(type) == 0) {
      return new OAIBTConfiguredParameterColumnInfo-2900();
    }
    if(QString("OAIBTConfiguredPartPropertiesTable-2740").compare(type) == 0) {
      return new OAIBTConfiguredPartPropertiesTable-2740();
    }
    if(QString("OAIBTConfiguredSuppressionColumnInfo-2498").compare(type) == 0) {
      return new OAIBTConfiguredSuppressionColumnInfo-2498();
    }
    if(QString("OAIBTConfiguredValuesColumnInfo-1025").compare(type) == 0) {
      return new OAIBTConfiguredValuesColumnInfo-1025();
    }
    if(QString("OAIBTConstructionObjectFilter-113").compare(type) == 0) {
      return new OAIBTConstructionObjectFilter-113();
    }
    if(QString("OAIBTCopyDocumentInfo").compare(type) == 0) {
      return new OAIBTCopyDocumentInfo();
    }
    if(QString("OAIBTCopyDocumentParams").compare(type) == 0) {
      return new OAIBTCopyDocumentParams();
    }
    if(QString("OAIBTCopyElementParams").compare(type) == 0) {
      return new OAIBTCopyElementParams();
    }
    if(QString("OAIBTCurveDescription-1583").compare(type) == 0) {
      return new OAIBTCurveDescription-1583();
    }
    if(QString("OAIBTCurveGeometry-114").compare(type) == 0) {
      return new OAIBTCurveGeometry-114();
    }
    if(QString("OAIBTCurveGeometryCircle-115").compare(type) == 0) {
      return new OAIBTCurveGeometryCircle-115();
    }
    if(QString("OAIBTCurveGeometryConic-2284").compare(type) == 0) {
      return new OAIBTCurveGeometryConic-2284();
    }
    if(QString("OAIBTCurveGeometryEllipse-1189").compare(type) == 0) {
      return new OAIBTCurveGeometryEllipse-1189();
    }
    if(QString("OAIBTCurveGeometryInterpolatedSpline-116").compare(type) == 0) {
      return new OAIBTCurveGeometryInterpolatedSpline-116();
    }
    if(QString("OAIBTCurveGeometryLine-117").compare(type) == 0) {
      return new OAIBTCurveGeometryLine-117();
    }
    if(QString("OAIBTCurveGeometrySpline-118").compare(type) == 0) {
      return new OAIBTCurveGeometrySpline-118();
    }
    if(QString("OAIBTCustomPropertyDefinitionInfo").compare(type) == 0) {
      return new OAIBTCustomPropertyDefinitionInfo();
    }
    if(QString("OAIBTCustomPropertyDefinitionParams").compare(type) == 0) {
      return new OAIBTCustomPropertyDefinitionParams();
    }
    if(QString("OAIBTCylinderDescription-686").compare(type) == 0) {
      return new OAIBTCylinderDescription-686();
    }
    if(QString("OAIBTDefaultUnitInfo").compare(type) == 0) {
      return new OAIBTDefaultUnitInfo();
    }
    if(QString("OAIBTDefaultUnitsInfo").compare(type) == 0) {
      return new OAIBTDefaultUnitsInfo();
    }
    if(QString("OAIBTDiffInfo").compare(type) == 0) {
      return new OAIBTDiffInfo();
    }
    if(QString("OAIBTDiscountInfo").compare(type) == 0) {
      return new OAIBTDiscountInfo();
    }
    if(QString("OAIBTDocumentElementInfo").compare(type) == 0) {
      return new OAIBTDocumentElementInfo();
    }
    if(QString("OAIBTDocumentElementProcessingInfo").compare(type) == 0) {
      return new OAIBTDocumentElementProcessingInfo();
    }
    if(QString("OAIBTDocumentInfo").compare(type) == 0) {
      return new OAIBTDocumentInfo();
    }
    if(QString("OAIBTDocumentLabelInfo").compare(type) == 0) {
      return new OAIBTDocumentLabelInfo();
    }
    if(QString("OAIBTDocumentMergeInfo").compare(type) == 0) {
      return new OAIBTDocumentMergeInfo();
    }
    if(QString("OAIBTDocumentParams").compare(type) == 0) {
      return new OAIBTDocumentParams();
    }
    if(QString("OAIBTDocumentProcessingInfo").compare(type) == 0) {
      return new OAIBTDocumentProcessingInfo();
    }
    if(QString("OAIBTDocumentSearchHitInfo").compare(type) == 0) {
      return new OAIBTDocumentSearchHitInfo();
    }
    if(QString("OAIBTDocumentSearchParams").compare(type) == 0) {
      return new OAIBTDocumentSearchParams();
    }
    if(QString("OAIBTDocumentSummaryInfo").compare(type) == 0) {
      return new OAIBTDocumentSummaryInfo();
    }
    if(QString("OAIBTDocumentSummarySearchInfo").compare(type) == 0) {
      return new OAIBTDocumentSummarySearchInfo();
    }
    if(QString("OAIBTDocumentVersionElementIds-1897").compare(type) == 0) {
      return new OAIBTDocumentVersionElementIds-1897();
    }
    if(QString("OAIBTDocumentWithVersionAndElementId").compare(type) == 0) {
      return new OAIBTDocumentWithVersionAndElementId();
    }
    if(QString("OAIBTDocumentWithVersionId").compare(type) == 0) {
      return new OAIBTDocumentWithVersionId();
    }
    if(QString("OAIBTDrawingParams").compare(type) == 0) {
      return new OAIBTDrawingParams();
    }
    if(QString("OAIBTEdgeTopologyFilter-122").compare(type) == 0) {
      return new OAIBTEdgeTopologyFilter-122();
    }
    if(QString("OAIBTEditingLogic-2350").compare(type) == 0) {
      return new OAIBTEditingLogic-2350();
    }
    if(QString("OAIBTElementLocationParams").compare(type) == 0) {
      return new OAIBTElementLocationParams();
    }
    if(QString("OAIBTElementReference-725").compare(type) == 0) {
      return new OAIBTElementReference-725();
    }
    if(QString("OAIBTEllipseDescription-866").compare(type) == 0) {
      return new OAIBTEllipseDescription-866();
    }
    if(QString("OAIBTEncodedConfigurationInfo").compare(type) == 0) {
      return new OAIBTEncodedConfigurationInfo();
    }
    if(QString("OAIBTEntityTypeFilter-124").compare(type) == 0) {
      return new OAIBTEntityTypeFilter-124();
    }
    if(QString("OAIBTExplosion-2754").compare(type) == 0) {
      return new OAIBTExplosion-2754();
    }
    if(QString("OAIBTExplosionStepFeature-3008").compare(type) == 0) {
      return new OAIBTExplosionStepFeature-3008();
    }
    if(QString("OAIBTExportModelArcEdgeGeometry-1257").compare(type) == 0) {
      return new OAIBTExportModelArcEdgeGeometry-1257();
    }
    if(QString("OAIBTExportModelBodiesResponse-734").compare(type) == 0) {
      return new OAIBTExportModelBodiesResponse-734();
    }
    if(QString("OAIBTExportModelBody-1272").compare(type) == 0) {
      return new OAIBTExportModelBody-1272();
    }
    if(QString("OAIBTExportModelCoedge-1342").compare(type) == 0) {
      return new OAIBTExportModelCoedge-1342();
    }
    if(QString("OAIBTExportModelEdge-1782").compare(type) == 0) {
      return new OAIBTExportModelEdge-1782();
    }
    if(QString("OAIBTExportModelEdgeGeometry-1125").compare(type) == 0) {
      return new OAIBTExportModelEdgeGeometry-1125();
    }
    if(QString("OAIBTExportModelFace-1363").compare(type) == 0) {
      return new OAIBTExportModelFace-1363();
    }
    if(QString("OAIBTExportModelLoop-1182").compare(type) == 0) {
      return new OAIBTExportModelLoop-1182();
    }
    if(QString("OAIBTExportModelParams").compare(type) == 0) {
      return new OAIBTExportModelParams();
    }
    if(QString("OAIBTExportModelVertex-858").compare(type) == 0) {
      return new OAIBTExportModelVertex-858();
    }
    if(QString("OAIBTExportTessellatedBody-3398").compare(type) == 0) {
      return new OAIBTExportTessellatedBody-3398();
    }
    if(QString("OAIBTExportTessellatedEdgesBody-890").compare(type) == 0) {
      return new OAIBTExportTessellatedEdgesBody-890();
    }
    if(QString("OAIBTExportTessellatedEdgesEdge-1364").compare(type) == 0) {
      return new OAIBTExportTessellatedEdgesEdge-1364();
    }
    if(QString("OAIBTExportTessellatedEdgesResponse-327").compare(type) == 0) {
      return new OAIBTExportTessellatedEdgesResponse-327();
    }
    if(QString("OAIBTExportTessellatedFacesBody-1321").compare(type) == 0) {
      return new OAIBTExportTessellatedFacesBody-1321();
    }
    if(QString("OAIBTExportTessellatedFacesFace-1192").compare(type) == 0) {
      return new OAIBTExportTessellatedFacesFace-1192();
    }
    if(QString("OAIBTExportTessellatedFacesFacet-1417").compare(type) == 0) {
      return new OAIBTExportTessellatedFacesFacet-1417();
    }
    if(QString("OAIBTExportTessellatedFacesResponse-898").compare(type) == 0) {
      return new OAIBTExportTessellatedFacesResponse-898();
    }
    if(QString("OAIBTExternalElementReferenceInfo").compare(type) == 0) {
      return new OAIBTExternalElementReferenceInfo();
    }
    if(QString("OAIBTExternalReference-1936").compare(type) == 0) {
      return new OAIBTExternalReference-1936();
    }
    if(QString("OAIBTFSTable-953").compare(type) == 0) {
      return new OAIBTFSTable-953();
    }
    if(QString("OAIBTFSTableColumnInfo-623").compare(type) == 0) {
      return new OAIBTFSTableColumnInfo-623();
    }
    if(QString("OAIBTFSTableRowMetadata-2262").compare(type) == 0) {
      return new OAIBTFSTableRowMetadata-2262();
    }
    if(QString("OAIBTFSValue-1888").compare(type) == 0) {
      return new OAIBTFSValue-1888();
    }
    if(QString("OAIBTFSValueArray-1499").compare(type) == 0) {
      return new OAIBTFSValueArray-1499();
    }
    if(QString("OAIBTFSValueBoolean-1195").compare(type) == 0) {
      return new OAIBTFSValueBoolean-1195();
    }
    if(QString("OAIBTFSValueMap-2062").compare(type) == 0) {
      return new OAIBTFSValueMap-2062();
    }
    if(QString("OAIBTFSValueMapEntry-2077").compare(type) == 0) {
      return new OAIBTFSValueMapEntry-2077();
    }
    if(QString("OAIBTFSValueNumber-772").compare(type) == 0) {
      return new OAIBTFSValueNumber-772();
    }
    if(QString("OAIBTFSValueOther-1124").compare(type) == 0) {
      return new OAIBTFSValueOther-1124();
    }
    if(QString("OAIBTFSValueString-1422").compare(type) == 0) {
      return new OAIBTFSValueString-1422();
    }
    if(QString("OAIBTFSValueTooBig-1247").compare(type) == 0) {
      return new OAIBTFSValueTooBig-1247();
    }
    if(QString("OAIBTFSValueUndefined-2003").compare(type) == 0) {
      return new OAIBTFSValueUndefined-2003();
    }
    if(QString("OAIBTFSValueWithUnits-1817").compare(type) == 0) {
      return new OAIBTFSValueWithUnits-1817();
    }
    if(QString("OAIBTFeatureApiBase-1430").compare(type) == 0) {
      return new OAIBTFeatureApiBase-1430();
    }
    if(QString("OAIBTFeatureDefinitionCall-1406").compare(type) == 0) {
      return new OAIBTFeatureDefinitionCall-1406();
    }
    if(QString("OAIBTFeatureDefinitionResponse-1617").compare(type) == 0) {
      return new OAIBTFeatureDefinitionResponse-1617();
    }
    if(QString("OAIBTFeatureFilter-127").compare(type) == 0) {
      return new OAIBTFeatureFilter-127();
    }
    if(QString("OAIBTFeatureListResponse-2457").compare(type) == 0) {
      return new OAIBTFeatureListResponse-2457();
    }
    if(QString("OAIBTFeatureScriptEvalCall-2377").compare(type) == 0) {
      return new OAIBTFeatureScriptEvalCall-2377();
    }
    if(QString("OAIBTFeatureScriptEvalResponse-1859").compare(type) == 0) {
      return new OAIBTFeatureScriptEvalResponse-1859();
    }
    if(QString("OAIBTFeatureSpec-129").compare(type) == 0) {
      return new OAIBTFeatureSpec-129();
    }
    if(QString("OAIBTFeatureSpecsResponse-664").compare(type) == 0) {
      return new OAIBTFeatureSpecsResponse-664();
    }
    if(QString("OAIBTFeatureState-1688").compare(type) == 0) {
      return new OAIBTFeatureState-1688();
    }
    if(QString("OAIBTFeatureStudioContents-2239").compare(type) == 0) {
      return new OAIBTFeatureStudioContents-2239();
    }
    if(QString("OAIBTFeatureTypeFilter-962").compare(type) == 0) {
      return new OAIBTFeatureTypeFilter-962();
    }
    if(QString("OAIBTFlatSheetMetalFilter-3018").compare(type) == 0) {
      return new OAIBTFlatSheetMetalFilter-3018();
    }
    if(QString("OAIBTFolderInfo").compare(type) == 0) {
      return new OAIBTFolderInfo();
    }
    if(QString("OAIBTForeignDataResponse-1070").compare(type) == 0) {
      return new OAIBTForeignDataResponse-1070();
    }
    if(QString("OAIBTFullElementId-756").compare(type) == 0) {
      return new OAIBTFullElementId-756();
    }
    if(QString("OAIBTFullElementIdAndPartId-643").compare(type) == 0) {
      return new OAIBTFullElementIdAndPartId-643();
    }
    if(QString("OAIBTFullElementIdWithDocument-1729").compare(type) == 0) {
      return new OAIBTFullElementIdWithDocument-1729();
    }
    if(QString("OAIBTGeometryFilter-130").compare(type) == 0) {
      return new OAIBTGeometryFilter-130();
    }
    if(QString("OAIBTGlobalTreeMagicNodeInfo").compare(type) == 0) {
      return new OAIBTGlobalTreeMagicNodeInfo();
    }
    if(QString("OAIBTGlobalTreeNodeInfo").compare(type) == 0) {
      return new OAIBTGlobalTreeNodeInfo();
    }
    if(QString("OAIBTGlobalTreeNodeListResponse").compare(type) == 0) {
      return new OAIBTGlobalTreeNodeListResponse();
    }
    if(QString("OAIBTGlobalTreeNodeListResponseBTTeamInfo").compare(type) == 0) {
      return new OAIBTGlobalTreeNodeListResponseBTTeamInfo();
    }
    if(QString("OAIBTGraphicsAppearance-1152").compare(type) == 0) {
      return new OAIBTGraphicsAppearance-1152();
    }
    if(QString("OAIBTIdTranslationInfo").compare(type) == 0) {
      return new OAIBTIdTranslationInfo();
    }
    if(QString("OAIBTIdTranslationParams").compare(type) == 0) {
      return new OAIBTIdTranslationParams();
    }
    if(QString("OAIBTIdTranslationResultInfo").compare(type) == 0) {
      return new OAIBTIdTranslationResultInfo();
    }
    if(QString("OAIBTIdentityInfo").compare(type) == 0) {
      return new OAIBTIdentityInfo();
    }
    if(QString("OAIBTImageFilter-853").compare(type) == 0) {
      return new OAIBTImageFilter-853();
    }
    if(QString("OAIBTImport").compare(type) == 0) {
      return new OAIBTImport();
    }
    if(QString("OAIBTInheritedAclInfo").compare(type) == 0) {
      return new OAIBTInheritedAclInfo();
    }
    if(QString("OAIBTInnerArrayParameterLocation-2368").compare(type) == 0) {
      return new OAIBTInnerArrayParameterLocation-2368();
    }
    if(QString("OAIBTInnerDerivedParameterLocation-591").compare(type) == 0) {
      return new OAIBTInnerDerivedParameterLocation-591();
    }
    if(QString("OAIBTInnerParameterLocation-1715").compare(type) == 0) {
      return new OAIBTInnerParameterLocation-1715();
    }
    if(QString("OAIBTInsertableInfo").compare(type) == 0) {
      return new OAIBTInsertableInfo();
    }
    if(QString("OAIBTInsertablesListResponse").compare(type) == 0) {
      return new OAIBTInsertablesListResponse();
    }
    if(QString("OAIBTKeyMouseValuesInfo").compare(type) == 0) {
      return new OAIBTKeyMouseValuesInfo();
    }
    if(QString("OAIBTLineDescription-1559").compare(type) == 0) {
      return new OAIBTLineDescription-1559();
    }
    if(QString("OAIBTLinkToLatestDocumentInfo").compare(type) == 0) {
      return new OAIBTLinkToLatestDocumentInfo();
    }
    if(QString("OAIBTLinkToLatestDocumentParams").compare(type) == 0) {
      return new OAIBTLinkToLatestDocumentParams();
    }
    if(QString("OAIBTListResponseBTCompanyInfo").compare(type) == 0) {
      return new OAIBTListResponseBTCompanyInfo();
    }
    if(QString("OAIBTListResponseBTInsertableInfo").compare(type) == 0) {
      return new OAIBTListResponseBTInsertableInfo();
    }
    if(QString("OAIBTListResponseBTMetadataPropertySummaryInfo").compare(type) == 0) {
      return new OAIBTListResponseBTMetadataPropertySummaryInfo();
    }
    if(QString("OAIBTListResponseBTPurchaseInfo").compare(type) == 0) {
      return new OAIBTListResponseBTPurchaseInfo();
    }
    if(QString("OAIBTListResponseBTRevisionInfo").compare(type) == 0) {
      return new OAIBTListResponseBTRevisionInfo();
    }
    if(QString("OAIBTListResponseBTTranslationRequestInfo").compare(type) == 0) {
      return new OAIBTListResponseBTTranslationRequestInfo();
    }
    if(QString("OAIBTListResponseBTWebhookInfo").compare(type) == 0) {
      return new OAIBTListResponseBTWebhookInfo();
    }
    if(QString("OAIBTLocationInfo-226").compare(type) == 0) {
      return new OAIBTLocationInfo-226();
    }
    if(QString("OAIBTMArrayParameterItem-1843").compare(type) == 0) {
      return new OAIBTMArrayParameterItem-1843();
    }
    if(QString("OAIBTMAssemblyFeature-887").compare(type) == 0) {
      return new OAIBTMAssemblyFeature-887();
    }
    if(QString("OAIBTMAssemblyFeature1-2218").compare(type) == 0) {
      return new OAIBTMAssemblyFeature1-2218();
    }
    if(QString("OAIBTMAssemblyFeature2-1022").compare(type) == 0) {
      return new OAIBTMAssemblyFeature2-1022();
    }
    if(QString("OAIBTMAssemblyPatternFeature-2241").compare(type) == 0) {
      return new OAIBTMAssemblyPatternFeature-2241();
    }
    if(QString("OAIBTMConfigurationParameter-819").compare(type) == 0) {
      return new OAIBTMConfigurationParameter-819();
    }
    if(QString("OAIBTMConfigurationParameterBoolean-2550").compare(type) == 0) {
      return new OAIBTMConfigurationParameterBoolean-2550();
    }
    if(QString("OAIBTMConfigurationParameterEnum-105").compare(type) == 0) {
      return new OAIBTMConfigurationParameterEnum-105();
    }
    if(QString("OAIBTMConfigurationParameterQuantity-1826").compare(type) == 0) {
      return new OAIBTMConfigurationParameterQuantity-1826();
    }
    if(QString("OAIBTMConfigurationParameterString-872").compare(type) == 0) {
      return new OAIBTMConfigurationParameterString-872();
    }
    if(QString("OAIBTMConfiguredValue-1341").compare(type) == 0) {
      return new OAIBTMConfiguredValue-1341();
    }
    if(QString("OAIBTMConfiguredValueByBoolean-1501").compare(type) == 0) {
      return new OAIBTMConfiguredValueByBoolean-1501();
    }
    if(QString("OAIBTMConfiguredValueByEnum-1923").compare(type) == 0) {
      return new OAIBTMConfiguredValueByEnum-1923();
    }
    if(QString("OAIBTMDatabaseParameter-2229").compare(type) == 0) {
      return new OAIBTMDatabaseParameter-2229();
    }
    if(QString("OAIBTMEnumOption-592").compare(type) == 0) {
      return new OAIBTMEnumOption-592();
    }
    if(QString("OAIBTMFeature-134").compare(type) == 0) {
      return new OAIBTMFeature-134();
    }
    if(QString("OAIBTMFeatureInvalid-1031").compare(type) == 0) {
      return new OAIBTMFeatureInvalid-1031();
    }
    if(QString("OAIBTMFeatureQueryWithOccurrence-157").compare(type) == 0) {
      return new OAIBTMFeatureQueryWithOccurrence-157();
    }
    if(QString("OAIBTMGeometryMate-1260").compare(type) == 0) {
      return new OAIBTMGeometryMate-1260();
    }
    if(QString("OAIBTMImport-136").compare(type) == 0) {
      return new OAIBTMImport-136();
    }
    if(QString("OAIBTMInContextQuery-2254").compare(type) == 0) {
      return new OAIBTMInContextQuery-2254();
    }
    if(QString("OAIBTMIndividualCoEdgeQuery-1332").compare(type) == 0) {
      return new OAIBTMIndividualCoEdgeQuery-1332();
    }
    if(QString("OAIBTMIndividualCreatedByQuery-137").compare(type) == 0) {
      return new OAIBTMIndividualCreatedByQuery-137();
    }
    if(QString("OAIBTMIndividualOccurrenceQuery-626").compare(type) == 0) {
      return new OAIBTMIndividualOccurrenceQuery-626();
    }
    if(QString("OAIBTMIndividualQuery-138").compare(type) == 0) {
      return new OAIBTMIndividualQuery-138();
    }
    if(QString("OAIBTMIndividualQueryBase-139").compare(type) == 0) {
      return new OAIBTMIndividualQueryBase-139();
    }
    if(QString("OAIBTMIndividualQueryWithOccurrence-811").compare(type) == 0) {
      return new OAIBTMIndividualQueryWithOccurrence-811();
    }
    if(QString("OAIBTMIndividualQueryWithOccurrenceBase-904").compare(type) == 0) {
      return new OAIBTMIndividualQueryWithOccurrenceBase-904();
    }
    if(QString("OAIBTMIndividualSketchRegionQuery-140").compare(type) == 0) {
      return new OAIBTMIndividualSketchRegionQuery-140();
    }
    if(QString("OAIBTMIndividualSketchUniqueVerticesQuery-1472").compare(type) == 0) {
      return new OAIBTMIndividualSketchUniqueVerticesQuery-1472();
    }
    if(QString("OAIBTMInferenceQueryWithOccurrence-1083").compare(type) == 0) {
      return new OAIBTMInferenceQueryWithOccurrence-1083();
    }
    if(QString("OAIBTMMate-64").compare(type) == 0) {
      return new OAIBTMMate-64();
    }
    if(QString("OAIBTMMateConnector-66").compare(type) == 0) {
      return new OAIBTMMateConnector-66();
    }
    if(QString("OAIBTMMateGroup-65").compare(type) == 0) {
      return new OAIBTMMateGroup-65();
    }
    if(QString("OAIBTMMateRelation-1412").compare(type) == 0) {
      return new OAIBTMMateRelation-1412();
    }
    if(QString("OAIBTMNonGeometricItem-1864").compare(type) == 0) {
      return new OAIBTMNonGeometricItem-1864();
    }
    if(QString("OAIBTMParameter-1").compare(type) == 0) {
      return new OAIBTMParameter-1();
    }
    if(QString("OAIBTMParameterAppearance-627").compare(type) == 0) {
      return new OAIBTMParameterAppearance-627();
    }
    if(QString("OAIBTMParameterArray-2025").compare(type) == 0) {
      return new OAIBTMParameterArray-2025();
    }
    if(QString("OAIBTMParameterBlobReference-1679").compare(type) == 0) {
      return new OAIBTMParameterBlobReference-1679();
    }
    if(QString("OAIBTMParameterBoolean-144").compare(type) == 0) {
      return new OAIBTMParameterBoolean-144();
    }
    if(QString("OAIBTMParameterConfigured-2222").compare(type) == 0) {
      return new OAIBTMParameterConfigured-2222();
    }
    if(QString("OAIBTMParameterDerived-864").compare(type) == 0) {
      return new OAIBTMParameterDerived-864();
    }
    if(QString("OAIBTMParameterEnum-145").compare(type) == 0) {
      return new OAIBTMParameterEnum-145();
    }
    if(QString("OAIBTMParameterFeatureList-1749").compare(type) == 0) {
      return new OAIBTMParameterFeatureList-1749();
    }
    if(QString("OAIBTMParameterForeignId-146").compare(type) == 0) {
      return new OAIBTMParameterForeignId-146();
    }
    if(QString("OAIBTMParameterInvalid-1664").compare(type) == 0) {
      return new OAIBTMParameterInvalid-1664();
    }
    if(QString("OAIBTMParameterLookupTablePath-1419").compare(type) == 0) {
      return new OAIBTMParameterLookupTablePath-1419();
    }
    if(QString("OAIBTMParameterMaterial-1388").compare(type) == 0) {
      return new OAIBTMParameterMaterial-1388();
    }
    if(QString("OAIBTMParameterNullableQuantity-807").compare(type) == 0) {
      return new OAIBTMParameterNullableQuantity-807();
    }
    if(QString("OAIBTMParameterQuantity-147").compare(type) == 0) {
      return new OAIBTMParameterQuantity-147();
    }
    if(QString("OAIBTMParameterQueryList-148").compare(type) == 0) {
      return new OAIBTMParameterQueryList-148();
    }
    if(QString("OAIBTMParameterQueryWithOccurrenceList-67").compare(type) == 0) {
      return new OAIBTMParameterQueryWithOccurrenceList-67();
    }
    if(QString("OAIBTMParameterReference-2434").compare(type) == 0) {
      return new OAIBTMParameterReference-2434();
    }
    if(QString("OAIBTMParameterReferenceAssembly-938").compare(type) == 0) {
      return new OAIBTMParameterReferenceAssembly-938();
    }
    if(QString("OAIBTMParameterReferenceBlob-3281").compare(type) == 0) {
      return new OAIBTMParameterReferenceBlob-3281();
    }
    if(QString("OAIBTMParameterReferenceCADImport-2016").compare(type) == 0) {
      return new OAIBTMParameterReferenceCADImport-2016();
    }
    if(QString("OAIBTMParameterReferenceImage-2014").compare(type) == 0) {
      return new OAIBTMParameterReferenceImage-2014();
    }
    if(QString("OAIBTMParameterReferenceJSON-790").compare(type) == 0) {
      return new OAIBTMParameterReferenceJSON-790();
    }
    if(QString("OAIBTMParameterReferencePartStudio-3302").compare(type) == 0) {
      return new OAIBTMParameterReferencePartStudio-3302();
    }
    if(QString("OAIBTMParameterReferenceTable-917").compare(type) == 0) {
      return new OAIBTMParameterReferenceTable-917();
    }
    if(QString("OAIBTMParameterReferenceWithConfiguration-3028").compare(type) == 0) {
      return new OAIBTMParameterReferenceWithConfiguration-3028();
    }
    if(QString("OAIBTMParameterString-149").compare(type) == 0) {
      return new OAIBTMParameterString-149();
    }
    if(QString("OAIBTMPartStudioMateConnectorQuery-1324").compare(type) == 0) {
      return new OAIBTMPartStudioMateConnectorQuery-1324();
    }
    if(QString("OAIBTMSketch-151").compare(type) == 0) {
      return new OAIBTMSketch-151();
    }
    if(QString("OAIBTMSketchConstraint-2").compare(type) == 0) {
      return new OAIBTMSketchConstraint-2();
    }
    if(QString("OAIBTMSketchCurve-4").compare(type) == 0) {
      return new OAIBTMSketchCurve-4();
    }
    if(QString("OAIBTMSketchCurveSegment-155").compare(type) == 0) {
      return new OAIBTMSketchCurveSegment-155();
    }
    if(QString("OAIBTMSketchGeomEntity-5").compare(type) == 0) {
      return new OAIBTMSketchGeomEntity-5();
    }
    if(QString("OAIBTMSketchImageEntity-763").compare(type) == 0) {
      return new OAIBTMSketchImageEntity-763();
    }
    if(QString("OAIBTMSketchPoint-158").compare(type) == 0) {
      return new OAIBTMSketchPoint-158();
    }
    if(QString("OAIBTMSketchTextEntity-1761").compare(type) == 0) {
      return new OAIBTMSketchTextEntity-1761();
    }
    if(QString("OAIBTMassPropertiesBulkInfo").compare(type) == 0) {
      return new OAIBTMassPropertiesBulkInfo();
    }
    if(QString("OAIBTMassPropertiesInfo-null").compare(type) == 0) {
      return new OAIBTMassPropertiesInfo-null();
    }
    if(QString("OAIBTMateConnectorCSInfo").compare(type) == 0) {
      return new OAIBTMateConnectorCSInfo();
    }
    if(QString("OAIBTMateConnectorFilter-163").compare(type) == 0) {
      return new OAIBTMateConnectorFilter-163();
    }
    if(QString("OAIBTMateFilter-162").compare(type) == 0) {
      return new OAIBTMateFilter-162();
    }
    if(QString("OAIBTMaterialLibraryMetadataInfo").compare(type) == 0) {
      return new OAIBTMaterialLibraryMetadataInfo();
    }
    if(QString("OAIBTMaterialLibrarySettingsInfo").compare(type) == 0) {
      return new OAIBTMaterialLibrarySettingsInfo();
    }
    if(QString("OAIBTMaterialParams").compare(type) == 0) {
      return new OAIBTMaterialParams();
    }
    if(QString("OAIBTMaterialPropertyParams").compare(type) == 0) {
      return new OAIBTMaterialPropertyParams();
    }
    if(QString("OAIBTMetadataCategorySummaryInfo").compare(type) == 0) {
      return new OAIBTMetadataCategorySummaryInfo();
    }
    if(QString("OAIBTMetadataEnumValueInfo").compare(type) == 0) {
      return new OAIBTMetadataEnumValueInfo();
    }
    if(QString("OAIBTMetadataPropertyConfigSummaryInfo").compare(type) == 0) {
      return new OAIBTMetadataPropertyConfigSummaryInfo();
    }
    if(QString("OAIBTMetadataPropertyInfo").compare(type) == 0) {
      return new OAIBTMetadataPropertyInfo();
    }
    if(QString("OAIBTMetadataPropertySummaryInfo").compare(type) == 0) {
      return new OAIBTMetadataPropertySummaryInfo();
    }
    if(QString("OAIBTMetadataPropertyUiHintsInfo").compare(type) == 0) {
      return new OAIBTMetadataPropertyUiHintsInfo();
    }
    if(QString("OAIBTMetadataPropertyValidatorInfo").compare(type) == 0) {
      return new OAIBTMetadataPropertyValidatorInfo();
    }
    if(QString("OAIBTMetadataSchemaInfo").compare(type) == 0) {
      return new OAIBTMetadataSchemaInfo();
    }
    if(QString("OAIBTMicroversionId-366").compare(type) == 0) {
      return new OAIBTMicroversionId-366();
    }
    if(QString("OAIBTMicroversionIdAndConfiguration-2338").compare(type) == 0) {
      return new OAIBTMicroversionIdAndConfiguration-2338();
    }
    if(QString("OAIBTMicroversionInfo").compare(type) == 0) {
      return new OAIBTMicroversionInfo();
    }
    if(QString("OAIBTModelElementParams").compare(type) == 0) {
      return new OAIBTModelElementParams();
    }
    if(QString("OAIBTModelFormatFullInfo").compare(type) == 0) {
      return new OAIBTModelFormatFullInfo();
    }
    if(QString("OAIBTModelFormatInfo").compare(type) == 0) {
      return new OAIBTModelFormatInfo();
    }
    if(QString("OAIBTModifiableEntityOnlyFilter-1593").compare(type) == 0) {
      return new OAIBTModifiableEntityOnlyFilter-1593();
    }
    if(QString("OAIBTMoveElementInfo").compare(type) == 0) {
      return new OAIBTMoveElementInfo();
    }
    if(QString("OAIBTMoveElementParams").compare(type) == 0) {
      return new OAIBTMoveElementParams();
    }
    if(QString("OAIBTNameValuePair").compare(type) == 0) {
      return new OAIBTNameValuePair();
    }
    if(QString("OAIBTNamedViewInfo").compare(type) == 0) {
      return new OAIBTNamedViewInfo();
    }
    if(QString("OAIBTNamedViewsInfo").compare(type) == 0) {
      return new OAIBTNamedViewsInfo();
    }
    if(QString("OAIBTNodeReference-21").compare(type) == 0) {
      return new OAIBTNodeReference-21();
    }
    if(QString("OAIBTNotFilter-165").compare(type) == 0) {
      return new OAIBTNotFilter-165();
    }
    if(QString("OAIBTNotice-227").compare(type) == 0) {
      return new OAIBTNotice-227();
    }
    if(QString("OAIBTNullableQuantityRange-1340").compare(type) == 0) {
      return new OAIBTNullableQuantityRange-1340();
    }
    if(QString("OAIBTObjectId").compare(type) == 0) {
      return new OAIBTObjectId();
    }
    if(QString("OAIBTOccurrence-74").compare(type) == 0) {
      return new OAIBTOccurrence-74();
    }
    if(QString("OAIBTOccurrenceFilter-166").compare(type) == 0) {
      return new OAIBTOccurrenceFilter-166();
    }
    if(QString("OAIBTOrFilter-167").compare(type) == 0) {
      return new OAIBTOrFilter-167();
    }
    if(QString("OAIBTOwner-3114").compare(type) == 0) {
      return new OAIBTOwner-3114();
    }
    if(QString("OAIBTOwnerInfo").compare(type) == 0) {
      return new OAIBTOwnerInfo();
    }
    if(QString("OAIBTPAnnotation-231").compare(type) == 0) {
      return new OAIBTPAnnotation-231();
    }
    if(QString("OAIBTPArgumentDeclaration-232").compare(type) == 0) {
      return new OAIBTPArgumentDeclaration-232();
    }
    if(QString("OAIBTPBuiltinIdentifier-233").compare(type) == 0) {
      return new OAIBTPBuiltinIdentifier-233();
    }
    if(QString("OAIBTPConversionFunction-1362").compare(type) == 0) {
      return new OAIBTPConversionFunction-1362();
    }
    if(QString("OAIBTPExpression-9").compare(type) == 0) {
      return new OAIBTPExpression-9();
    }
    if(QString("OAIBTPExpressionAccess-237").compare(type) == 0) {
      return new OAIBTPExpressionAccess-237();
    }
    if(QString("OAIBTPExpressionAs-238").compare(type) == 0) {
      return new OAIBTPExpressionAs-238();
    }
    if(QString("OAIBTPExpressionBuiltinCall-239").compare(type) == 0) {
      return new OAIBTPExpressionBuiltinCall-239();
    }
    if(QString("OAIBTPExpressionCall-240").compare(type) == 0) {
      return new OAIBTPExpressionCall-240();
    }
    if(QString("OAIBTPExpressionFunction-1325").compare(type) == 0) {
      return new OAIBTPExpressionFunction-1325();
    }
    if(QString("OAIBTPExpressionGroup-241").compare(type) == 0) {
      return new OAIBTPExpressionGroup-241();
    }
    if(QString("OAIBTPExpressionIs-242").compare(type) == 0) {
      return new OAIBTPExpressionIs-242();
    }
    if(QString("OAIBTPExpressionNew-243").compare(type) == 0) {
      return new OAIBTPExpressionNew-243();
    }
    if(QString("OAIBTPExpressionOperator-244").compare(type) == 0) {
      return new OAIBTPExpressionOperator-244();
    }
    if(QString("OAIBTPExpressionSwitch-2632").compare(type) == 0) {
      return new OAIBTPExpressionSwitch-2632();
    }
    if(QString("OAIBTPExpressionTry-1271").compare(type) == 0) {
      return new OAIBTPExpressionTry-1271();
    }
    if(QString("OAIBTPExpressionVarReference-245").compare(type) == 0) {
      return new OAIBTPExpressionVarReference-245();
    }
    if(QString("OAIBTPFunctionDeclaration-246").compare(type) == 0) {
      return new OAIBTPFunctionDeclaration-246();
    }
    if(QString("OAIBTPFunctionOrPredicateDeclaration-247").compare(type) == 0) {
      return new OAIBTPFunctionOrPredicateDeclaration-247();
    }
    if(QString("OAIBTPIdentifier-8").compare(type) == 0) {
      return new OAIBTPIdentifier-8();
    }
    if(QString("OAIBTPLValue-249").compare(type) == 0) {
      return new OAIBTPLValue-249();
    }
    if(QString("OAIBTPLValueAccess-250").compare(type) == 0) {
      return new OAIBTPLValueAccess-250();
    }
    if(QString("OAIBTPLValueBoxDereference-251").compare(type) == 0) {
      return new OAIBTPLValueBoxDereference-251();
    }
    if(QString("OAIBTPLValueVarReference-252").compare(type) == 0) {
      return new OAIBTPLValueVarReference-252();
    }
    if(QString("OAIBTPLiteral-253").compare(type) == 0) {
      return new OAIBTPLiteral-253();
    }
    if(QString("OAIBTPLiteralArray-254").compare(type) == 0) {
      return new OAIBTPLiteralArray-254();
    }
    if(QString("OAIBTPLiteralBoolean-255").compare(type) == 0) {
      return new OAIBTPLiteralBoolean-255();
    }
    if(QString("OAIBTPLiteralMap-256").compare(type) == 0) {
      return new OAIBTPLiteralMap-256();
    }
    if(QString("OAIBTPLiteralMapEntry-257").compare(type) == 0) {
      return new OAIBTPLiteralMapEntry-257();
    }
    if(QString("OAIBTPLiteralNumber-258").compare(type) == 0) {
      return new OAIBTPLiteralNumber-258();
    }
    if(QString("OAIBTPLiteralString-259").compare(type) == 0) {
      return new OAIBTPLiteralString-259();
    }
    if(QString("OAIBTPLiteralUndefined-260").compare(type) == 0) {
      return new OAIBTPLiteralUndefined-260();
    }
    if(QString("OAIBTPModule-234").compare(type) == 0) {
      return new OAIBTPModule-234();
    }
    if(QString("OAIBTPModuleId-235").compare(type) == 0) {
      return new OAIBTPModuleId-235();
    }
    if(QString("OAIBTPName-261").compare(type) == 0) {
      return new OAIBTPName-261();
    }
    if(QString("OAIBTPNode-7").compare(type) == 0) {
      return new OAIBTPNode-7();
    }
    if(QString("OAIBTPOperatorDeclaration-264").compare(type) == 0) {
      return new OAIBTPOperatorDeclaration-264();
    }
    if(QString("OAIBTPPredicateDeclaration-265").compare(type) == 0) {
      return new OAIBTPPredicateDeclaration-265();
    }
    if(QString("OAIBTPProcedureDeclarationBase-266").compare(type) == 0) {
      return new OAIBTPProcedureDeclarationBase-266();
    }
    if(QString("OAIBTPPropertyAccessor-23").compare(type) == 0) {
      return new OAIBTPPropertyAccessor-23();
    }
    if(QString("OAIBTPSpace-10").compare(type) == 0) {
      return new OAIBTPSpace-10();
    }
    if(QString("OAIBTPStatement-269").compare(type) == 0) {
      return new OAIBTPStatement-269();
    }
    if(QString("OAIBTPStatementAssignment-270").compare(type) == 0) {
      return new OAIBTPStatementAssignment-270();
    }
    if(QString("OAIBTPStatementBlock-271").compare(type) == 0) {
      return new OAIBTPStatementBlock-271();
    }
    if(QString("OAIBTPStatementBreak-272").compare(type) == 0) {
      return new OAIBTPStatementBreak-272();
    }
    if(QString("OAIBTPStatementCompressedQuery-1237").compare(type) == 0) {
      return new OAIBTPStatementCompressedQuery-1237();
    }
    if(QString("OAIBTPStatementConstantDeclaration-273").compare(type) == 0) {
      return new OAIBTPStatementConstantDeclaration-273();
    }
    if(QString("OAIBTPStatementContinue-274").compare(type) == 0) {
      return new OAIBTPStatementContinue-274();
    }
    if(QString("OAIBTPStatementExpression-275").compare(type) == 0) {
      return new OAIBTPStatementExpression-275();
    }
    if(QString("OAIBTPStatementIf-276").compare(type) == 0) {
      return new OAIBTPStatementIf-276();
    }
    if(QString("OAIBTPStatementLoop-277").compare(type) == 0) {
      return new OAIBTPStatementLoop-277();
    }
    if(QString("OAIBTPStatementLoopFor3-278").compare(type) == 0) {
      return new OAIBTPStatementLoopFor3-278();
    }
    if(QString("OAIBTPStatementLoopForIn-279").compare(type) == 0) {
      return new OAIBTPStatementLoopForIn-279();
    }
    if(QString("OAIBTPStatementLoopWhile-280").compare(type) == 0) {
      return new OAIBTPStatementLoopWhile-280();
    }
    if(QString("OAIBTPStatementReturn-281").compare(type) == 0) {
      return new OAIBTPStatementReturn-281();
    }
    if(QString("OAIBTPStatementThrow-1080").compare(type) == 0) {
      return new OAIBTPStatementThrow-1080();
    }
    if(QString("OAIBTPStatementTry-1523").compare(type) == 0) {
      return new OAIBTPStatementTry-1523();
    }
    if(QString("OAIBTPStatementVarDeclaration-282").compare(type) == 0) {
      return new OAIBTPStatementVarDeclaration-282();
    }
    if(QString("OAIBTPTopLevelConstantDeclaration-283").compare(type) == 0) {
      return new OAIBTPTopLevelConstantDeclaration-283();
    }
    if(QString("OAIBTPTopLevelEnumDeclaration-284").compare(type) == 0) {
      return new OAIBTPTopLevelEnumDeclaration-284();
    }
    if(QString("OAIBTPTopLevelImport-285").compare(type) == 0) {
      return new OAIBTPTopLevelImport-285();
    }
    if(QString("OAIBTPTopLevelNode-286").compare(type) == 0) {
      return new OAIBTPTopLevelNode-286();
    }
    if(QString("OAIBTPTopLevelTypeDeclaration-287").compare(type) == 0) {
      return new OAIBTPTopLevelTypeDeclaration-287();
    }
    if(QString("OAIBTPTopLevelUserTypeDeclaration-288").compare(type) == 0) {
      return new OAIBTPTopLevelUserTypeDeclaration-288();
    }
    if(QString("OAIBTPTypeName-290").compare(type) == 0) {
      return new OAIBTPTypeName-290();
    }
    if(QString("OAIBTPTypeNameStandard-291").compare(type) == 0) {
      return new OAIBTPTypeNameStandard-291();
    }
    if(QString("OAIBTPTypeNameUser-292").compare(type) == 0) {
      return new OAIBTPTypeNameUser-292();
    }
    if(QString("OAIBTParameterGroupSpec-3469").compare(type) == 0) {
      return new OAIBTParameterGroupSpec-3469();
    }
    if(QString("OAIBTParameterLookupTableEntry-1667").compare(type) == 0) {
      return new OAIBTParameterLookupTableEntry-1667();
    }
    if(QString("OAIBTParameterLookupTableListEntry-1916").compare(type) == 0) {
      return new OAIBTParameterLookupTableListEntry-1916();
    }
    if(QString("OAIBTParameterSpec-6").compare(type) == 0) {
      return new OAIBTParameterSpec-6();
    }
    if(QString("OAIBTParameterSpecAppearance-1740").compare(type) == 0) {
      return new OAIBTParameterSpecAppearance-1740();
    }
    if(QString("OAIBTParameterSpecArray-2600").compare(type) == 0) {
      return new OAIBTParameterSpecArray-2600();
    }
    if(QString("OAIBTParameterSpecBoolean-170").compare(type) == 0) {
      return new OAIBTParameterSpecBoolean-170();
    }
    if(QString("OAIBTParameterSpecDatabase-1071").compare(type) == 0) {
      return new OAIBTParameterSpecDatabase-1071();
    }
    if(QString("OAIBTParameterSpecDerived-736").compare(type) == 0) {
      return new OAIBTParameterSpecDerived-736();
    }
    if(QString("OAIBTParameterSpecEnum-171").compare(type) == 0) {
      return new OAIBTParameterSpecEnum-171();
    }
    if(QString("OAIBTParameterSpecFeatureList-703").compare(type) == 0) {
      return new OAIBTParameterSpecFeatureList-703();
    }
    if(QString("OAIBTParameterSpecForeignId-172").compare(type) == 0) {
      return new OAIBTParameterSpecForeignId-172();
    }
    if(QString("OAIBTParameterSpecLookupTablePath-761").compare(type) == 0) {
      return new OAIBTParameterSpecLookupTablePath-761();
    }
    if(QString("OAIBTParameterSpecMaterial-2700").compare(type) == 0) {
      return new OAIBTParameterSpecMaterial-2700();
    }
    if(QString("OAIBTParameterSpecNullableQuantity-715").compare(type) == 0) {
      return new OAIBTParameterSpecNullableQuantity-715();
    }
    if(QString("OAIBTParameterSpecQuantity-173").compare(type) == 0) {
      return new OAIBTParameterSpecQuantity-173();
    }
    if(QString("OAIBTParameterSpecQuery-174").compare(type) == 0) {
      return new OAIBTParameterSpecQuery-174();
    }
    if(QString("OAIBTParameterSpecReference-2789").compare(type) == 0) {
      return new OAIBTParameterSpecReference-2789();
    }
    if(QString("OAIBTParameterSpecReferenceAssembly-2821").compare(type) == 0) {
      return new OAIBTParameterSpecReferenceAssembly-2821();
    }
    if(QString("OAIBTParameterSpecReferenceBlob-1367").compare(type) == 0) {
      return new OAIBTParameterSpecReferenceBlob-1367();
    }
    if(QString("OAIBTParameterSpecReferenceCADImport-1792").compare(type) == 0) {
      return new OAIBTParameterSpecReferenceCADImport-1792();
    }
    if(QString("OAIBTParameterSpecReferenceImage-1722").compare(type) == 0) {
      return new OAIBTParameterSpecReferenceImage-1722();
    }
    if(QString("OAIBTParameterSpecReferenceJSON-1816").compare(type) == 0) {
      return new OAIBTParameterSpecReferenceJSON-1816();
    }
    if(QString("OAIBTParameterSpecReferencePartStudio-1256").compare(type) == 0) {
      return new OAIBTParameterSpecReferencePartStudio-1256();
    }
    if(QString("OAIBTParameterSpecReferenceTable-1520").compare(type) == 0) {
      return new OAIBTParameterSpecReferenceTable-1520();
    }
    if(QString("OAIBTParameterSpecReferenceWithConfiguration-2950").compare(type) == 0) {
      return new OAIBTParameterSpecReferenceWithConfiguration-2950();
    }
    if(QString("OAIBTParameterSpecString-175").compare(type) == 0) {
      return new OAIBTParameterSpecString-175();
    }
    if(QString("OAIBTParameterVisibilityAlwaysHidden-176").compare(type) == 0) {
      return new OAIBTParameterVisibilityAlwaysHidden-176();
    }
    if(QString("OAIBTParameterVisibilityCondition-177").compare(type) == 0) {
      return new OAIBTParameterVisibilityCondition-177();
    }
    if(QString("OAIBTParameterVisibilityLogical-178").compare(type) == 0) {
      return new OAIBTParameterVisibilityLogical-178();
    }
    if(QString("OAIBTParameterVisibilityOnEqual-180").compare(type) == 0) {
      return new OAIBTParameterVisibilityOnEqual-180();
    }
    if(QString("OAIBTParameterVisibilityOnMateDOFType-2114").compare(type) == 0) {
      return new OAIBTParameterVisibilityOnMateDOFType-2114();
    }
    if(QString("OAIBTPartAppearanceInfo").compare(type) == 0) {
      return new OAIBTPartAppearanceInfo();
    }
    if(QString("OAIBTPartAppearanceParams").compare(type) == 0) {
      return new OAIBTPartAppearanceParams();
    }
    if(QString("OAIBTPartMaterial-1445").compare(type) == 0) {
      return new OAIBTPartMaterial-1445();
    }
    if(QString("OAIBTPartMaterialInfo").compare(type) == 0) {
      return new OAIBTPartMaterialInfo();
    }
    if(QString("OAIBTPartMaterialProperty-1453").compare(type) == 0) {
      return new OAIBTPartMaterialProperty-1453();
    }
    if(QString("OAIBTPartMaterialPropertyInfo").compare(type) == 0) {
      return new OAIBTPartMaterialPropertyInfo();
    }
    if(QString("OAIBTPartMetadataInfo").compare(type) == 0) {
      return new OAIBTPartMetadataInfo();
    }
    if(QString("OAIBTPermissionSet").compare(type) == 0) {
      return new OAIBTPermissionSet();
    }
    if(QString("OAIBTPlanSubscriberInfo").compare(type) == 0) {
      return new OAIBTPlanSubscriberInfo();
    }
    if(QString("OAIBTPlaneDescription-692").compare(type) == 0) {
      return new OAIBTPlaneDescription-692();
    }
    if(QString("OAIBTPlaneOrientationFilter-1700").compare(type) == 0) {
      return new OAIBTPlaneOrientationFilter-1700();
    }
    if(QString("OAIBTProjectInfo").compare(type) == 0) {
      return new OAIBTProjectInfo();
    }
    if(QString("OAIBTPropertyValueParam").compare(type) == 0) {
      return new OAIBTPropertyValueParam();
    }
    if(QString("OAIBTPublishedWorkflowId").compare(type) == 0) {
      return new OAIBTPublishedWorkflowId();
    }
    if(QString("OAIBTPublishedWorkflowInfo").compare(type) == 0) {
      return new OAIBTPublishedWorkflowInfo();
    }
    if(QString("OAIBTPurchaseInfo").compare(type) == 0) {
      return new OAIBTPurchaseInfo();
    }
    if(QString("OAIBTPurchaseUserParams").compare(type) == 0) {
      return new OAIBTPurchaseUserParams();
    }
    if(QString("OAIBTQuantityRange-181").compare(type) == 0) {
      return new OAIBTQuantityRange-181();
    }
    if(QString("OAIBTQueryFilter-183").compare(type) == 0) {
      return new OAIBTQueryFilter-183();
    }
    if(QString("OAIBTRbacPermissionSchemeInfo").compare(type) == 0) {
      return new OAIBTRbacPermissionSchemeInfo();
    }
    if(QString("OAIBTRbacRoleInfo").compare(type) == 0) {
      return new OAIBTRbacRoleInfo();
    }
    if(QString("OAIBTReleaseCommentListInfo").compare(type) == 0) {
      return new OAIBTReleaseCommentListInfo();
    }
    if(QString("OAIBTReleasePackageInfo").compare(type) == 0) {
      return new OAIBTReleasePackageInfo();
    }
    if(QString("OAIBTReleasePackageItemError").compare(type) == 0) {
      return new OAIBTReleasePackageItemError();
    }
    if(QString("OAIBTReleasePackageItemInfo").compare(type) == 0) {
      return new OAIBTReleasePackageItemInfo();
    }
    if(QString("OAIBTReleasePackageItemParams").compare(type) == 0) {
      return new OAIBTReleasePackageItemParams();
    }
    if(QString("OAIBTReleasePackageItemParams_notEditableInVersionProperties").compare(type) == 0) {
      return new OAIBTReleasePackageItemParams_notEditableInVersionProperties();
    }
    if(QString("OAIBTReleasePackageParams").compare(type) == 0) {
      return new OAIBTReleasePackageParams();
    }
    if(QString("OAIBTRevisionApproverInfo").compare(type) == 0) {
      return new OAIBTRevisionApproverInfo();
    }
    if(QString("OAIBTRevisionInfo").compare(type) == 0) {
      return new OAIBTRevisionInfo();
    }
    if(QString("OAIBTRootAssemblyInfo").compare(type) == 0) {
      return new OAIBTRootAssemblyInfo();
    }
    if(QString("OAIBTRootDiffInfo").compare(type) == 0) {
      return new OAIBTRootDiffInfo();
    }
    if(QString("OAIBTSMBendTableRowMetadata-1705").compare(type) == 0) {
      return new OAIBTSMBendTableRowMetadata-1705();
    }
    if(QString("OAIBTSMDefinitionEntityTypeFilter-1651").compare(type) == 0) {
      return new OAIBTSMDefinitionEntityTypeFilter-1651();
    }
    if(QString("OAIBTSMOtherJointTableRowMetadata-2640").compare(type) == 0) {
      return new OAIBTSMOtherJointTableRowMetadata-2640();
    }
    if(QString("OAIBTSectionPlaneInfo").compare(type) == 0) {
      return new OAIBTSectionPlaneInfo();
    }
    if(QString("OAIBTSetFeatureRollbackCall-1899").compare(type) == 0) {
      return new OAIBTSetFeatureRollbackCall-1899();
    }
    if(QString("OAIBTSetFeatureRollbackResponse-1042").compare(type) == 0) {
      return new OAIBTSetFeatureRollbackResponse-1042();
    }
    if(QString("OAIBTSettingInfo").compare(type) == 0) {
      return new OAIBTSettingInfo();
    }
    if(QString("OAIBTSettingParam").compare(type) == 0) {
      return new OAIBTSettingParam();
    }
    if(QString("OAIBTShadedViewsInfo").compare(type) == 0) {
      return new OAIBTShadedViewsInfo();
    }
    if(QString("OAIBTShareEntryParams").compare(type) == 0) {
      return new OAIBTShareEntryParams();
    }
    if(QString("OAIBTShareParams").compare(type) == 0) {
      return new OAIBTShareParams();
    }
    if(QString("OAIBTSketchObjectFilter-184").compare(type) == 0) {
      return new OAIBTSketchObjectFilter-184();
    }
    if(QString("OAIBTSphereDescription-1263").compare(type) == 0) {
      return new OAIBTSphereDescription-1263();
    }
    if(QString("OAIBTSplineDescription-2118").compare(type) == 0) {
      return new OAIBTSplineDescription-2118();
    }
    if(QString("OAIBTSpunDescription-657").compare(type) == 0) {
      return new OAIBTSpunDescription-657();
    }
    if(QString("OAIBTStringFormatBlockPattern-1755").compare(type) == 0) {
      return new OAIBTStringFormatBlockPattern-1755();
    }
    if(QString("OAIBTStringFormatCondition-683").compare(type) == 0) {
      return new OAIBTStringFormatCondition-683();
    }
    if(QString("OAIBTStringFormatMatchPattern-2446").compare(type) == 0) {
      return new OAIBTStringFormatMatchPattern-2446();
    }
    if(QString("OAIBTStringMaximumLengthPattern-2593").compare(type) == 0) {
      return new OAIBTStringMaximumLengthPattern-2593();
    }
    if(QString("OAIBTStringMinimumLengthPattern-895").compare(type) == 0) {
      return new OAIBTStringMinimumLengthPattern-895();
    }
    if(QString("OAIBTSubAssemblyInfo").compare(type) == 0) {
      return new OAIBTSubAssemblyInfo();
    }
    if(QString("OAIBTSubstituteApproverInfo").compare(type) == 0) {
      return new OAIBTSubstituteApproverInfo();
    }
    if(QString("OAIBTSurfaceDescription-1564").compare(type) == 0) {
      return new OAIBTSurfaceDescription-1564();
    }
    if(QString("OAIBTSweepDescription-1473").compare(type) == 0) {
      return new OAIBTSweepDescription-1473();
    }
    if(QString("OAIBTTable-1825").compare(type) == 0) {
      return new OAIBTTable-1825();
    }
    if(QString("OAIBTTableAssemblyCrossHighlightData-2675").compare(type) == 0) {
      return new OAIBTTableAssemblyCrossHighlightData-2675();
    }
    if(QString("OAIBTTableAssemblyCrossHighlightDataItem-2659").compare(type) == 0) {
      return new OAIBTTableAssemblyCrossHighlightDataItem-2659();
    }
    if(QString("OAIBTTableBaseCrossHighlightData-2609").compare(type) == 0) {
      return new OAIBTTableBaseCrossHighlightData-2609();
    }
    if(QString("OAIBTTableBaseRowMetadata-3181").compare(type) == 0) {
      return new OAIBTTableBaseRowMetadata-3181();
    }
    if(QString("OAIBTTableCell-1114").compare(type) == 0) {
      return new OAIBTTableCell-1114();
    }
    if(QString("OAIBTTableCellParameter-2399").compare(type) == 0) {
      return new OAIBTTableCellParameter-2399();
    }
    if(QString("OAIBTTableCellPropertyParameter-2983").compare(type) == 0) {
      return new OAIBTTableCellPropertyParameter-2983();
    }
    if(QString("OAIBTTableColumnInfo-1222").compare(type) == 0) {
      return new OAIBTTableColumnInfo-1222();
    }
    if(QString("OAIBTTableColumnSpec-1967").compare(type) == 0) {
      return new OAIBTTableColumnSpec-1967();
    }
    if(QString("OAIBTTableCrossHighlightData-1753").compare(type) == 0) {
      return new OAIBTTableCrossHighlightData-1753();
    }
    if(QString("OAIBTTableResponse-1546").compare(type) == 0) {
      return new OAIBTTableResponse-1546();
    }
    if(QString("OAIBTTableRow-1054").compare(type) == 0) {
      return new OAIBTTableRow-1054();
    }
    if(QString("OAIBTTableSpec-915").compare(type) == 0) {
      return new OAIBTTableSpec-915();
    }
    if(QString("OAIBTTableTestCellDouble-2509").compare(type) == 0) {
      return new OAIBTTableTestCellDouble-2509();
    }
    if(QString("OAIBTTableTestCellString-2112").compare(type) == 0) {
      return new OAIBTTableTestCellString-2112();
    }
    if(QString("OAIBTTeamInfo").compare(type) == 0) {
      return new OAIBTTeamInfo();
    }
    if(QString("OAIBTTeamSummaryInfo").compare(type) == 0) {
      return new OAIBTTeamSummaryInfo();
    }
    if(QString("OAIBTTextObjectFilter-1515").compare(type) == 0) {
      return new OAIBTTextObjectFilter-1515();
    }
    if(QString("OAIBTTextStrokeFilter-461").compare(type) == 0) {
      return new OAIBTTextStrokeFilter-461();
    }
    if(QString("OAIBTThumbnailInfo").compare(type) == 0) {
      return new OAIBTThumbnailInfo();
    }
    if(QString("OAIBTThumbnailSizeInfo").compare(type) == 0) {
      return new OAIBTThumbnailSizeInfo();
    }
    if(QString("OAIBTTorusDescription-1834").compare(type) == 0) {
      return new OAIBTTorusDescription-1834();
    }
    if(QString("OAIBTTranslateFormatParams").compare(type) == 0) {
      return new OAIBTTranslateFormatParams();
    }
    if(QString("OAIBTTranslationRequestInfo").compare(type) == 0) {
      return new OAIBTTranslationRequestInfo();
    }
    if(QString("OAIBTTreeNode-20").compare(type) == 0) {
      return new OAIBTTreeNode-20();
    }
    if(QString("OAIBTUniqueDocumentItemParams").compare(type) == 0) {
      return new OAIBTUniqueDocumentItemParams();
    }
    if(QString("OAIBTUnitsDisplayPrecision").compare(type) == 0) {
      return new OAIBTUnitsDisplayPrecision();
    }
    if(QString("OAIBTUnitsMaximumDisplayPrecisionInfo").compare(type) == 0) {
      return new OAIBTUnitsMaximumDisplayPrecisionInfo();
    }
    if(QString("OAIBTUpdateFeaturesCall-1748").compare(type) == 0) {
      return new OAIBTUpdateFeaturesCall-1748();
    }
    if(QString("OAIBTUpdateFeaturesResponse-1333").compare(type) == 0) {
      return new OAIBTUpdateFeaturesResponse-1333();
    }
    if(QString("OAIBTUpdateMeshUnitsParams").compare(type) == 0) {
      return new OAIBTUpdateMeshUnitsParams();
    }
    if(QString("OAIBTUpdateReferenceParams").compare(type) == 0) {
      return new OAIBTUpdateReferenceParams();
    }
    if(QString("OAIBTUpdateReleasePackageParams").compare(type) == 0) {
      return new OAIBTUpdateReleasePackageParams();
    }
    if(QString("OAIBTUpdateWorkflowableTestObjectParams").compare(type) == 0) {
      return new OAIBTUpdateWorkflowableTestObjectParams();
    }
    if(QString("OAIBTUserAppSettingsInfo").compare(type) == 0) {
      return new OAIBTUserAppSettingsInfo();
    }
    if(QString("OAIBTUserAppSettingsParams").compare(type) == 0) {
      return new OAIBTUserAppSettingsParams();
    }
    if(QString("OAIBTUserBasicSummaryInfo").compare(type) == 0) {
      return new OAIBTUserBasicSummaryInfo();
    }
    if(QString("OAIBTUserOAuth2SummaryInfo").compare(type) == 0) {
      return new OAIBTUserOAuth2SummaryInfo();
    }
    if(QString("OAIBTUserSettingsInfo").compare(type) == 0) {
      return new OAIBTUserSettingsInfo();
    }
    if(QString("OAIBTUserSummaryInfo").compare(type) == 0) {
      return new OAIBTUserSummaryInfo();
    }
    if(QString("OAIBTVector2d-1812").compare(type) == 0) {
      return new OAIBTVector2d-1812();
    }
    if(QString("OAIBTVector3d-389").compare(type) == 0) {
      return new OAIBTVector3d-389();
    }
    if(QString("OAIBTVersionInfo").compare(type) == 0) {
      return new OAIBTVersionInfo();
    }
    if(QString("OAIBTVersionInfoBase").compare(type) == 0) {
      return new OAIBTVersionInfoBase();
    }
    if(QString("OAIBTVersionOrWorkspaceInfo").compare(type) == 0) {
      return new OAIBTVersionOrWorkspaceInfo();
    }
    if(QString("OAIBTVersionOrWorkspaceParams").compare(type) == 0) {
      return new OAIBTVersionOrWorkspaceParams();
    }
    if(QString("OAIBTViewDataInfo").compare(type) == 0) {
      return new OAIBTViewDataInfo();
    }
    if(QString("OAIBTViewManipulationMouseKeyMappingInfo").compare(type) == 0) {
      return new OAIBTViewManipulationMouseKeyMappingInfo();
    }
    if(QString("OAIBTWebhookInfo").compare(type) == 0) {
      return new OAIBTWebhookInfo();
    }
    if(QString("OAIBTWebhookOptions").compare(type) == 0) {
      return new OAIBTWebhookOptions();
    }
    if(QString("OAIBTWebhookParams").compare(type) == 0) {
      return new OAIBTWebhookParams();
    }
    if(QString("OAIBTWorkflowActionInfo").compare(type) == 0) {
      return new OAIBTWorkflowActionInfo();
    }
    if(QString("OAIBTWorkflowPropertyInfo").compare(type) == 0) {
      return new OAIBTWorkflowPropertyInfo();
    }
    if(QString("OAIBTWorkflowSnapshotInfo").compare(type) == 0) {
      return new OAIBTWorkflowSnapshotInfo();
    }
    if(QString("OAIBTWorkflowStateInfo").compare(type) == 0) {
      return new OAIBTWorkflowStateInfo();
    }
    if(QString("OAIBTWorkflowableTestObjectInfo").compare(type) == 0) {
      return new OAIBTWorkflowableTestObjectInfo();
    }
    if(QString("OAIBTWorkspaceInfo").compare(type) == 0) {
      return new OAIBTWorkspaceInfo();
    }
    if(QString("OAIBTWorkspacePartParams").compare(type) == 0) {
      return new OAIBTWorkspacePartParams();
    }
    if(QString("OAICard").compare(type) == 0) {
      return new OAICard();
    }
    if(QString("OAIComponents").compare(type) == 0) {
      return new OAIComponents();
    }
    if(QString("OAIConfigurationEntry").compare(type) == 0) {
      return new OAIConfigurationEntry();
    }
    if(QString("OAIConfigurationInfoEntry").compare(type) == 0) {
      return new OAIConfigurationInfoEntry();
    }
    if(QString("OAIContact").compare(type) == 0) {
      return new OAIContact();
    }
    if(QString("OAICoupon").compare(type) == 0) {
      return new OAICoupon();
    }
    if(QString("OAICustomer").compare(type) == 0) {
      return new OAICustomer();
    }
    if(QString("OAICustomerCardCollection").compare(type) == 0) {
      return new OAICustomerCardCollection();
    }
    if(QString("OAICustomerSubscriptionCollection").compare(type) == 0) {
      return new OAICustomerSubscriptionCollection();
    }
    if(QString("OAIDiscount").compare(type) == 0) {
      return new OAIDiscount();
    }
    if(QString("OAIDiscriminator").compare(type) == 0) {
      return new OAIDiscriminator();
    }
    if(QString("OAIEncoding").compare(type) == 0) {
      return new OAIEncoding();
    }
    if(QString("OAIEntry").compare(type) == 0) {
      return new OAIEntry();
    }
    if(QString("OAIExample").compare(type) == 0) {
      return new OAIExample();
    }
    if(QString("OAIExternalAccount").compare(type) == 0) {
      return new OAIExternalAccount();
    }
    if(QString("OAIExternalAccountCollection").compare(type) == 0) {
      return new OAIExternalAccountCollection();
    }
    if(QString("OAIExternalDocumentation").compare(type) == 0) {
      return new OAIExternalDocumentation();
    }
    if(QString("OAIGlobalPermissionInfo").compare(type) == 0) {
      return new OAIGlobalPermissionInfo();
    }
    if(QString("OAIHeader").compare(type) == 0) {
      return new OAIHeader();
    }
    if(QString("OAIInfo").compare(type) == 0) {
      return new OAIInfo();
    }
    if(QString("OAIJsonNode").compare(type) == 0) {
      return new OAIJsonNode();
    }
    if(QString("OAILicense").compare(type) == 0) {
      return new OAILicense();
    }
    if(QString("OAILink").compare(type) == 0) {
      return new OAILink();
    }
    if(QString("OAIMediaType").compare(type) == 0) {
      return new OAIMediaType();
    }
    if(QString("OAINextCharge").compare(type) == 0) {
      return new OAINextCharge();
    }
    if(QString("OAINextRecurringCharge").compare(type) == 0) {
      return new OAINextRecurringCharge();
    }
    if(QString("OAIOAuthFlow").compare(type) == 0) {
      return new OAIOAuthFlow();
    }
    if(QString("OAIOAuthFlow_scopes").compare(type) == 0) {
      return new OAIOAuthFlow_scopes();
    }
    if(QString("OAIOAuthFlows").compare(type) == 0) {
      return new OAIOAuthFlows();
    }
    if(QString("OAIOpenAPI").compare(type) == 0) {
      return new OAIOpenAPI();
    }
    if(QString("OAIOperation").compare(type) == 0) {
      return new OAIOperation();
    }
    if(QString("OAIOperation_responses").compare(type) == 0) {
      return new OAIOperation_responses();
    }
    if(QString("OAIParameter").compare(type) == 0) {
      return new OAIParameter();
    }
    if(QString("OAIParameterizedHeader").compare(type) == 0) {
      return new OAIParameterizedHeader();
    }
    if(QString("OAIPathItem").compare(type) == 0) {
      return new OAIPathItem();
    }
    if(QString("OAIPlan").compare(type) == 0) {
      return new OAIPlan();
    }
    if(QString("OAIProratedCharges").compare(type) == 0) {
      return new OAIProratedCharges();
    }
    if(QString("OAIRequestBody").compare(type) == 0) {
      return new OAIRequestBody();
    }
    if(QString("OAIRequestOptions").compare(type) == 0) {
      return new OAIRequestOptions();
    }
    if(QString("OAIRoleMapEntry").compare(type) == 0) {
      return new OAIRoleMapEntry();
    }
    if(QString("OAISchema").compare(type) == 0) {
      return new OAISchema();
    }
    if(QString("OAISecurityScheme").compare(type) == 0) {
      return new OAISecurityScheme();
    }
    if(QString("OAIServer").compare(type) == 0) {
      return new OAIServer();
    }
    if(QString("OAIServerVariable").compare(type) == 0) {
      return new OAIServerVariable();
    }
    if(QString("OAIShippingDetails").compare(type) == 0) {
      return new OAIShippingDetails();
    }
    if(QString("OAISubscription").compare(type) == 0) {
      return new OAISubscription();
    }
    if(QString("OAISubscriptionItem").compare(type) == 0) {
      return new OAISubscriptionItem();
    }
    if(QString("OAISubscriptionItemCollection").compare(type) == 0) {
      return new OAISubscriptionItemCollection();
    }
    if(QString("OAITag").compare(type) == 0) {
      return new OAITag();
    }
    if(QString("OAIThreeDSecure").compare(type) == 0) {
      return new OAIThreeDSecure();
    }
    if(QString("OAITransformGroup").compare(type) == 0) {
      return new OAITransformGroup();
    }
    if(QString("OAIUpdateParams").compare(type) == 0) {
      return new OAIUpdateParams();
    }
    if(QString("OAIXML").compare(type) == 0) {
      return new OAIXML();
    }
    
    return nullptr;
  }

  inline void* create(QString json, QString type) {
    if(type.startsWith("QString")) {
      return new QString();
    }    
    auto val = static_cast<OAIObject*>(create(type));
    if(val != nullptr) {
      return val->fromJson(json);
    }
    return nullptr;
  }

}

#endif /* ModelFactory_H_ */
