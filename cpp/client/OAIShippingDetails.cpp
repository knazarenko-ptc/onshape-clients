/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIShippingDetails.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIShippingDetails::OAIShippingDetails(QString json) {
    init();
    this->fromJson(json);
}

OAIShippingDetails::OAIShippingDetails() {
    init();
}

OAIShippingDetails::~OAIShippingDetails() {
    this->cleanup();
}

void
OAIShippingDetails::init() {
    address = new OAIAddress();
    m_address_isSet = false;
    name = new QString("");
    m_name_isSet = false;
    phone = new QString("");
    m_phone_isSet = false;
}

void
OAIShippingDetails::cleanup() {
    if(address != nullptr) { 
        delete address;
    }
    if(name != nullptr) { 
        delete name;
    }
    if(phone != nullptr) { 
        delete phone;
    }
}

OAIShippingDetails*
OAIShippingDetails::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIShippingDetails::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&address, pJson["address"], "OAIAddress", "OAIAddress");
    
    ::OpenAPI::setValue(&name, pJson["name"], "QString", "QString");
    
    ::OpenAPI::setValue(&phone, pJson["phone"], "QString", "QString");
    
}

QString
OAIShippingDetails::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIShippingDetails::asJsonObject() {
    QJsonObject obj;
    if((address != nullptr) && (address->isSet())){
        toJsonValue(QString("address"), address, obj, QString("OAIAddress"));
    }
    if(name != nullptr && *name != QString("")){
        toJsonValue(QString("name"), name, obj, QString("QString"));
    }
    if(phone != nullptr && *phone != QString("")){
        toJsonValue(QString("phone"), phone, obj, QString("QString"));
    }

    return obj;
}

OAIAddress*
OAIShippingDetails::getAddress() {
    return address;
}
void
OAIShippingDetails::setAddress(OAIAddress* address) {
    this->address = address;
    this->m_address_isSet = true;
}

QString*
OAIShippingDetails::getName() {
    return name;
}
void
OAIShippingDetails::setName(QString* name) {
    this->name = name;
    this->m_name_isSet = true;
}

QString*
OAIShippingDetails::getPhone() {
    return phone;
}
void
OAIShippingDetails::setPhone(QString* phone) {
    this->phone = phone;
    this->m_phone_isSet = true;
}


bool
OAIShippingDetails::isSet(){
    bool isObjectUpdated = false;
    do{
        if(address != nullptr && address->isSet()){ isObjectUpdated = true; break;}
        if(name != nullptr && *name != QString("")){ isObjectUpdated = true; break;}
        if(phone != nullptr && *phone != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

