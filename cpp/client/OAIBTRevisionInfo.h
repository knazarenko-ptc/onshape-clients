/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTRevisionInfo.h
 *
 * 
 */

#ifndef OAIBTRevisionInfo_H_
#define OAIBTRevisionInfo_H_

#include <QJsonObject>


#include "OAIBTRevisionApproverInfo.h"
#include "OAIBTUserSummaryInfo.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTRevisionInfo: public OAIObject {
public:
    OAIBTRevisionInfo();
    OAIBTRevisionInfo(QString json);
    ~OAIBTRevisionInfo();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTRevisionInfo* fromJson(QString jsonString) override;

    QList<OAIBTRevisionApproverInfo*>* getApprovers();
    void setApprovers(QList<OAIBTRevisionApproverInfo*>* approvers);

    QString* getAutoObsoletionReleaseId();
    void setAutoObsoletionReleaseId(QString* auto_obsoletion_release_id);

    QString* getAutoObsoletionReleaseName();
    void setAutoObsoletionReleaseName(QString* auto_obsoletion_release_name);

    bool isCanCurrentUserObsolete();
    void setCanCurrentUserObsolete(bool can_current_user_obsolete);

    bool isCanExport();
    void setCanExport(bool can_export);

    QString* getCompanyId();
    void setCompanyId(QString* company_id);

    QString* getConfiguration();
    void setConfiguration(QString* configuration);

    QString* getDocumentId();
    void setDocumentId(QString* document_id);

    QString* getDocumentName();
    void setDocumentName(QString* document_name);

    QString* getElementId();
    void setElementId(QString* element_id);

    qint32 getElementType();
    void setElementType(qint32 element_type);

    QString* getErrorMessage();
    void setErrorMessage(QString* error_message);

    QString* getFileName();
    void setFileName(QString* file_name);

    QString* getFlatPartInsertableId();
    void setFlatPartInsertableId(QString* flat_part_insertable_id);

    QString* getHref();
    void setHref(QString* href);

    QString* getId();
    void setId(QString* id);

    QString* getInsertableId();
    void setInsertableId(QString* insertable_id);

    bool isIsObsolete();
    void setIsObsolete(bool is_obsolete);

    bool isIsTranslatable();
    void setIsTranslatable(bool is_translatable);

    QString* getMimeType();
    void setMimeType(QString* mime_type);

    QString* getName();
    void setName(QString* name);

    QString* getNextRevisionId();
    void setNextRevisionId(QString* next_revision_id);

    QString* getObsoletionPackageId();
    void setObsoletionPackageId(QString* obsoletion_package_id);

    QString* getPartId();
    void setPartId(QString* part_id);

    QString* getPartNumber();
    void setPartNumber(QString* part_number);

    QString* getPreviousRevisionId();
    void setPreviousRevisionId(QString* previous_revision_id);

    QDateTime* getReleaseCreatedDate();
    void setReleaseCreatedDate(QDateTime* release_created_date);

    QString* getReleaseId();
    void setReleaseId(QString* release_id);

    QString* getReleaseName();
    void setReleaseName(QString* release_name);

    OAIBTUserSummaryInfo* getReleasedBy();
    void setReleasedBy(OAIBTUserSummaryInfo* released_by);

    QString* getRevision();
    void setRevision(QString* revision);

    QString* getRevisionRuleId();
    void setRevisionRuleId(QString* revision_rule_id);

    QString* getVersionId();
    void setVersionId(QString* version_id);

    QString* getVersionName();
    void setVersionName(QString* version_name);

    QString* getViewRef();
    void setViewRef(QString* view_ref);


    virtual bool isSet() override;

private:
    QList<OAIBTRevisionApproverInfo*>* approvers;
    bool m_approvers_isSet;

    QString* auto_obsoletion_release_id;
    bool m_auto_obsoletion_release_id_isSet;

    QString* auto_obsoletion_release_name;
    bool m_auto_obsoletion_release_name_isSet;

    bool can_current_user_obsolete;
    bool m_can_current_user_obsolete_isSet;

    bool can_export;
    bool m_can_export_isSet;

    QString* company_id;
    bool m_company_id_isSet;

    QString* configuration;
    bool m_configuration_isSet;

    QString* document_id;
    bool m_document_id_isSet;

    QString* document_name;
    bool m_document_name_isSet;

    QString* element_id;
    bool m_element_id_isSet;

    qint32 element_type;
    bool m_element_type_isSet;

    QString* error_message;
    bool m_error_message_isSet;

    QString* file_name;
    bool m_file_name_isSet;

    QString* flat_part_insertable_id;
    bool m_flat_part_insertable_id_isSet;

    QString* href;
    bool m_href_isSet;

    QString* id;
    bool m_id_isSet;

    QString* insertable_id;
    bool m_insertable_id_isSet;

    bool is_obsolete;
    bool m_is_obsolete_isSet;

    bool is_translatable;
    bool m_is_translatable_isSet;

    QString* mime_type;
    bool m_mime_type_isSet;

    QString* name;
    bool m_name_isSet;

    QString* next_revision_id;
    bool m_next_revision_id_isSet;

    QString* obsoletion_package_id;
    bool m_obsoletion_package_id_isSet;

    QString* part_id;
    bool m_part_id_isSet;

    QString* part_number;
    bool m_part_number_isSet;

    QString* previous_revision_id;
    bool m_previous_revision_id_isSet;

    QDateTime* release_created_date;
    bool m_release_created_date_isSet;

    QString* release_id;
    bool m_release_id_isSet;

    QString* release_name;
    bool m_release_name_isSet;

    OAIBTUserSummaryInfo* released_by;
    bool m_released_by_isSet;

    QString* revision;
    bool m_revision_isSet;

    QString* revision_rule_id;
    bool m_revision_rule_id_isSet;

    QString* version_id;
    bool m_version_id_isSet;

    QString* version_name;
    bool m_version_name_isSet;

    QString* view_ref;
    bool m_view_ref_isSet;

};

}

#endif /* OAIBTRevisionInfo_H_ */
