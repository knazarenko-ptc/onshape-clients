/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTKeyMouseValuesInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTKeyMouseValuesInfo::OAIBTKeyMouseValuesInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTKeyMouseValuesInfo::OAIBTKeyMouseValuesInfo() {
    init();
}

OAIBTKeyMouseValuesInfo::~OAIBTKeyMouseValuesInfo() {
    this->cleanup();
}

void
OAIBTKeyMouseValuesInfo::init() {
    keys = new QList<QString*>();
    m_keys_isSet = false;
    mouse_buttons = new QList<QString*>();
    m_mouse_buttons_isSet = false;
}

void
OAIBTKeyMouseValuesInfo::cleanup() {
    if(keys != nullptr) { 
        auto arr = keys;
        for(auto o: *arr) { 
            delete o;
        }
        delete keys;
    }
    if(mouse_buttons != nullptr) { 
        auto arr = mouse_buttons;
        for(auto o: *arr) { 
            delete o;
        }
        delete mouse_buttons;
    }
}

OAIBTKeyMouseValuesInfo*
OAIBTKeyMouseValuesInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTKeyMouseValuesInfo::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&keys, pJson["keys"], "QList", "QString");
    
    ::OpenAPI::setValue(&mouse_buttons, pJson["mouseButtons"], "QList", "QString");
}

QString
OAIBTKeyMouseValuesInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTKeyMouseValuesInfo::asJsonObject() {
    QJsonObject obj;
    if(keys->size() > 0){
        toJsonArray((QList<void*>*)keys, obj, "keys", "QString");
    }
    if(mouse_buttons->size() > 0){
        toJsonArray((QList<void*>*)mouse_buttons, obj, "mouseButtons", "QString");
    }

    return obj;
}

QList<QString*>*
OAIBTKeyMouseValuesInfo::getKeys() {
    return keys;
}
void
OAIBTKeyMouseValuesInfo::setKeys(QList<QString*>* keys) {
    this->keys = keys;
    this->m_keys_isSet = true;
}

QList<QString*>*
OAIBTKeyMouseValuesInfo::getMouseButtons() {
    return mouse_buttons;
}
void
OAIBTKeyMouseValuesInfo::setMouseButtons(QList<QString*>* mouse_buttons) {
    this->mouse_buttons = mouse_buttons;
    this->m_mouse_buttons_isSet = true;
}


bool
OAIBTKeyMouseValuesInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(keys->size() > 0){ isObjectUpdated = true; break;}
        if(mouse_buttons->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

