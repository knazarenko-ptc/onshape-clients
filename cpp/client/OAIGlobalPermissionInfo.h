/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGlobalPermissionInfo.h
 *
 * 
 */

#ifndef OAIGlobalPermissionInfo_H_
#define OAIGlobalPermissionInfo_H_

#include <QJsonObject>



#include "OAIObject.h"

namespace OpenAPI {

class OAIGlobalPermissionInfo: public OAIObject {
public:
    OAIGlobalPermissionInfo();
    OAIGlobalPermissionInfo(QString json);
    ~OAIGlobalPermissionInfo();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIGlobalPermissionInfo* fromJson(QString jsonString) override;

    bool isAccessReports();
    void setAccessReports(bool access_reports);

    bool isAdminEnterprise();
    void setAdminEnterprise(bool admin_enterprise);

    bool isAllowAppStoreAccess();
    void setAllowAppStoreAccess(bool allow_app_store_access);

    bool isApproveReleases();
    void setApproveReleases(bool approve_releases);

    bool isCreateProject();
    void setCreateProject(bool create_project);

    bool isCreateReleases();
    void setCreateReleases(bool create_releases);

    bool isDeletePermanently();
    void setDeletePermanently(bool delete_permanently);

    bool isManageGuestUsers();
    void setManageGuestUsers(bool manage_guest_users);

    bool isManageRbac();
    void setManageRbac(bool manage_rbac);

    bool isManageUsers();
    void setManageUsers(bool manage_users);

    bool isShareForAnonymousAccess();
    void setShareForAnonymousAccess(bool share_for_anonymous_access);


    virtual bool isSet() override;

private:
    bool access_reports;
    bool m_access_reports_isSet;

    bool admin_enterprise;
    bool m_admin_enterprise_isSet;

    bool allow_app_store_access;
    bool m_allow_app_store_access_isSet;

    bool approve_releases;
    bool m_approve_releases_isSet;

    bool create_project;
    bool m_create_project_isSet;

    bool create_releases;
    bool m_create_releases_isSet;

    bool delete_permanently;
    bool m_delete_permanently_isSet;

    bool manage_guest_users;
    bool m_manage_guest_users_isSet;

    bool manage_rbac;
    bool m_manage_rbac_isSet;

    bool manage_users;
    bool m_manage_users_isSet;

    bool share_for_anonymous_access;
    bool m_share_for_anonymous_access_isSet;

};

}

#endif /* OAIGlobalPermissionInfo_H_ */
