/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTMSketchTextEntity-1761.h
 *
 * 
 */

#ifndef OAIBTMSketchTextEntity-1761_H_
#define OAIBTMSketchTextEntity-1761_H_

#include <QJsonObject>


#include "OAIBTMParameter-1.h"
#include "OAIBTMSketchGeomEntity-5.h"
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTMSketchTextEntity-1761: public OAIObject {
public:
    OAIBTMSketchTextEntity-1761();
    OAIBTMSketchTextEntity-1761(QString json);
    ~OAIBTMSketchTextEntity-1761();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTMSketchTextEntity-1761* fromJson(QString jsonString) override;

    QString* getBtType();
    void setBtType(QString* bt_type);

    QList<QString*>* getControlBoxIds();
    void setControlBoxIds(QList<QString*>* control_box_ids);

    QString* getEntityId();
    void setEntityId(QString* entity_id);

    QString* getEntityIdAndReplaceInDependentFields();
    void setEntityIdAndReplaceInDependentFields(QString* entity_id_and_replace_in_dependent_fields);

    QString* getImportMicroversion();
    void setImportMicroversion(QString* import_microversion);

    bool isIsConstruction();
    void setIsConstruction(bool is_construction);

    QString* getNamespace();
    void setNamespace(QString* _namespace);

    QString* getNodeId();
    void setNodeId(QString* node_id);

    QList<OAIBTMParameter-1*>* getParameters();
    void setParameters(QList<OAIBTMParameter-1*>* parameters);

    QString* getFontName();
    void setFontName(QString* font_name);

    QString* getText();
    void setText(QString* text);

    double getAscent();
    void setAscent(double ascent);

    double getBaselineStartX();
    void setBaselineStartX(double baseline_start_x);

    double getBaselineStartY();
    void setBaselineStartY(double baseline_start_y);

    double getBaselineDirectionX();
    void setBaselineDirectionX(double baseline_direction_x);

    double getBaselineDirectionY();
    void setBaselineDirectionY(double baseline_direction_y);


    virtual bool isSet() override;

private:
    QString* bt_type;
    bool m_bt_type_isSet;

    QList<QString*>* control_box_ids;
    bool m_control_box_ids_isSet;

    QString* entity_id;
    bool m_entity_id_isSet;

    QString* entity_id_and_replace_in_dependent_fields;
    bool m_entity_id_and_replace_in_dependent_fields_isSet;

    QString* import_microversion;
    bool m_import_microversion_isSet;

    bool is_construction;
    bool m_is_construction_isSet;

    QString* _namespace;
    bool m__namespace_isSet;

    QString* node_id;
    bool m_node_id_isSet;

    QList<OAIBTMParameter-1*>* parameters;
    bool m_parameters_isSet;

    QString* font_name;
    bool m_font_name_isSet;

    QString* text;
    bool m_text_isSet;

    double ascent;
    bool m_ascent_isSet;

    double baseline_start_x;
    bool m_baseline_start_x_isSet;

    double baseline_start_y;
    bool m_baseline_start_y_isSet;

    double baseline_direction_x;
    bool m_baseline_direction_x_isSet;

    double baseline_direction_y;
    bool m_baseline_direction_y_isSet;

};

}

#endif /* OAIBTMSketchTextEntity-1761_H_ */
