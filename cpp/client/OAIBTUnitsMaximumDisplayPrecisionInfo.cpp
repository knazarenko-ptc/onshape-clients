/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTUnitsMaximumDisplayPrecisionInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTUnitsMaximumDisplayPrecisionInfo::OAIBTUnitsMaximumDisplayPrecisionInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTUnitsMaximumDisplayPrecisionInfo::OAIBTUnitsMaximumDisplayPrecisionInfo() {
    init();
}

OAIBTUnitsMaximumDisplayPrecisionInfo::~OAIBTUnitsMaximumDisplayPrecisionInfo() {
    this->cleanup();
}

void
OAIBTUnitsMaximumDisplayPrecisionInfo::init() {
    units_display_precision = new QMap<QString, qint32>();
    m_units_display_precision_isSet = false;
}

void
OAIBTUnitsMaximumDisplayPrecisionInfo::cleanup() {

    if(units_display_precision != nullptr) { 
        delete units_display_precision;
    }
}

OAIBTUnitsMaximumDisplayPrecisionInfo*
OAIBTUnitsMaximumDisplayPrecisionInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTUnitsMaximumDisplayPrecisionInfo::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&units_display_precision, pJson["unitsDisplayPrecision"], "QMap", "qint32");
}

QString
OAIBTUnitsMaximumDisplayPrecisionInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTUnitsMaximumDisplayPrecisionInfo::asJsonObject() {
    QJsonObject obj;
    if(units_display_precision->size() > 0){
        toJsonMap((QMap<QString, void*>*) units_display_precision, obj, "unitsDisplayPrecision", "");
    }

    return obj;
}

QMap<QString, qint32>*
OAIBTUnitsMaximumDisplayPrecisionInfo::getUnitsDisplayPrecision() {
    return units_display_precision;
}
void
OAIBTUnitsMaximumDisplayPrecisionInfo::setUnitsDisplayPrecision(QMap<QString, qint32>* units_display_precision) {
    this->units_display_precision = units_display_precision;
    this->m_units_display_precision_isSet = true;
}


bool
OAIBTUnitsMaximumDisplayPrecisionInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_units_display_precision_isSet){ isObjectUpdated = true; break;}
        if(units_display_precision->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

