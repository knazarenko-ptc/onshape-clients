/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTExportModelFace-1363.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTExportModelFace-1363::OAIBTExportModelFace-1363(QString json) {
    init();
    this->fromJson(json);
}

OAIBTExportModelFace-1363::OAIBTExportModelFace-1363() {
    init();
}

OAIBTExportModelFace-1363::~OAIBTExportModelFace-1363() {
    this->cleanup();
}

void
OAIBTExportModelFace-1363::init() {
    area = 0.0;
    m_area_isSet = false;
    box = new OAIBTBoundingBox-1052();
    m_box_isSet = false;
    id = new QString("");
    m_id_isSet = false;
    loops = new QList<OAIBTExportModelLoop-1182*>();
    m_loops_isSet = false;
    orientation = false;
    m_orientation_isSet = false;
    surface = new OAIBTSurfaceDescription-1564();
    m_surface_isSet = false;
}

void
OAIBTExportModelFace-1363::cleanup() {

    if(box != nullptr) { 
        delete box;
    }
    if(id != nullptr) { 
        delete id;
    }
    if(loops != nullptr) { 
        auto arr = loops;
        for(auto o: *arr) { 
            delete o;
        }
        delete loops;
    }

    if(surface != nullptr) { 
        delete surface;
    }
}

OAIBTExportModelFace-1363*
OAIBTExportModelFace-1363::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTExportModelFace-1363::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&area, pJson["area"], "double", "");
    
    ::OpenAPI::setValue(&box, pJson["box"], "OAIBTBoundingBox-1052", "OAIBTBoundingBox-1052");
    
    ::OpenAPI::setValue(&id, pJson["id"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&loops, pJson["loops"], "QList", "OAIBTExportModelLoop-1182");
    ::OpenAPI::setValue(&orientation, pJson["orientation"], "bool", "");
    
    ::OpenAPI::setValue(&surface, pJson["surface"], "OAIBTSurfaceDescription-1564", "OAIBTSurfaceDescription-1564");
    
}

QString
OAIBTExportModelFace-1363::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTExportModelFace-1363::asJsonObject() {
    QJsonObject obj;
    if(m_area_isSet){
        obj.insert("area", QJsonValue(area));
    }
    if((box != nullptr) && (box->isSet())){
        toJsonValue(QString("box"), box, obj, QString("OAIBTBoundingBox-1052"));
    }
    if(id != nullptr && *id != QString("")){
        toJsonValue(QString("id"), id, obj, QString("QString"));
    }
    if(loops->size() > 0){
        toJsonArray((QList<void*>*)loops, obj, "loops", "OAIBTExportModelLoop-1182");
    }
    if(m_orientation_isSet){
        obj.insert("orientation", QJsonValue(orientation));
    }
    if((surface != nullptr) && (surface->isSet())){
        toJsonValue(QString("surface"), surface, obj, QString("OAIBTSurfaceDescription-1564"));
    }

    return obj;
}

double
OAIBTExportModelFace-1363::getArea() {
    return area;
}
void
OAIBTExportModelFace-1363::setArea(double area) {
    this->area = area;
    this->m_area_isSet = true;
}

OAIBTBoundingBox-1052*
OAIBTExportModelFace-1363::getBox() {
    return box;
}
void
OAIBTExportModelFace-1363::setBox(OAIBTBoundingBox-1052* box) {
    this->box = box;
    this->m_box_isSet = true;
}

QString*
OAIBTExportModelFace-1363::getId() {
    return id;
}
void
OAIBTExportModelFace-1363::setId(QString* id) {
    this->id = id;
    this->m_id_isSet = true;
}

QList<OAIBTExportModelLoop-1182*>*
OAIBTExportModelFace-1363::getLoops() {
    return loops;
}
void
OAIBTExportModelFace-1363::setLoops(QList<OAIBTExportModelLoop-1182*>* loops) {
    this->loops = loops;
    this->m_loops_isSet = true;
}

bool
OAIBTExportModelFace-1363::isOrientation() {
    return orientation;
}
void
OAIBTExportModelFace-1363::setOrientation(bool orientation) {
    this->orientation = orientation;
    this->m_orientation_isSet = true;
}

OAIBTSurfaceDescription-1564*
OAIBTExportModelFace-1363::getSurface() {
    return surface;
}
void
OAIBTExportModelFace-1363::setSurface(OAIBTSurfaceDescription-1564* surface) {
    this->surface = surface;
    this->m_surface_isSet = true;
}


bool
OAIBTExportModelFace-1363::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_area_isSet){ isObjectUpdated = true; break;}
        if(box != nullptr && box->isSet()){ isObjectUpdated = true; break;}
        if(id != nullptr && *id != QString("")){ isObjectUpdated = true; break;}
        if(loops->size() > 0){ isObjectUpdated = true; break;}
        if(m_orientation_isSet){ isObjectUpdated = true; break;}
        if(surface != nullptr && surface->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

