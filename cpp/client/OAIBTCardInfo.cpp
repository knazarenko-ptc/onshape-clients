/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTCardInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTCardInfo::OAIBTCardInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTCardInfo::OAIBTCardInfo() {
    init();
}

OAIBTCardInfo::~OAIBTCardInfo() {
    this->cleanup();
}

void
OAIBTCardInfo::init() {
    billing_address = new OAIBTAddressInfo();
    m_billing_address_isSet = false;
    exp_month = 0;
    m_exp_month_isSet = false;
    exp_year = 0;
    m_exp_year_isSet = false;
    last4 = new QString("");
    m_last4_isSet = false;
    type = new QString("");
    m_type_isSet = false;
}

void
OAIBTCardInfo::cleanup() {
    if(billing_address != nullptr) { 
        delete billing_address;
    }


    if(last4 != nullptr) { 
        delete last4;
    }
    if(type != nullptr) { 
        delete type;
    }
}

OAIBTCardInfo*
OAIBTCardInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTCardInfo::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&billing_address, pJson["billingAddress"], "OAIBTAddressInfo", "OAIBTAddressInfo");
    
    ::OpenAPI::setValue(&exp_month, pJson["expMonth"], "qint32", "");
    
    ::OpenAPI::setValue(&exp_year, pJson["expYear"], "qint32", "");
    
    ::OpenAPI::setValue(&last4, pJson["last4"], "QString", "QString");
    
    ::OpenAPI::setValue(&type, pJson["type"], "QString", "QString");
    
}

QString
OAIBTCardInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTCardInfo::asJsonObject() {
    QJsonObject obj;
    if((billing_address != nullptr) && (billing_address->isSet())){
        toJsonValue(QString("billingAddress"), billing_address, obj, QString("OAIBTAddressInfo"));
    }
    if(m_exp_month_isSet){
        obj.insert("expMonth", QJsonValue(exp_month));
    }
    if(m_exp_year_isSet){
        obj.insert("expYear", QJsonValue(exp_year));
    }
    if(last4 != nullptr && *last4 != QString("")){
        toJsonValue(QString("last4"), last4, obj, QString("QString"));
    }
    if(type != nullptr && *type != QString("")){
        toJsonValue(QString("type"), type, obj, QString("QString"));
    }

    return obj;
}

OAIBTAddressInfo*
OAIBTCardInfo::getBillingAddress() {
    return billing_address;
}
void
OAIBTCardInfo::setBillingAddress(OAIBTAddressInfo* billing_address) {
    this->billing_address = billing_address;
    this->m_billing_address_isSet = true;
}

qint32
OAIBTCardInfo::getExpMonth() {
    return exp_month;
}
void
OAIBTCardInfo::setExpMonth(qint32 exp_month) {
    this->exp_month = exp_month;
    this->m_exp_month_isSet = true;
}

qint32
OAIBTCardInfo::getExpYear() {
    return exp_year;
}
void
OAIBTCardInfo::setExpYear(qint32 exp_year) {
    this->exp_year = exp_year;
    this->m_exp_year_isSet = true;
}

QString*
OAIBTCardInfo::getLast4() {
    return last4;
}
void
OAIBTCardInfo::setLast4(QString* last4) {
    this->last4 = last4;
    this->m_last4_isSet = true;
}

QString*
OAIBTCardInfo::getType() {
    return type;
}
void
OAIBTCardInfo::setType(QString* type) {
    this->type = type;
    this->m_type_isSet = true;
}


bool
OAIBTCardInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(billing_address != nullptr && billing_address->isSet()){ isObjectUpdated = true; break;}
        if(m_exp_month_isSet){ isObjectUpdated = true; break;}
        if(m_exp_year_isSet){ isObjectUpdated = true; break;}
        if(last4 != nullptr && *last4 != QString("")){ isObjectUpdated = true; break;}
        if(type != nullptr && *type != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

