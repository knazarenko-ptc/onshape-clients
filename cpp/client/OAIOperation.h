/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOperation.h
 *
 * 
 */

#ifndef OAIOperation_H_
#define OAIOperation_H_

#include <QJsonObject>


#include "OAIExternalDocumentation.h"
#include "OAIObject.h"
#include "OAIOperation_responses.h"
#include "OAIParameter.h"
#include "OAIRequestBody.h"
#include "OAIServer.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIOperation: public OAIObject {
public:
    OAIOperation();
    OAIOperation(QString json);
    ~OAIOperation();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIOperation* fromJson(QString jsonString) override;

    QMap<QString, QMap*>* getCallbacks();
    void setCallbacks(QMap<QString, QMap*>* callbacks);

    bool isDeprecated();
    void setDeprecated(bool deprecated);

    QString* getDescription();
    void setDescription(QString* description);

    QMap<QString, OAIObject*>* getExtensions();
    void setExtensions(QMap<QString, OAIObject*>* extensions);

    OAIExternalDocumentation* getExternalDocs();
    void setExternalDocs(OAIExternalDocumentation* external_docs);

    QString* getOperationId();
    void setOperationId(QString* operation_id);

    QList<OAIParameter*>* getParameters();
    void setParameters(QList<OAIParameter*>* parameters);

    OAIRequestBody* getRequestBody();
    void setRequestBody(OAIRequestBody* request_body);

    OAIOperation_responses* getResponses();
    void setResponses(OAIOperation_responses* responses);

    QList<QMap*>* getSecurity();
    void setSecurity(QList<QMap*>* security);

    QList<OAIServer*>* getServers();
    void setServers(QList<OAIServer*>* servers);

    QString* getSummary();
    void setSummary(QString* summary);

    QList<QString*>* getTags();
    void setTags(QList<QString*>* tags);


    virtual bool isSet() override;

private:
    QMap<QString, QMap*>* callbacks;
    bool m_callbacks_isSet;

    bool deprecated;
    bool m_deprecated_isSet;

    QString* description;
    bool m_description_isSet;

    QMap<QString, OAIObject*>* extensions;
    bool m_extensions_isSet;

    OAIExternalDocumentation* external_docs;
    bool m_external_docs_isSet;

    QString* operation_id;
    bool m_operation_id_isSet;

    QList<OAIParameter*>* parameters;
    bool m_parameters_isSet;

    OAIRequestBody* request_body;
    bool m_request_body_isSet;

    OAIOperation_responses* responses;
    bool m_responses_isSet;

    QList<QMap*>* security;
    bool m_security_isSet;

    QList<OAIServer*>* servers;
    bool m_servers_isSet;

    QString* summary;
    bool m_summary_isSet;

    QList<QString*>* tags;
    bool m_tags_isSet;

};

}

#endif /* OAIOperation_H_ */
