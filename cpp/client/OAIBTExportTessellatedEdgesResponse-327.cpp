/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTExportTessellatedEdgesResponse-327.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTExportTessellatedEdgesResponse-327::OAIBTExportTessellatedEdgesResponse-327(QString json) {
    init();
    this->fromJson(json);
}

OAIBTExportTessellatedEdgesResponse-327::OAIBTExportTessellatedEdgesResponse-327() {
    init();
}

OAIBTExportTessellatedEdgesResponse-327::~OAIBTExportTessellatedEdgesResponse-327() {
    this->cleanup();
}

void
OAIBTExportTessellatedEdgesResponse-327::init() {
    bodies = new QList<OAIBTExportTessellatedBody-3398*>();
    m_bodies_isSet = false;
    error_enum = new QString("");
    m_error_enum_isSet = false;
}

void
OAIBTExportTessellatedEdgesResponse-327::cleanup() {
    if(bodies != nullptr) { 
        auto arr = bodies;
        for(auto o: *arr) { 
            delete o;
        }
        delete bodies;
    }
    if(error_enum != nullptr) { 
        delete error_enum;
    }
}

OAIBTExportTessellatedEdgesResponse-327*
OAIBTExportTessellatedEdgesResponse-327::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTExportTessellatedEdgesResponse-327::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&bodies, pJson["bodies"], "QList", "OAIBTExportTessellatedBody-3398");
    ::OpenAPI::setValue(&error_enum, pJson["errorEnum"], "QString", "QString");
    
}

QString
OAIBTExportTessellatedEdgesResponse-327::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTExportTessellatedEdgesResponse-327::asJsonObject() {
    QJsonObject obj;
    if(bodies->size() > 0){
        toJsonArray((QList<void*>*)bodies, obj, "bodies", "OAIBTExportTessellatedBody-3398");
    }
    if(error_enum != nullptr && *error_enum != QString("")){
        toJsonValue(QString("errorEnum"), error_enum, obj, QString("QString"));
    }

    return obj;
}

QList<OAIBTExportTessellatedBody-3398*>*
OAIBTExportTessellatedEdgesResponse-327::getBodies() {
    return bodies;
}
void
OAIBTExportTessellatedEdgesResponse-327::setBodies(QList<OAIBTExportTessellatedBody-3398*>* bodies) {
    this->bodies = bodies;
    this->m_bodies_isSet = true;
}

QString*
OAIBTExportTessellatedEdgesResponse-327::getErrorEnum() {
    return error_enum;
}
void
OAIBTExportTessellatedEdgesResponse-327::setErrorEnum(QString* error_enum) {
    this->error_enum = error_enum;
    this->m_error_enum_isSet = true;
}


bool
OAIBTExportTessellatedEdgesResponse-327::isSet(){
    bool isObjectUpdated = false;
    do{
        if(bodies->size() > 0){ isObjectUpdated = true; break;}
        if(error_enum != nullptr && *error_enum != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

