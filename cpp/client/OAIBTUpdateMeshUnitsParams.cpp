/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTUpdateMeshUnitsParams.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTUpdateMeshUnitsParams::OAIBTUpdateMeshUnitsParams(QString json) {
    init();
    this->fromJson(json);
}

OAIBTUpdateMeshUnitsParams::OAIBTUpdateMeshUnitsParams() {
    init();
}

OAIBTUpdateMeshUnitsParams::~OAIBTUpdateMeshUnitsParams() {
    this->cleanup();
}

void
OAIBTUpdateMeshUnitsParams::init() {
    units = new QString("");
    m_units_isSet = false;
}

void
OAIBTUpdateMeshUnitsParams::cleanup() {
    if(units != nullptr) { 
        delete units;
    }
}

OAIBTUpdateMeshUnitsParams*
OAIBTUpdateMeshUnitsParams::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTUpdateMeshUnitsParams::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&units, pJson["units"], "QString", "QString");
    
}

QString
OAIBTUpdateMeshUnitsParams::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTUpdateMeshUnitsParams::asJsonObject() {
    QJsonObject obj;
    if(units != nullptr && *units != QString("")){
        toJsonValue(QString("units"), units, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIBTUpdateMeshUnitsParams::getUnits() {
    return units;
}
void
OAIBTUpdateMeshUnitsParams::setUnits(QString* units) {
    this->units = units;
    this->m_units_isSet = true;
}


bool
OAIBTUpdateMeshUnitsParams::isSet(){
    bool isObjectUpdated = false;
    do{
        if(units != nullptr && *units != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

