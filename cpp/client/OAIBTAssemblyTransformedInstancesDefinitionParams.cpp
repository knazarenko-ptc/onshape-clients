/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTAssemblyTransformedInstancesDefinitionParams.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTAssemblyTransformedInstancesDefinitionParams::OAIBTAssemblyTransformedInstancesDefinitionParams(QString json) {
    init();
    this->fromJson(json);
}

OAIBTAssemblyTransformedInstancesDefinitionParams::OAIBTAssemblyTransformedInstancesDefinitionParams() {
    init();
}

OAIBTAssemblyTransformedInstancesDefinitionParams::~OAIBTAssemblyTransformedInstancesDefinitionParams() {
    this->cleanup();
}

void
OAIBTAssemblyTransformedInstancesDefinitionParams::init() {
    transform_groups = new QList<OAITransformGroup*>();
    m_transform_groups_isSet = false;
}

void
OAIBTAssemblyTransformedInstancesDefinitionParams::cleanup() {
    if(transform_groups != nullptr) { 
        auto arr = transform_groups;
        for(auto o: *arr) { 
            delete o;
        }
        delete transform_groups;
    }
}

OAIBTAssemblyTransformedInstancesDefinitionParams*
OAIBTAssemblyTransformedInstancesDefinitionParams::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTAssemblyTransformedInstancesDefinitionParams::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&transform_groups, pJson["transformGroups"], "QList", "OAITransformGroup");
}

QString
OAIBTAssemblyTransformedInstancesDefinitionParams::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTAssemblyTransformedInstancesDefinitionParams::asJsonObject() {
    QJsonObject obj;
    if(transform_groups->size() > 0){
        toJsonArray((QList<void*>*)transform_groups, obj, "transformGroups", "OAITransformGroup");
    }

    return obj;
}

QList<OAITransformGroup*>*
OAIBTAssemblyTransformedInstancesDefinitionParams::getTransformGroups() {
    return transform_groups;
}
void
OAIBTAssemblyTransformedInstancesDefinitionParams::setTransformGroups(QList<OAITransformGroup*>* transform_groups) {
    this->transform_groups = transform_groups;
    this->m_transform_groups_isSet = true;
}


bool
OAIBTAssemblyTransformedInstancesDefinitionParams::isSet(){
    bool isObjectUpdated = false;
    do{
        if(transform_groups->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

