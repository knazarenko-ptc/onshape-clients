/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTMaterialLibrarySettingsInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTMaterialLibrarySettingsInfo::OAIBTMaterialLibrarySettingsInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTMaterialLibrarySettingsInfo::OAIBTMaterialLibrarySettingsInfo() {
    init();
}

OAIBTMaterialLibrarySettingsInfo::~OAIBTMaterialLibrarySettingsInfo() {
    this->cleanup();
}

void
OAIBTMaterialLibrarySettingsInfo::init() {
    company_libraries = new QList<OAIBTMaterialLibraryMetadataInfo*>();
    m_company_libraries_isSet = false;
    libraries = new QList<OAIBTMaterialLibraryMetadataInfo*>();
    m_libraries_isSet = false;
}

void
OAIBTMaterialLibrarySettingsInfo::cleanup() {
    if(company_libraries != nullptr) { 
        auto arr = company_libraries;
        for(auto o: *arr) { 
            delete o;
        }
        delete company_libraries;
    }
    if(libraries != nullptr) { 
        auto arr = libraries;
        for(auto o: *arr) { 
            delete o;
        }
        delete libraries;
    }
}

OAIBTMaterialLibrarySettingsInfo*
OAIBTMaterialLibrarySettingsInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTMaterialLibrarySettingsInfo::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&company_libraries, pJson["companyLibraries"], "QList", "OAIBTMaterialLibraryMetadataInfo");
    
    ::OpenAPI::setValue(&libraries, pJson["libraries"], "QList", "OAIBTMaterialLibraryMetadataInfo");
}

QString
OAIBTMaterialLibrarySettingsInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTMaterialLibrarySettingsInfo::asJsonObject() {
    QJsonObject obj;
    if(company_libraries->size() > 0){
        toJsonArray((QList<void*>*)company_libraries, obj, "companyLibraries", "OAIBTMaterialLibraryMetadataInfo");
    }
    if(libraries->size() > 0){
        toJsonArray((QList<void*>*)libraries, obj, "libraries", "OAIBTMaterialLibraryMetadataInfo");
    }

    return obj;
}

QList<OAIBTMaterialLibraryMetadataInfo*>*
OAIBTMaterialLibrarySettingsInfo::getCompanyLibraries() {
    return company_libraries;
}
void
OAIBTMaterialLibrarySettingsInfo::setCompanyLibraries(QList<OAIBTMaterialLibraryMetadataInfo*>* company_libraries) {
    this->company_libraries = company_libraries;
    this->m_company_libraries_isSet = true;
}

QList<OAIBTMaterialLibraryMetadataInfo*>*
OAIBTMaterialLibrarySettingsInfo::getLibraries() {
    return libraries;
}
void
OAIBTMaterialLibrarySettingsInfo::setLibraries(QList<OAIBTMaterialLibraryMetadataInfo*>* libraries) {
    this->libraries = libraries;
    this->m_libraries_isSet = true;
}


bool
OAIBTMaterialLibrarySettingsInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(company_libraries->size() > 0){ isObjectUpdated = true; break;}
        if(libraries->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

