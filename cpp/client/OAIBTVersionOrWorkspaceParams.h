/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTVersionOrWorkspaceParams.h
 *
 * 
 */

#ifndef OAIBTVersionOrWorkspaceParams_H_
#define OAIBTVersionOrWorkspaceParams_H_

#include <QJsonObject>


#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTVersionOrWorkspaceParams: public OAIObject {
public:
    OAIBTVersionOrWorkspaceParams();
    OAIBTVersionOrWorkspaceParams(QString json);
    ~OAIBTVersionOrWorkspaceParams();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTVersionOrWorkspaceParams* fromJson(QString jsonString) override;

    QString* getClientInteractionMode();
    void setClientInteractionMode(QString* client_interaction_mode);

    QString* getDescription();
    void setDescription(QString* description);

    QString* getDocumentId();
    void setDocumentId(QString* document_id);

    bool isFromHistory();
    void setFromHistory(bool from_history);

    bool isIsRelease();
    void setIsRelease(bool is_release);

    QString* getMicroversionId();
    void setMicroversionId(QString* microversion_id);

    QString* getName();
    void setName(QString* name);

    qint32 getPurpose();
    void setPurpose(qint32 purpose);

    bool isReadOnly();
    void setReadOnly(bool read_only);

    QString* getVersionId();
    void setVersionId(QString* version_id);

    QString* getWorkspaceId();
    void setWorkspaceId(QString* workspace_id);


    virtual bool isSet() override;

private:
    QString* client_interaction_mode;
    bool m_client_interaction_mode_isSet;

    QString* description;
    bool m_description_isSet;

    QString* document_id;
    bool m_document_id_isSet;

    bool from_history;
    bool m_from_history_isSet;

    bool is_release;
    bool m_is_release_isSet;

    QString* microversion_id;
    bool m_microversion_id_isSet;

    QString* name;
    bool m_name_isSet;

    qint32 purpose;
    bool m_purpose_isSet;

    bool read_only;
    bool m_read_only_isSet;

    QString* version_id;
    bool m_version_id_isSet;

    QString* workspace_id;
    bool m_workspace_id_isSet;

};

}

#endif /* OAIBTVersionOrWorkspaceParams_H_ */
