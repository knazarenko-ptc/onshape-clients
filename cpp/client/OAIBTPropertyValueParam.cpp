/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTPropertyValueParam.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTPropertyValueParam::OAIBTPropertyValueParam(QString json) {
    init();
    this->fromJson(json);
}

OAIBTPropertyValueParam::OAIBTPropertyValueParam() {
    init();
}

OAIBTPropertyValueParam::~OAIBTPropertyValueParam() {
    this->cleanup();
}

void
OAIBTPropertyValueParam::init() {
    property_id = new QString("");
    m_property_id_isSet = false;
    value = NULL;
    m_value_isSet = false;
}

void
OAIBTPropertyValueParam::cleanup() {
    if(property_id != nullptr) { 
        delete property_id;
    }
    if(value != nullptr) { 
        delete value;
    }
}

OAIBTPropertyValueParam*
OAIBTPropertyValueParam::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTPropertyValueParam::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&property_id, pJson["propertyId"], "QString", "QString");
    
    ::OpenAPI::setValue(&value, pJson["value"], "OAIObject", "OAIObject");
    
}

QString
OAIBTPropertyValueParam::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTPropertyValueParam::asJsonObject() {
    QJsonObject obj;
    if(property_id != nullptr && *property_id != QString("")){
        toJsonValue(QString("propertyId"), property_id, obj, QString("QString"));
    }
    if((value != nullptr) && (value->isSet())){
        toJsonValue(QString("value"), value, obj, QString("OAIObject"));
    }

    return obj;
}

QString*
OAIBTPropertyValueParam::getPropertyId() {
    return property_id;
}
void
OAIBTPropertyValueParam::setPropertyId(QString* property_id) {
    this->property_id = property_id;
    this->m_property_id_isSet = true;
}

OAIObject*
OAIBTPropertyValueParam::getValue() {
    return value;
}
void
OAIBTPropertyValueParam::setValue(OAIObject* value) {
    this->value = value;
    this->m_value_isSet = true;
}


bool
OAIBTPropertyValueParam::isSet(){
    bool isObjectUpdated = false;
    do{
        if(property_id != nullptr && *property_id != QString("")){ isObjectUpdated = true; break;}
        if(value != nullptr && value->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

