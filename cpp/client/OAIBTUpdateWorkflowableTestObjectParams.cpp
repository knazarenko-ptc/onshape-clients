/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTUpdateWorkflowableTestObjectParams.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTUpdateWorkflowableTestObjectParams::OAIBTUpdateWorkflowableTestObjectParams(QString json) {
    init();
    this->fromJson(json);
}

OAIBTUpdateWorkflowableTestObjectParams::OAIBTUpdateWorkflowableTestObjectParams() {
    init();
}

OAIBTUpdateWorkflowableTestObjectParams::~OAIBTUpdateWorkflowableTestObjectParams() {
    this->cleanup();
}

void
OAIBTUpdateWorkflowableTestObjectParams::init() {
    properties = new QList<OAIBTPropertyValueParam*>();
    m_properties_isSet = false;
}

void
OAIBTUpdateWorkflowableTestObjectParams::cleanup() {
    if(properties != nullptr) { 
        auto arr = properties;
        for(auto o: *arr) { 
            delete o;
        }
        delete properties;
    }
}

OAIBTUpdateWorkflowableTestObjectParams*
OAIBTUpdateWorkflowableTestObjectParams::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTUpdateWorkflowableTestObjectParams::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&properties, pJson["properties"], "QList", "OAIBTPropertyValueParam");
}

QString
OAIBTUpdateWorkflowableTestObjectParams::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTUpdateWorkflowableTestObjectParams::asJsonObject() {
    QJsonObject obj;
    if(properties->size() > 0){
        toJsonArray((QList<void*>*)properties, obj, "properties", "OAIBTPropertyValueParam");
    }

    return obj;
}

QList<OAIBTPropertyValueParam*>*
OAIBTUpdateWorkflowableTestObjectParams::getProperties() {
    return properties;
}
void
OAIBTUpdateWorkflowableTestObjectParams::setProperties(QList<OAIBTPropertyValueParam*>* properties) {
    this->properties = properties;
    this->m_properties_isSet = true;
}


bool
OAIBTUpdateWorkflowableTestObjectParams::isSet(){
    bool isObjectUpdated = false;
    do{
        if(properties->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

