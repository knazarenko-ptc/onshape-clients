/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef _OAI_OAIFeatureStudiosApi_H_
#define _OAI_OAIFeatureStudiosApi_H_

#include "OAIHttpRequest.h"

#include "OAIBTDocumentElementInfo.h"
#include "OAIBTFeatureSpecsResponse-664.h"
#include "OAIBTFeatureStudioContents-2239.h"
#include "OAIBTModelElementParams.h"
#include <QString>

#include <QObject>

namespace OpenAPI {

class OAIFeatureStudiosApi: public QObject {
    Q_OBJECT

public:
    OAIFeatureStudiosApi();
    OAIFeatureStudiosApi(QString host, QString basePath);
    ~OAIFeatureStudiosApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void createFeatureStudio(QString* did, QString* wid, OAIBTModelElementParams& oaibt_model_element_params);
    void getFeatureStudioContents(QString* did, QString* wvm, QString* wvmid, QString* eid);
    void getFeatureStudioSpecs(QString* did, QString* wvm, QString* wvmid, QString* eid);
    void updateFeatureStudioContents(QString* did, QString* wvm, QString* wvmid, QString* eid, QString*& body);
    
private:
    void createFeatureStudioCallback (OAIHttpRequestWorker * worker);
    void getFeatureStudioContentsCallback (OAIHttpRequestWorker * worker);
    void getFeatureStudioSpecsCallback (OAIHttpRequestWorker * worker);
    void updateFeatureStudioContentsCallback (OAIHttpRequestWorker * worker);
    
signals:
    void createFeatureStudioSignal(OAIBTDocumentElementInfo* summary);
    void getFeatureStudioContentsSignal(OAIBTFeatureStudioContents-2239* summary);
    void getFeatureStudioSpecsSignal(OAIBTFeatureSpecsResponse-664* summary);
    void updateFeatureStudioContentsSignal(OAIBTFeatureStudioContents-2239* summary);
    
    void createFeatureStudioSignalE(OAIBTDocumentElementInfo* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void getFeatureStudioContentsSignalE(OAIBTFeatureStudioContents-2239* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void getFeatureStudioSpecsSignalE(OAIBTFeatureSpecsResponse-664* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateFeatureStudioContentsSignalE(OAIBTFeatureStudioContents-2239* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    
    void createFeatureStudioSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void getFeatureStudioContentsSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void getFeatureStudioSpecsSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateFeatureStudioContentsSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
