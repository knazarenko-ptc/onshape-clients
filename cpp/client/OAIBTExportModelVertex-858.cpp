/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTExportModelVertex-858.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTExportModelVertex-858::OAIBTExportModelVertex-858(QString json) {
    init();
    this->fromJson(json);
}

OAIBTExportModelVertex-858::OAIBTExportModelVertex-858() {
    init();
}

OAIBTExportModelVertex-858::~OAIBTExportModelVertex-858() {
    this->cleanup();
}

void
OAIBTExportModelVertex-858::init() {
    id = new QString("");
    m_id_isSet = false;
    point = new OAIBTVector3d-389();
    m_point_isSet = false;
}

void
OAIBTExportModelVertex-858::cleanup() {
    if(id != nullptr) { 
        delete id;
    }
    if(point != nullptr) { 
        delete point;
    }
}

OAIBTExportModelVertex-858*
OAIBTExportModelVertex-858::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTExportModelVertex-858::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&id, pJson["id"], "QString", "QString");
    
    ::OpenAPI::setValue(&point, pJson["point"], "OAIBTVector3d-389", "OAIBTVector3d-389");
    
}

QString
OAIBTExportModelVertex-858::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTExportModelVertex-858::asJsonObject() {
    QJsonObject obj;
    if(id != nullptr && *id != QString("")){
        toJsonValue(QString("id"), id, obj, QString("QString"));
    }
    if((point != nullptr) && (point->isSet())){
        toJsonValue(QString("point"), point, obj, QString("OAIBTVector3d-389"));
    }

    return obj;
}

QString*
OAIBTExportModelVertex-858::getId() {
    return id;
}
void
OAIBTExportModelVertex-858::setId(QString* id) {
    this->id = id;
    this->m_id_isSet = true;
}

OAIBTVector3d-389*
OAIBTExportModelVertex-858::getPoint() {
    return point;
}
void
OAIBTExportModelVertex-858::setPoint(OAIBTVector3d-389* point) {
    this->point = point;
    this->m_point_isSet = true;
}


bool
OAIBTExportModelVertex-858::isSet(){
    bool isObjectUpdated = false;
    do{
        if(id != nullptr && *id != QString("")){ isObjectUpdated = true; break;}
        if(point != nullptr && point->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

