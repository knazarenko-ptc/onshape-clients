/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTNamedViewsInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTNamedViewsInfo::OAIBTNamedViewsInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTNamedViewsInfo::OAIBTNamedViewsInfo() {
    init();
}

OAIBTNamedViewsInfo::~OAIBTNamedViewsInfo() {
    this->cleanup();
}

void
OAIBTNamedViewsInfo::init() {
    named_views = new QMap<QString, OAIBTNamedViewInfo*>();
    m_named_views_isSet = false;
}

void
OAIBTNamedViewsInfo::cleanup() {
    if(named_views != nullptr) { 
        auto arr = named_views;
        for(auto o: *arr) { 
            delete o;
        }
        delete named_views;
    }
}

OAIBTNamedViewsInfo*
OAIBTNamedViewsInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTNamedViewsInfo::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&named_views, pJson["namedViews"], "QMap", "OAIBTNamedViewInfo");
}

QString
OAIBTNamedViewsInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTNamedViewsInfo::asJsonObject() {
    QJsonObject obj;
    if(named_views->size() > 0){
        toJsonMap((QMap<QString, void*>*) named_views, obj, "namedViews", "OAIBTNamedViewInfo");
    }

    return obj;
}

QMap<QString, OAIBTNamedViewInfo*>*
OAIBTNamedViewsInfo::getNamedViews() {
    return named_views;
}
void
OAIBTNamedViewsInfo::setNamedViews(QMap<QString, OAIBTNamedViewInfo*>* named_views) {
    this->named_views = named_views;
    this->m_named_views_isSet = true;
}


bool
OAIBTNamedViewsInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(named_views->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

