/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTFeatureSpecsResponse-664.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTFeatureSpecsResponse-664::OAIBTFeatureSpecsResponse-664(QString json) {
    init();
    this->fromJson(json);
}

OAIBTFeatureSpecsResponse-664::OAIBTFeatureSpecsResponse-664() {
    init();
}

OAIBTFeatureSpecsResponse-664::~OAIBTFeatureSpecsResponse-664() {
    this->cleanup();
}

void
OAIBTFeatureSpecsResponse-664::init() {
    feature_specs = new QList<OAIBTFeatureSpec-129*>();
    m_feature_specs_isSet = false;
    library_version = 0;
    m_library_version_isSet = false;
    microversion_skew = false;
    m_microversion_skew_isSet = false;
    reject_microversion_skew = false;
    m_reject_microversion_skew_isSet = false;
    serialization_version = new QString("");
    m_serialization_version_isSet = false;
    source_microversion = new QString("");
    m_source_microversion_isSet = false;
}

void
OAIBTFeatureSpecsResponse-664::cleanup() {
    if(feature_specs != nullptr) { 
        auto arr = feature_specs;
        for(auto o: *arr) { 
            delete o;
        }
        delete feature_specs;
    }



    if(serialization_version != nullptr) { 
        delete serialization_version;
    }
    if(source_microversion != nullptr) { 
        delete source_microversion;
    }
}

OAIBTFeatureSpecsResponse-664*
OAIBTFeatureSpecsResponse-664::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTFeatureSpecsResponse-664::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&feature_specs, pJson["featureSpecs"], "QList", "OAIBTFeatureSpec-129");
    ::OpenAPI::setValue(&library_version, pJson["libraryVersion"], "qint32", "");
    
    ::OpenAPI::setValue(&microversion_skew, pJson["microversionSkew"], "bool", "");
    
    ::OpenAPI::setValue(&reject_microversion_skew, pJson["rejectMicroversionSkew"], "bool", "");
    
    ::OpenAPI::setValue(&serialization_version, pJson["serializationVersion"], "QString", "QString");
    
    ::OpenAPI::setValue(&source_microversion, pJson["sourceMicroversion"], "QString", "QString");
    
}

QString
OAIBTFeatureSpecsResponse-664::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTFeatureSpecsResponse-664::asJsonObject() {
    QJsonObject obj;
    if(feature_specs->size() > 0){
        toJsonArray((QList<void*>*)feature_specs, obj, "featureSpecs", "OAIBTFeatureSpec-129");
    }
    if(m_library_version_isSet){
        obj.insert("libraryVersion", QJsonValue(library_version));
    }
    if(m_microversion_skew_isSet){
        obj.insert("microversionSkew", QJsonValue(microversion_skew));
    }
    if(m_reject_microversion_skew_isSet){
        obj.insert("rejectMicroversionSkew", QJsonValue(reject_microversion_skew));
    }
    if(serialization_version != nullptr && *serialization_version != QString("")){
        toJsonValue(QString("serializationVersion"), serialization_version, obj, QString("QString"));
    }
    if(source_microversion != nullptr && *source_microversion != QString("")){
        toJsonValue(QString("sourceMicroversion"), source_microversion, obj, QString("QString"));
    }

    return obj;
}

QList<OAIBTFeatureSpec-129*>*
OAIBTFeatureSpecsResponse-664::getFeatureSpecs() {
    return feature_specs;
}
void
OAIBTFeatureSpecsResponse-664::setFeatureSpecs(QList<OAIBTFeatureSpec-129*>* feature_specs) {
    this->feature_specs = feature_specs;
    this->m_feature_specs_isSet = true;
}

qint32
OAIBTFeatureSpecsResponse-664::getLibraryVersion() {
    return library_version;
}
void
OAIBTFeatureSpecsResponse-664::setLibraryVersion(qint32 library_version) {
    this->library_version = library_version;
    this->m_library_version_isSet = true;
}

bool
OAIBTFeatureSpecsResponse-664::isMicroversionSkew() {
    return microversion_skew;
}
void
OAIBTFeatureSpecsResponse-664::setMicroversionSkew(bool microversion_skew) {
    this->microversion_skew = microversion_skew;
    this->m_microversion_skew_isSet = true;
}

bool
OAIBTFeatureSpecsResponse-664::isRejectMicroversionSkew() {
    return reject_microversion_skew;
}
void
OAIBTFeatureSpecsResponse-664::setRejectMicroversionSkew(bool reject_microversion_skew) {
    this->reject_microversion_skew = reject_microversion_skew;
    this->m_reject_microversion_skew_isSet = true;
}

QString*
OAIBTFeatureSpecsResponse-664::getSerializationVersion() {
    return serialization_version;
}
void
OAIBTFeatureSpecsResponse-664::setSerializationVersion(QString* serialization_version) {
    this->serialization_version = serialization_version;
    this->m_serialization_version_isSet = true;
}

QString*
OAIBTFeatureSpecsResponse-664::getSourceMicroversion() {
    return source_microversion;
}
void
OAIBTFeatureSpecsResponse-664::setSourceMicroversion(QString* source_microversion) {
    this->source_microversion = source_microversion;
    this->m_source_microversion_isSet = true;
}


bool
OAIBTFeatureSpecsResponse-664::isSet(){
    bool isObjectUpdated = false;
    do{
        if(feature_specs->size() > 0){ isObjectUpdated = true; break;}
        if(m_library_version_isSet){ isObjectUpdated = true; break;}
        if(m_microversion_skew_isSet){ isObjectUpdated = true; break;}
        if(m_reject_microversion_skew_isSet){ isObjectUpdated = true; break;}
        if(serialization_version != nullptr && *serialization_version != QString("")){ isObjectUpdated = true; break;}
        if(source_microversion != nullptr && *source_microversion != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

