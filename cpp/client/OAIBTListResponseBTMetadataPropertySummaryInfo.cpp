/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTListResponseBTMetadataPropertySummaryInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTListResponseBTMetadataPropertySummaryInfo::OAIBTListResponseBTMetadataPropertySummaryInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTListResponseBTMetadataPropertySummaryInfo::OAIBTListResponseBTMetadataPropertySummaryInfo() {
    init();
}

OAIBTListResponseBTMetadataPropertySummaryInfo::~OAIBTListResponseBTMetadataPropertySummaryInfo() {
    this->cleanup();
}

void
OAIBTListResponseBTMetadataPropertySummaryInfo::init() {
    href = new QString("");
    m_href_isSet = false;
    items = new QList<OAIBTMetadataPropertySummaryInfo*>();
    m_items_isSet = false;
    next = new QString("");
    m_next_isSet = false;
    previous = new QString("");
    m_previous_isSet = false;
}

void
OAIBTListResponseBTMetadataPropertySummaryInfo::cleanup() {
    if(href != nullptr) { 
        delete href;
    }
    if(items != nullptr) { 
        auto arr = items;
        for(auto o: *arr) { 
            delete o;
        }
        delete items;
    }
    if(next != nullptr) { 
        delete next;
    }
    if(previous != nullptr) { 
        delete previous;
    }
}

OAIBTListResponseBTMetadataPropertySummaryInfo*
OAIBTListResponseBTMetadataPropertySummaryInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTListResponseBTMetadataPropertySummaryInfo::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&href, pJson["href"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&items, pJson["items"], "QList", "OAIBTMetadataPropertySummaryInfo");
    ::OpenAPI::setValue(&next, pJson["next"], "QString", "QString");
    
    ::OpenAPI::setValue(&previous, pJson["previous"], "QString", "QString");
    
}

QString
OAIBTListResponseBTMetadataPropertySummaryInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTListResponseBTMetadataPropertySummaryInfo::asJsonObject() {
    QJsonObject obj;
    if(href != nullptr && *href != QString("")){
        toJsonValue(QString("href"), href, obj, QString("QString"));
    }
    if(items->size() > 0){
        toJsonArray((QList<void*>*)items, obj, "items", "OAIBTMetadataPropertySummaryInfo");
    }
    if(next != nullptr && *next != QString("")){
        toJsonValue(QString("next"), next, obj, QString("QString"));
    }
    if(previous != nullptr && *previous != QString("")){
        toJsonValue(QString("previous"), previous, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIBTListResponseBTMetadataPropertySummaryInfo::getHref() {
    return href;
}
void
OAIBTListResponseBTMetadataPropertySummaryInfo::setHref(QString* href) {
    this->href = href;
    this->m_href_isSet = true;
}

QList<OAIBTMetadataPropertySummaryInfo*>*
OAIBTListResponseBTMetadataPropertySummaryInfo::getItems() {
    return items;
}
void
OAIBTListResponseBTMetadataPropertySummaryInfo::setItems(QList<OAIBTMetadataPropertySummaryInfo*>* items) {
    this->items = items;
    this->m_items_isSet = true;
}

QString*
OAIBTListResponseBTMetadataPropertySummaryInfo::getNext() {
    return next;
}
void
OAIBTListResponseBTMetadataPropertySummaryInfo::setNext(QString* next) {
    this->next = next;
    this->m_next_isSet = true;
}

QString*
OAIBTListResponseBTMetadataPropertySummaryInfo::getPrevious() {
    return previous;
}
void
OAIBTListResponseBTMetadataPropertySummaryInfo::setPrevious(QString* previous) {
    this->previous = previous;
    this->m_previous_isSet = true;
}


bool
OAIBTListResponseBTMetadataPropertySummaryInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(href != nullptr && *href != QString("")){ isObjectUpdated = true; break;}
        if(items->size() > 0){ isObjectUpdated = true; break;}
        if(next != nullptr && *next != QString("")){ isObjectUpdated = true; break;}
        if(previous != nullptr && *previous != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

