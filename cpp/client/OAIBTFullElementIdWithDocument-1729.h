/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTFullElementIdWithDocument-1729.h
 *
 * 
 */

#ifndef OAIBTFullElementIdWithDocument-1729_H_
#define OAIBTFullElementIdWithDocument-1729_H_

#include <QJsonObject>


#include "OAIBTFullElementId-756.h"
#include "OAIBTMicroversionId-366.h"
#include "OAIBTMicroversionIdAndConfiguration-2338.h"
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTFullElementIdWithDocument-1729: public OAIObject {
public:
    OAIBTFullElementIdWithDocument-1729();
    OAIBTFullElementIdWithDocument-1729(QString json);
    ~OAIBTFullElementIdWithDocument-1729();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTFullElementIdWithDocument-1729* fromJson(QString jsonString) override;

    QString* getBtType();
    void setBtType(QString* bt_type);

    bool isConfigured();
    void setConfigured(bool configured);

    QString* getElementId();
    void setElementId(QString* element_id);

    OAIBTMicroversionId-366* getMicroversionId();
    void setMicroversionId(OAIBTMicroversionId-366* microversion_id);

    OAIBTMicroversionIdAndConfiguration-2338* getMicroversionIdAndConfiguration();
    void setMicroversionIdAndConfiguration(OAIBTMicroversionIdAndConfiguration-2338* microversion_id_and_configuration);

    OAIBTMicroversionIdAndConfiguration-2338* getTarget();
    void setTarget(OAIBTMicroversionIdAndConfiguration-2338* target);

    QString* getDocumentId();
    void setDocumentId(QString* document_id);


    virtual bool isSet() override;

private:
    QString* bt_type;
    bool m_bt_type_isSet;

    bool configured;
    bool m_configured_isSet;

    QString* element_id;
    bool m_element_id_isSet;

    OAIBTMicroversionId-366* microversion_id;
    bool m_microversion_id_isSet;

    OAIBTMicroversionIdAndConfiguration-2338* microversion_id_and_configuration;
    bool m_microversion_id_and_configuration_isSet;

    OAIBTMicroversionIdAndConfiguration-2338* target;
    bool m_target_isSet;

    QString* document_id;
    bool m_document_id_isSet;

};

}

#endif /* OAIBTFullElementIdWithDocument-1729_H_ */
