/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTFSTable-953.h
 *
 * 
 */

#ifndef OAIBTFSTable-953_H_
#define OAIBTFSTable-953_H_

#include <QJsonObject>


#include "OAIBTTable-1825.h"
#include "OAIBTTableBaseCrossHighlightData-2609.h"
#include "OAIBTTableColumnInfo-1222.h"
#include "OAIBTTableRow-1054.h"
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTFSTable-953: public OAIObject {
public:
    OAIBTFSTable-953();
    OAIBTFSTable-953(QString json);
    ~OAIBTFSTable-953();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTFSTable-953* fromJson(QString jsonString) override;

    QList<QList<QString*>*>* getAllRowValues();
    void setAllRowValues(QList<QList<QString*>*>* all_row_values);

    QString* getBtType();
    void setBtType(QString* bt_type);

    qint32 getColumnCount();
    void setColumnCount(qint32 column_count);

    qint32 getFrozenColumns();
    void setFrozenColumns(qint32 frozen_columns);

    QString* getNodeId();
    void setNodeId(QString* node_id);

    bool isReadOnly();
    void setReadOnly(bool read_only);

    qint32 getRowCount();
    void setRowCount(qint32 row_count);

    QList<OAIBTTableColumnInfo-1222*>* getTableColumns();
    void setTableColumns(QList<OAIBTTableColumnInfo-1222*>* table_columns);

    QString* getTableId();
    void setTableId(QString* table_id);

    QList<OAIBTTableRow-1054*>* getTableRows();
    void setTableRows(QList<OAIBTTableRow-1054*>* table_rows);

    QString* getTitle();
    void setTitle(QString* title);

    OAIBTTableBaseCrossHighlightData-2609* getCrossHighlightData();
    void setCrossHighlightData(OAIBTTableBaseCrossHighlightData-2609* cross_highlight_data);


    virtual bool isSet() override;

private:
    QList<QList<QString*>*>* all_row_values;
    bool m_all_row_values_isSet;

    QString* bt_type;
    bool m_bt_type_isSet;

    qint32 column_count;
    bool m_column_count_isSet;

    qint32 frozen_columns;
    bool m_frozen_columns_isSet;

    QString* node_id;
    bool m_node_id_isSet;

    bool read_only;
    bool m_read_only_isSet;

    qint32 row_count;
    bool m_row_count_isSet;

    QList<OAIBTTableColumnInfo-1222*>* table_columns;
    bool m_table_columns_isSet;

    QString* table_id;
    bool m_table_id_isSet;

    QList<OAIBTTableRow-1054*>* table_rows;
    bool m_table_rows_isSet;

    QString* title;
    bool m_title_isSet;

    OAIBTTableBaseCrossHighlightData-2609* cross_highlight_data;
    bool m_cross_highlight_data_isSet;

};

}

#endif /* OAIBTFSTable-953_H_ */
