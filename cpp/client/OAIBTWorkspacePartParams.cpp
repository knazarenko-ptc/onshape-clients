/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTWorkspacePartParams.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTWorkspacePartParams::OAIBTWorkspacePartParams(QString json) {
    init();
    this->fromJson(json);
}

OAIBTWorkspacePartParams::OAIBTWorkspacePartParams() {
    init();
}

OAIBTWorkspacePartParams::~OAIBTWorkspacePartParams() {
    this->cleanup();
}

void
OAIBTWorkspacePartParams::init() {
    appearance = new OAIBTPartAppearanceParams();
    m_appearance_isSet = false;
    apply_update_to_all_configurations = false;
    m_apply_update_to_all_configurations_isSet = false;
    configuration = new QString("");
    m_configuration_isSet = false;
    connection_id = new QString("");
    m_connection_id_isSet = false;
    custom_properties = new QList<OAIBTNameValuePair*>();
    m_custom_properties_isSet = false;
    custom_property_definitions = new QList<OAIBTCustomPropertyDefinitionParams*>();
    m_custom_property_definitions_isSet = false;
    description = new QString("");
    m_description_isSet = false;
    element_id = new QString("");
    m_element_id_isSet = false;
    material = new OAIBTMaterialParams();
    m_material_isSet = false;
    name = new QString("");
    m_name_isSet = false;
    part_id = new QString("");
    m_part_id_isSet = false;
    part_number = new QString("");
    m_part_number_isSet = false;
    product_line = new QString("");
    m_product_line_isSet = false;
    project = new QString("");
    m_project_isSet = false;
    revision = new QString("");
    m_revision_isSet = false;
    title1 = new QString("");
    m_title1_isSet = false;
    title2 = new QString("");
    m_title2_isSet = false;
    title3 = new QString("");
    m_title3_isSet = false;
    vendor = new QString("");
    m_vendor_isSet = false;
}

void
OAIBTWorkspacePartParams::cleanup() {
    if(appearance != nullptr) { 
        delete appearance;
    }

    if(configuration != nullptr) { 
        delete configuration;
    }
    if(connection_id != nullptr) { 
        delete connection_id;
    }
    if(custom_properties != nullptr) { 
        auto arr = custom_properties;
        for(auto o: *arr) { 
            delete o;
        }
        delete custom_properties;
    }
    if(custom_property_definitions != nullptr) { 
        auto arr = custom_property_definitions;
        for(auto o: *arr) { 
            delete o;
        }
        delete custom_property_definitions;
    }
    if(description != nullptr) { 
        delete description;
    }
    if(element_id != nullptr) { 
        delete element_id;
    }
    if(material != nullptr) { 
        delete material;
    }
    if(name != nullptr) { 
        delete name;
    }
    if(part_id != nullptr) { 
        delete part_id;
    }
    if(part_number != nullptr) { 
        delete part_number;
    }
    if(product_line != nullptr) { 
        delete product_line;
    }
    if(project != nullptr) { 
        delete project;
    }
    if(revision != nullptr) { 
        delete revision;
    }
    if(title1 != nullptr) { 
        delete title1;
    }
    if(title2 != nullptr) { 
        delete title2;
    }
    if(title3 != nullptr) { 
        delete title3;
    }
    if(vendor != nullptr) { 
        delete vendor;
    }
}

OAIBTWorkspacePartParams*
OAIBTWorkspacePartParams::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTWorkspacePartParams::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&appearance, pJson["appearance"], "OAIBTPartAppearanceParams", "OAIBTPartAppearanceParams");
    
    ::OpenAPI::setValue(&apply_update_to_all_configurations, pJson["applyUpdateToAllConfigurations"], "bool", "");
    
    ::OpenAPI::setValue(&configuration, pJson["configuration"], "QString", "QString");
    
    ::OpenAPI::setValue(&connection_id, pJson["connectionId"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&custom_properties, pJson["customProperties"], "QList", "OAIBTNameValuePair");
    
    ::OpenAPI::setValue(&custom_property_definitions, pJson["customPropertyDefinitions"], "QList", "OAIBTCustomPropertyDefinitionParams");
    ::OpenAPI::setValue(&description, pJson["description"], "QString", "QString");
    
    ::OpenAPI::setValue(&element_id, pJson["elementId"], "QString", "QString");
    
    ::OpenAPI::setValue(&material, pJson["material"], "OAIBTMaterialParams", "OAIBTMaterialParams");
    
    ::OpenAPI::setValue(&name, pJson["name"], "QString", "QString");
    
    ::OpenAPI::setValue(&part_id, pJson["partId"], "QString", "QString");
    
    ::OpenAPI::setValue(&part_number, pJson["partNumber"], "QString", "QString");
    
    ::OpenAPI::setValue(&product_line, pJson["productLine"], "QString", "QString");
    
    ::OpenAPI::setValue(&project, pJson["project"], "QString", "QString");
    
    ::OpenAPI::setValue(&revision, pJson["revision"], "QString", "QString");
    
    ::OpenAPI::setValue(&title1, pJson["title1"], "QString", "QString");
    
    ::OpenAPI::setValue(&title2, pJson["title2"], "QString", "QString");
    
    ::OpenAPI::setValue(&title3, pJson["title3"], "QString", "QString");
    
    ::OpenAPI::setValue(&vendor, pJson["vendor"], "QString", "QString");
    
}

QString
OAIBTWorkspacePartParams::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTWorkspacePartParams::asJsonObject() {
    QJsonObject obj;
    if((appearance != nullptr) && (appearance->isSet())){
        toJsonValue(QString("appearance"), appearance, obj, QString("OAIBTPartAppearanceParams"));
    }
    if(m_apply_update_to_all_configurations_isSet){
        obj.insert("applyUpdateToAllConfigurations", QJsonValue(apply_update_to_all_configurations));
    }
    if(configuration != nullptr && *configuration != QString("")){
        toJsonValue(QString("configuration"), configuration, obj, QString("QString"));
    }
    if(connection_id != nullptr && *connection_id != QString("")){
        toJsonValue(QString("connectionId"), connection_id, obj, QString("QString"));
    }
    if(custom_properties->size() > 0){
        toJsonArray((QList<void*>*)custom_properties, obj, "customProperties", "OAIBTNameValuePair");
    }
    if(custom_property_definitions->size() > 0){
        toJsonArray((QList<void*>*)custom_property_definitions, obj, "customPropertyDefinitions", "OAIBTCustomPropertyDefinitionParams");
    }
    if(description != nullptr && *description != QString("")){
        toJsonValue(QString("description"), description, obj, QString("QString"));
    }
    if(element_id != nullptr && *element_id != QString("")){
        toJsonValue(QString("elementId"), element_id, obj, QString("QString"));
    }
    if((material != nullptr) && (material->isSet())){
        toJsonValue(QString("material"), material, obj, QString("OAIBTMaterialParams"));
    }
    if(name != nullptr && *name != QString("")){
        toJsonValue(QString("name"), name, obj, QString("QString"));
    }
    if(part_id != nullptr && *part_id != QString("")){
        toJsonValue(QString("partId"), part_id, obj, QString("QString"));
    }
    if(part_number != nullptr && *part_number != QString("")){
        toJsonValue(QString("partNumber"), part_number, obj, QString("QString"));
    }
    if(product_line != nullptr && *product_line != QString("")){
        toJsonValue(QString("productLine"), product_line, obj, QString("QString"));
    }
    if(project != nullptr && *project != QString("")){
        toJsonValue(QString("project"), project, obj, QString("QString"));
    }
    if(revision != nullptr && *revision != QString("")){
        toJsonValue(QString("revision"), revision, obj, QString("QString"));
    }
    if(title1 != nullptr && *title1 != QString("")){
        toJsonValue(QString("title1"), title1, obj, QString("QString"));
    }
    if(title2 != nullptr && *title2 != QString("")){
        toJsonValue(QString("title2"), title2, obj, QString("QString"));
    }
    if(title3 != nullptr && *title3 != QString("")){
        toJsonValue(QString("title3"), title3, obj, QString("QString"));
    }
    if(vendor != nullptr && *vendor != QString("")){
        toJsonValue(QString("vendor"), vendor, obj, QString("QString"));
    }

    return obj;
}

OAIBTPartAppearanceParams*
OAIBTWorkspacePartParams::getAppearance() {
    return appearance;
}
void
OAIBTWorkspacePartParams::setAppearance(OAIBTPartAppearanceParams* appearance) {
    this->appearance = appearance;
    this->m_appearance_isSet = true;
}

bool
OAIBTWorkspacePartParams::isApplyUpdateToAllConfigurations() {
    return apply_update_to_all_configurations;
}
void
OAIBTWorkspacePartParams::setApplyUpdateToAllConfigurations(bool apply_update_to_all_configurations) {
    this->apply_update_to_all_configurations = apply_update_to_all_configurations;
    this->m_apply_update_to_all_configurations_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getConfiguration() {
    return configuration;
}
void
OAIBTWorkspacePartParams::setConfiguration(QString* configuration) {
    this->configuration = configuration;
    this->m_configuration_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getConnectionId() {
    return connection_id;
}
void
OAIBTWorkspacePartParams::setConnectionId(QString* connection_id) {
    this->connection_id = connection_id;
    this->m_connection_id_isSet = true;
}

QList<OAIBTNameValuePair*>*
OAIBTWorkspacePartParams::getCustomProperties() {
    return custom_properties;
}
void
OAIBTWorkspacePartParams::setCustomProperties(QList<OAIBTNameValuePair*>* custom_properties) {
    this->custom_properties = custom_properties;
    this->m_custom_properties_isSet = true;
}

QList<OAIBTCustomPropertyDefinitionParams*>*
OAIBTWorkspacePartParams::getCustomPropertyDefinitions() {
    return custom_property_definitions;
}
void
OAIBTWorkspacePartParams::setCustomPropertyDefinitions(QList<OAIBTCustomPropertyDefinitionParams*>* custom_property_definitions) {
    this->custom_property_definitions = custom_property_definitions;
    this->m_custom_property_definitions_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getDescription() {
    return description;
}
void
OAIBTWorkspacePartParams::setDescription(QString* description) {
    this->description = description;
    this->m_description_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getElementId() {
    return element_id;
}
void
OAIBTWorkspacePartParams::setElementId(QString* element_id) {
    this->element_id = element_id;
    this->m_element_id_isSet = true;
}

OAIBTMaterialParams*
OAIBTWorkspacePartParams::getMaterial() {
    return material;
}
void
OAIBTWorkspacePartParams::setMaterial(OAIBTMaterialParams* material) {
    this->material = material;
    this->m_material_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getName() {
    return name;
}
void
OAIBTWorkspacePartParams::setName(QString* name) {
    this->name = name;
    this->m_name_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getPartId() {
    return part_id;
}
void
OAIBTWorkspacePartParams::setPartId(QString* part_id) {
    this->part_id = part_id;
    this->m_part_id_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getPartNumber() {
    return part_number;
}
void
OAIBTWorkspacePartParams::setPartNumber(QString* part_number) {
    this->part_number = part_number;
    this->m_part_number_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getProductLine() {
    return product_line;
}
void
OAIBTWorkspacePartParams::setProductLine(QString* product_line) {
    this->product_line = product_line;
    this->m_product_line_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getProject() {
    return project;
}
void
OAIBTWorkspacePartParams::setProject(QString* project) {
    this->project = project;
    this->m_project_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getRevision() {
    return revision;
}
void
OAIBTWorkspacePartParams::setRevision(QString* revision) {
    this->revision = revision;
    this->m_revision_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getTitle1() {
    return title1;
}
void
OAIBTWorkspacePartParams::setTitle1(QString* title1) {
    this->title1 = title1;
    this->m_title1_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getTitle2() {
    return title2;
}
void
OAIBTWorkspacePartParams::setTitle2(QString* title2) {
    this->title2 = title2;
    this->m_title2_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getTitle3() {
    return title3;
}
void
OAIBTWorkspacePartParams::setTitle3(QString* title3) {
    this->title3 = title3;
    this->m_title3_isSet = true;
}

QString*
OAIBTWorkspacePartParams::getVendor() {
    return vendor;
}
void
OAIBTWorkspacePartParams::setVendor(QString* vendor) {
    this->vendor = vendor;
    this->m_vendor_isSet = true;
}


bool
OAIBTWorkspacePartParams::isSet(){
    bool isObjectUpdated = false;
    do{
        if(appearance != nullptr && appearance->isSet()){ isObjectUpdated = true; break;}
        if(m_apply_update_to_all_configurations_isSet){ isObjectUpdated = true; break;}
        if(configuration != nullptr && *configuration != QString("")){ isObjectUpdated = true; break;}
        if(connection_id != nullptr && *connection_id != QString("")){ isObjectUpdated = true; break;}
        if(custom_properties->size() > 0){ isObjectUpdated = true; break;}
        if(custom_property_definitions->size() > 0){ isObjectUpdated = true; break;}
        if(description != nullptr && *description != QString("")){ isObjectUpdated = true; break;}
        if(element_id != nullptr && *element_id != QString("")){ isObjectUpdated = true; break;}
        if(material != nullptr && material->isSet()){ isObjectUpdated = true; break;}
        if(name != nullptr && *name != QString("")){ isObjectUpdated = true; break;}
        if(part_id != nullptr && *part_id != QString("")){ isObjectUpdated = true; break;}
        if(part_number != nullptr && *part_number != QString("")){ isObjectUpdated = true; break;}
        if(product_line != nullptr && *product_line != QString("")){ isObjectUpdated = true; break;}
        if(project != nullptr && *project != QString("")){ isObjectUpdated = true; break;}
        if(revision != nullptr && *revision != QString("")){ isObjectUpdated = true; break;}
        if(title1 != nullptr && *title1 != QString("")){ isObjectUpdated = true; break;}
        if(title2 != nullptr && *title2 != QString("")){ isObjectUpdated = true; break;}
        if(title3 != nullptr && *title3 != QString("")){ isObjectUpdated = true; break;}
        if(vendor != nullptr && *vendor != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

