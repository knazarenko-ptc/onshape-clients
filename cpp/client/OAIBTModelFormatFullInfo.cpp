/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTModelFormatFullInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTModelFormatFullInfo::OAIBTModelFormatFullInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTModelFormatFullInfo::OAIBTModelFormatFullInfo() {
    init();
}

OAIBTModelFormatFullInfo::~OAIBTModelFormatFullInfo() {
    this->cleanup();
}

void
OAIBTModelFormatFullInfo::init() {
    could_be_assembly = false;
    m_could_be_assembly_isSet = false;
    name = new QString("");
    m_name_isSet = false;
    translator_name = new QString("");
    m_translator_name_isSet = false;
    valid_destination_format = false;
    m_valid_destination_format_isSet = false;
    valid_source_format = false;
    m_valid_source_format_isSet = false;
}

void
OAIBTModelFormatFullInfo::cleanup() {

    if(name != nullptr) { 
        delete name;
    }
    if(translator_name != nullptr) { 
        delete translator_name;
    }


}

OAIBTModelFormatFullInfo*
OAIBTModelFormatFullInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTModelFormatFullInfo::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&could_be_assembly, pJson["couldBeAssembly"], "bool", "");
    
    ::OpenAPI::setValue(&name, pJson["name"], "QString", "QString");
    
    ::OpenAPI::setValue(&translator_name, pJson["translatorName"], "QString", "QString");
    
    ::OpenAPI::setValue(&valid_destination_format, pJson["validDestinationFormat"], "bool", "");
    
    ::OpenAPI::setValue(&valid_source_format, pJson["validSourceFormat"], "bool", "");
    
}

QString
OAIBTModelFormatFullInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTModelFormatFullInfo::asJsonObject() {
    QJsonObject obj;
    if(m_could_be_assembly_isSet){
        obj.insert("couldBeAssembly", QJsonValue(could_be_assembly));
    }
    if(name != nullptr && *name != QString("")){
        toJsonValue(QString("name"), name, obj, QString("QString"));
    }
    if(translator_name != nullptr && *translator_name != QString("")){
        toJsonValue(QString("translatorName"), translator_name, obj, QString("QString"));
    }
    if(m_valid_destination_format_isSet){
        obj.insert("validDestinationFormat", QJsonValue(valid_destination_format));
    }
    if(m_valid_source_format_isSet){
        obj.insert("validSourceFormat", QJsonValue(valid_source_format));
    }

    return obj;
}

bool
OAIBTModelFormatFullInfo::isCouldBeAssembly() {
    return could_be_assembly;
}
void
OAIBTModelFormatFullInfo::setCouldBeAssembly(bool could_be_assembly) {
    this->could_be_assembly = could_be_assembly;
    this->m_could_be_assembly_isSet = true;
}

QString*
OAIBTModelFormatFullInfo::getName() {
    return name;
}
void
OAIBTModelFormatFullInfo::setName(QString* name) {
    this->name = name;
    this->m_name_isSet = true;
}

QString*
OAIBTModelFormatFullInfo::getTranslatorName() {
    return translator_name;
}
void
OAIBTModelFormatFullInfo::setTranslatorName(QString* translator_name) {
    this->translator_name = translator_name;
    this->m_translator_name_isSet = true;
}

bool
OAIBTModelFormatFullInfo::isValidDestinationFormat() {
    return valid_destination_format;
}
void
OAIBTModelFormatFullInfo::setValidDestinationFormat(bool valid_destination_format) {
    this->valid_destination_format = valid_destination_format;
    this->m_valid_destination_format_isSet = true;
}

bool
OAIBTModelFormatFullInfo::isValidSourceFormat() {
    return valid_source_format;
}
void
OAIBTModelFormatFullInfo::setValidSourceFormat(bool valid_source_format) {
    this->valid_source_format = valid_source_format;
    this->m_valid_source_format_isSet = true;
}


bool
OAIBTModelFormatFullInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_could_be_assembly_isSet){ isObjectUpdated = true; break;}
        if(name != nullptr && *name != QString("")){ isObjectUpdated = true; break;}
        if(translator_name != nullptr && *translator_name != QString("")){ isObjectUpdated = true; break;}
        if(m_valid_destination_format_isSet){ isObjectUpdated = true; break;}
        if(m_valid_source_format_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

