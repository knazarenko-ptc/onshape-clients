/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTParameterLookupTableListEntry-1916.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTParameterLookupTableListEntry-1916::OAIBTParameterLookupTableListEntry-1916(QString json) {
    init();
    this->fromJson(json);
}

OAIBTParameterLookupTableListEntry-1916::OAIBTParameterLookupTableListEntry-1916() {
    init();
}

OAIBTParameterLookupTableListEntry-1916::~OAIBTParameterLookupTableListEntry-1916() {
    this->cleanup();
}

void
OAIBTParameterLookupTableListEntry-1916::init() {
    additional_localized_strings = 0;
    m_additional_localized_strings_isSet = false;
    bt_type = new QString("");
    m_bt_type_isSet = false;
    default_index = 0;
    m_default_index_isSet = false;
    display_name = new QString("");
    m_display_name_isSet = false;
    entries = new QList<OAIBTParameterLookupTableEntry-1667*>();
    m_entries_isSet = false;
    label = new QString("");
    m_label_isSet = false;
    localizable_name = new QString("");
    m_localizable_name_isSet = false;
    localized_label = new QString("");
    m_localized_label_isSet = false;
    localized_name = new QString("");
    m_localized_name_isSet = false;
    name = new QString("");
    m_name_isSet = false;
    strings_to_localize = new QList<QString*>();
    m_strings_to_localize_isSet = false;
}

void
OAIBTParameterLookupTableListEntry-1916::cleanup() {

    if(bt_type != nullptr) { 
        delete bt_type;
    }

    if(display_name != nullptr) { 
        delete display_name;
    }
    if(entries != nullptr) { 
        auto arr = entries;
        for(auto o: *arr) { 
            delete o;
        }
        delete entries;
    }
    if(label != nullptr) { 
        delete label;
    }
    if(localizable_name != nullptr) { 
        delete localizable_name;
    }
    if(localized_label != nullptr) { 
        delete localized_label;
    }
    if(localized_name != nullptr) { 
        delete localized_name;
    }
    if(name != nullptr) { 
        delete name;
    }
    if(strings_to_localize != nullptr) { 
        auto arr = strings_to_localize;
        for(auto o: *arr) { 
            delete o;
        }
        delete strings_to_localize;
    }
}

OAIBTParameterLookupTableListEntry-1916*
OAIBTParameterLookupTableListEntry-1916::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTParameterLookupTableListEntry-1916::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&additional_localized_strings, pJson["additionalLocalizedStrings"], "qint32", "");
    
    ::OpenAPI::setValue(&bt_type, pJson["btType"], "QString", "QString");
    
    ::OpenAPI::setValue(&default_index, pJson["defaultIndex"], "qint32", "");
    
    ::OpenAPI::setValue(&display_name, pJson["displayName"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&entries, pJson["entries"], "QList", "OAIBTParameterLookupTableEntry-1667");
    ::OpenAPI::setValue(&label, pJson["label"], "QString", "QString");
    
    ::OpenAPI::setValue(&localizable_name, pJson["localizableName"], "QString", "QString");
    
    ::OpenAPI::setValue(&localized_label, pJson["localizedLabel"], "QString", "QString");
    
    ::OpenAPI::setValue(&localized_name, pJson["localizedName"], "QString", "QString");
    
    ::OpenAPI::setValue(&name, pJson["name"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&strings_to_localize, pJson["stringsToLocalize"], "QList", "QString");
}

QString
OAIBTParameterLookupTableListEntry-1916::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTParameterLookupTableListEntry-1916::asJsonObject() {
    QJsonObject obj;
    if(m_additional_localized_strings_isSet){
        obj.insert("additionalLocalizedStrings", QJsonValue(additional_localized_strings));
    }
    if(bt_type != nullptr && *bt_type != QString("")){
        toJsonValue(QString("btType"), bt_type, obj, QString("QString"));
    }
    if(m_default_index_isSet){
        obj.insert("defaultIndex", QJsonValue(default_index));
    }
    if(display_name != nullptr && *display_name != QString("")){
        toJsonValue(QString("displayName"), display_name, obj, QString("QString"));
    }
    if(entries->size() > 0){
        toJsonArray((QList<void*>*)entries, obj, "entries", "OAIBTParameterLookupTableEntry-1667");
    }
    if(label != nullptr && *label != QString("")){
        toJsonValue(QString("label"), label, obj, QString("QString"));
    }
    if(localizable_name != nullptr && *localizable_name != QString("")){
        toJsonValue(QString("localizableName"), localizable_name, obj, QString("QString"));
    }
    if(localized_label != nullptr && *localized_label != QString("")){
        toJsonValue(QString("localizedLabel"), localized_label, obj, QString("QString"));
    }
    if(localized_name != nullptr && *localized_name != QString("")){
        toJsonValue(QString("localizedName"), localized_name, obj, QString("QString"));
    }
    if(name != nullptr && *name != QString("")){
        toJsonValue(QString("name"), name, obj, QString("QString"));
    }
    if(strings_to_localize->size() > 0){
        toJsonArray((QList<void*>*)strings_to_localize, obj, "stringsToLocalize", "QString");
    }

    return obj;
}

qint32
OAIBTParameterLookupTableListEntry-1916::getAdditionalLocalizedStrings() {
    return additional_localized_strings;
}
void
OAIBTParameterLookupTableListEntry-1916::setAdditionalLocalizedStrings(qint32 additional_localized_strings) {
    this->additional_localized_strings = additional_localized_strings;
    this->m_additional_localized_strings_isSet = true;
}

QString*
OAIBTParameterLookupTableListEntry-1916::getBtType() {
    return bt_type;
}
void
OAIBTParameterLookupTableListEntry-1916::setBtType(QString* bt_type) {
    this->bt_type = bt_type;
    this->m_bt_type_isSet = true;
}

qint32
OAIBTParameterLookupTableListEntry-1916::getDefaultIndex() {
    return default_index;
}
void
OAIBTParameterLookupTableListEntry-1916::setDefaultIndex(qint32 default_index) {
    this->default_index = default_index;
    this->m_default_index_isSet = true;
}

QString*
OAIBTParameterLookupTableListEntry-1916::getDisplayName() {
    return display_name;
}
void
OAIBTParameterLookupTableListEntry-1916::setDisplayName(QString* display_name) {
    this->display_name = display_name;
    this->m_display_name_isSet = true;
}

QList<OAIBTParameterLookupTableEntry-1667*>*
OAIBTParameterLookupTableListEntry-1916::getEntries() {
    return entries;
}
void
OAIBTParameterLookupTableListEntry-1916::setEntries(QList<OAIBTParameterLookupTableEntry-1667*>* entries) {
    this->entries = entries;
    this->m_entries_isSet = true;
}

QString*
OAIBTParameterLookupTableListEntry-1916::getLabel() {
    return label;
}
void
OAIBTParameterLookupTableListEntry-1916::setLabel(QString* label) {
    this->label = label;
    this->m_label_isSet = true;
}

QString*
OAIBTParameterLookupTableListEntry-1916::getLocalizableName() {
    return localizable_name;
}
void
OAIBTParameterLookupTableListEntry-1916::setLocalizableName(QString* localizable_name) {
    this->localizable_name = localizable_name;
    this->m_localizable_name_isSet = true;
}

QString*
OAIBTParameterLookupTableListEntry-1916::getLocalizedLabel() {
    return localized_label;
}
void
OAIBTParameterLookupTableListEntry-1916::setLocalizedLabel(QString* localized_label) {
    this->localized_label = localized_label;
    this->m_localized_label_isSet = true;
}

QString*
OAIBTParameterLookupTableListEntry-1916::getLocalizedName() {
    return localized_name;
}
void
OAIBTParameterLookupTableListEntry-1916::setLocalizedName(QString* localized_name) {
    this->localized_name = localized_name;
    this->m_localized_name_isSet = true;
}

QString*
OAIBTParameterLookupTableListEntry-1916::getName() {
    return name;
}
void
OAIBTParameterLookupTableListEntry-1916::setName(QString* name) {
    this->name = name;
    this->m_name_isSet = true;
}

QList<QString*>*
OAIBTParameterLookupTableListEntry-1916::getStringsToLocalize() {
    return strings_to_localize;
}
void
OAIBTParameterLookupTableListEntry-1916::setStringsToLocalize(QList<QString*>* strings_to_localize) {
    this->strings_to_localize = strings_to_localize;
    this->m_strings_to_localize_isSet = true;
}


bool
OAIBTParameterLookupTableListEntry-1916::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_additional_localized_strings_isSet){ isObjectUpdated = true; break;}
        if(bt_type != nullptr && *bt_type != QString("")){ isObjectUpdated = true; break;}
        if(m_default_index_isSet){ isObjectUpdated = true; break;}
        if(display_name != nullptr && *display_name != QString("")){ isObjectUpdated = true; break;}
        if(entries->size() > 0){ isObjectUpdated = true; break;}
        if(label != nullptr && *label != QString("")){ isObjectUpdated = true; break;}
        if(localizable_name != nullptr && *localizable_name != QString("")){ isObjectUpdated = true; break;}
        if(localized_label != nullptr && *localized_label != QString("")){ isObjectUpdated = true; break;}
        if(localized_name != nullptr && *localized_name != QString("")){ isObjectUpdated = true; break;}
        if(name != nullptr && *name != QString("")){ isObjectUpdated = true; break;}
        if(strings_to_localize->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

