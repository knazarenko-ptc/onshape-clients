/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTRevisionApproverInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTRevisionApproverInfo::OAIBTRevisionApproverInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTRevisionApproverInfo::OAIBTRevisionApproverInfo() {
    init();
}

OAIBTRevisionApproverInfo::~OAIBTRevisionApproverInfo() {
    this->cleanup();
}

void
OAIBTRevisionApproverInfo::init() {
    date = NULL;
    m_date_isSet = false;
    id = new QString("");
    m_id_isSet = false;
    name = new QString("");
    m_name_isSet = false;
}

void
OAIBTRevisionApproverInfo::cleanup() {
    if(date != nullptr) { 
        delete date;
    }
    if(id != nullptr) { 
        delete id;
    }
    if(name != nullptr) { 
        delete name;
    }
}

OAIBTRevisionApproverInfo*
OAIBTRevisionApproverInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTRevisionApproverInfo::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&date, pJson["date"], "QDateTime", "QDateTime");
    
    ::OpenAPI::setValue(&id, pJson["id"], "QString", "QString");
    
    ::OpenAPI::setValue(&name, pJson["name"], "QString", "QString");
    
}

QString
OAIBTRevisionApproverInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTRevisionApproverInfo::asJsonObject() {
    QJsonObject obj;
    if(date != nullptr) { 
        toJsonValue(QString("date"), date, obj, QString("QDateTime"));
    }
    if(id != nullptr && *id != QString("")){
        toJsonValue(QString("id"), id, obj, QString("QString"));
    }
    if(name != nullptr && *name != QString("")){
        toJsonValue(QString("name"), name, obj, QString("QString"));
    }

    return obj;
}

QDateTime*
OAIBTRevisionApproverInfo::getDate() {
    return date;
}
void
OAIBTRevisionApproverInfo::setDate(QDateTime* date) {
    this->date = date;
    this->m_date_isSet = true;
}

QString*
OAIBTRevisionApproverInfo::getId() {
    return id;
}
void
OAIBTRevisionApproverInfo::setId(QString* id) {
    this->id = id;
    this->m_id_isSet = true;
}

QString*
OAIBTRevisionApproverInfo::getName() {
    return name;
}
void
OAIBTRevisionApproverInfo::setName(QString* name) {
    this->name = name;
    this->m_name_isSet = true;
}


bool
OAIBTRevisionApproverInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(id != nullptr && *id != QString("")){ isObjectUpdated = true; break;}
        if(name != nullptr && *name != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

