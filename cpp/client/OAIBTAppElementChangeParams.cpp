/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTAppElementChangeParams.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTAppElementChangeParams::OAIBTAppElementChangeParams(QString json) {
    init();
    this->fromJson(json);
}

OAIBTAppElementChangeParams::OAIBTAppElementChangeParams() {
    init();
}

OAIBTAppElementChangeParams::~OAIBTAppElementChangeParams() {
    this->cleanup();
}

void
OAIBTAppElementChangeParams::init() {
    base_content = new QString("");
    m_base_content_isSet = false;
    delta = new QString("");
    m_delta_isSet = false;
    subelement_id = new QString("");
    m_subelement_id_isSet = false;
}

void
OAIBTAppElementChangeParams::cleanup() {
    if(base_content != nullptr) { 
        delete base_content;
    }
    if(delta != nullptr) { 
        delete delta;
    }
    if(subelement_id != nullptr) { 
        delete subelement_id;
    }
}

OAIBTAppElementChangeParams*
OAIBTAppElementChangeParams::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTAppElementChangeParams::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&base_content, pJson["baseContent"], "QString", "QString");
    
    ::OpenAPI::setValue(&delta, pJson["delta"], "QString", "QString");
    
    ::OpenAPI::setValue(&subelement_id, pJson["subelementId"], "QString", "QString");
    
}

QString
OAIBTAppElementChangeParams::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTAppElementChangeParams::asJsonObject() {
    QJsonObject obj;
    if(base_content != nullptr && *base_content != QString("")){
        toJsonValue(QString("baseContent"), base_content, obj, QString("QString"));
    }
    if(delta != nullptr && *delta != QString("")){
        toJsonValue(QString("delta"), delta, obj, QString("QString"));
    }
    if(subelement_id != nullptr && *subelement_id != QString("")){
        toJsonValue(QString("subelementId"), subelement_id, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIBTAppElementChangeParams::getBaseContent() {
    return base_content;
}
void
OAIBTAppElementChangeParams::setBaseContent(QString* base_content) {
    this->base_content = base_content;
    this->m_base_content_isSet = true;
}

QString*
OAIBTAppElementChangeParams::getDelta() {
    return delta;
}
void
OAIBTAppElementChangeParams::setDelta(QString* delta) {
    this->delta = delta;
    this->m_delta_isSet = true;
}

QString*
OAIBTAppElementChangeParams::getSubelementId() {
    return subelement_id;
}
void
OAIBTAppElementChangeParams::setSubelementId(QString* subelement_id) {
    this->subelement_id = subelement_id;
    this->m_subelement_id_isSet = true;
}


bool
OAIBTAppElementChangeParams::isSet(){
    bool isObjectUpdated = false;
    do{
        if(base_content != nullptr && *base_content != QString("")){ isObjectUpdated = true; break;}
        if(delta != nullptr && *delta != QString("")){ isObjectUpdated = true; break;}
        if(subelement_id != nullptr && *subelement_id != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

