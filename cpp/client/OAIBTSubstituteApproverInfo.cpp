/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTSubstituteApproverInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTSubstituteApproverInfo::OAIBTSubstituteApproverInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTSubstituteApproverInfo::OAIBTSubstituteApproverInfo() {
    init();
}

OAIBTSubstituteApproverInfo::~OAIBTSubstituteApproverInfo() {
    this->cleanup();
}

void
OAIBTSubstituteApproverInfo::init() {
    company_id = new QString("");
    m_company_id_isSet = false;
    enabled = false;
    m_enabled_isSet = false;
    identity = new OAIBTIdentityInfo();
    m_identity_isSet = false;
}

void
OAIBTSubstituteApproverInfo::cleanup() {
    if(company_id != nullptr) { 
        delete company_id;
    }

    if(identity != nullptr) { 
        delete identity;
    }
}

OAIBTSubstituteApproverInfo*
OAIBTSubstituteApproverInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTSubstituteApproverInfo::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&company_id, pJson["companyId"], "QString", "QString");
    
    ::OpenAPI::setValue(&enabled, pJson["enabled"], "bool", "");
    
    ::OpenAPI::setValue(&identity, pJson["identity"], "OAIBTIdentityInfo", "OAIBTIdentityInfo");
    
}

QString
OAIBTSubstituteApproverInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTSubstituteApproverInfo::asJsonObject() {
    QJsonObject obj;
    if(company_id != nullptr && *company_id != QString("")){
        toJsonValue(QString("companyId"), company_id, obj, QString("QString"));
    }
    if(m_enabled_isSet){
        obj.insert("enabled", QJsonValue(enabled));
    }
    if((identity != nullptr) && (identity->isSet())){
        toJsonValue(QString("identity"), identity, obj, QString("OAIBTIdentityInfo"));
    }

    return obj;
}

QString*
OAIBTSubstituteApproverInfo::getCompanyId() {
    return company_id;
}
void
OAIBTSubstituteApproverInfo::setCompanyId(QString* company_id) {
    this->company_id = company_id;
    this->m_company_id_isSet = true;
}

bool
OAIBTSubstituteApproverInfo::isEnabled() {
    return enabled;
}
void
OAIBTSubstituteApproverInfo::setEnabled(bool enabled) {
    this->enabled = enabled;
    this->m_enabled_isSet = true;
}

OAIBTIdentityInfo*
OAIBTSubstituteApproverInfo::getIdentity() {
    return identity;
}
void
OAIBTSubstituteApproverInfo::setIdentity(OAIBTIdentityInfo* identity) {
    this->identity = identity;
    this->m_identity_isSet = true;
}


bool
OAIBTSubstituteApproverInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(company_id != nullptr && *company_id != QString("")){ isObjectUpdated = true; break;}
        if(m_enabled_isSet){ isObjectUpdated = true; break;}
        if(identity != nullptr && identity->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

