/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTReleasePackageInfo.h
 *
 * 
 */

#ifndef OAIBTReleasePackageInfo_H_
#define OAIBTReleasePackageInfo_H_

#include <QJsonObject>


#include "OAIBTCommentInfo.h"
#include "OAIBTPublishedWorkflowId.h"
#include "OAIBTReleaseCommentListInfo.h"
#include "OAIBTReleasePackageItemInfo.h"
#include "OAIBTWorkflowPropertyInfo.h"
#include "OAIBTWorkflowSnapshotInfo.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTReleasePackageInfo: public OAIObject {
public:
    OAIBTReleasePackageInfo();
    OAIBTReleasePackageInfo(QString json);
    ~OAIBTReleasePackageInfo();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTReleasePackageInfo* fromJson(QString jsonString) override;

    QMap<QString, QString*>* getColumnNames();
    void setColumnNames(QMap<QString, QString*>* column_names);

    QList<OAIBTCommentInfo*>* getComments();
    void setComments(QList<OAIBTCommentInfo*>* comments);

    QString* getCompanyId();
    void setCompanyId(QString* company_id);

    QString* getDescription();
    void setDescription(QString* description);

    QString* getDescriptionAsProperty();
    void setDescriptionAsProperty(QString* description_as_property);

    bool isDetailed();
    void setDetailed(bool detailed);

    QString* getDocumentId();
    void setDocumentId(QString* document_id);

    QString* getHref();
    void setHref(QString* href);

    QString* getId();
    void setId(QString* id);

    bool isIsObsoletion();
    void setIsObsoletion(bool is_obsoletion);

    QList<OAIBTReleasePackageItemInfo*>* getItems();
    void setItems(QList<OAIBTReleasePackageItemInfo*>* items);

    QList<QString*>* getLinkedVersionIds();
    void setLinkedVersionIds(QList<QString*>* linked_version_ids);

    QString* getName();
    void setName(QString* name);

    QString* getNameAsProperty();
    void setNameAsProperty(QString* name_as_property);

    QString* getPackageThumbnail();
    void setPackageThumbnail(QString* package_thumbnail);

    QList<OAIBTReleaseCommentListInfo*>* getParentComments();
    void setParentComments(QList<OAIBTReleaseCommentListInfo*>* parent_comments);

    QList<QString*>* getParentPackages();
    void setParentPackages(QList<QString*>* parent_packages);

    QList<OAIBTWorkflowPropertyInfo*>* getProperties();
    void setProperties(QList<OAIBTWorkflowPropertyInfo*>* properties);

    QString* getRevisionRuleId();
    void setRevisionRuleId(QString* revision_rule_id);

    QString* getVersionId();
    void setVersionId(QString* version_id);

    QString* getViewRef();
    void setViewRef(QString* view_ref);

    OAIBTWorkflowSnapshotInfo* getWorkflow();
    void setWorkflow(OAIBTWorkflowSnapshotInfo* workflow);

    OAIBTPublishedWorkflowId* getWorkflowId();
    void setWorkflowId(OAIBTPublishedWorkflowId* workflow_id);

    QString* getWorkspaceId();
    void setWorkspaceId(QString* workspace_id);


    virtual bool isSet() override;

private:
    QMap<QString, QString*>* column_names;
    bool m_column_names_isSet;

    QList<OAIBTCommentInfo*>* comments;
    bool m_comments_isSet;

    QString* company_id;
    bool m_company_id_isSet;

    QString* description;
    bool m_description_isSet;

    QString* description_as_property;
    bool m_description_as_property_isSet;

    bool detailed;
    bool m_detailed_isSet;

    QString* document_id;
    bool m_document_id_isSet;

    QString* href;
    bool m_href_isSet;

    QString* id;
    bool m_id_isSet;

    bool is_obsoletion;
    bool m_is_obsoletion_isSet;

    QList<OAIBTReleasePackageItemInfo*>* items;
    bool m_items_isSet;

    QList<QString*>* linked_version_ids;
    bool m_linked_version_ids_isSet;

    QString* name;
    bool m_name_isSet;

    QString* name_as_property;
    bool m_name_as_property_isSet;

    QString* package_thumbnail;
    bool m_package_thumbnail_isSet;

    QList<OAIBTReleaseCommentListInfo*>* parent_comments;
    bool m_parent_comments_isSet;

    QList<QString*>* parent_packages;
    bool m_parent_packages_isSet;

    QList<OAIBTWorkflowPropertyInfo*>* properties;
    bool m_properties_isSet;

    QString* revision_rule_id;
    bool m_revision_rule_id_isSet;

    QString* version_id;
    bool m_version_id_isSet;

    QString* view_ref;
    bool m_view_ref_isSet;

    OAIBTWorkflowSnapshotInfo* workflow;
    bool m_workflow_isSet;

    OAIBTPublishedWorkflowId* workflow_id;
    bool m_workflow_id_isSet;

    QString* workspace_id;
    bool m_workspace_id_isSet;

};

}

#endif /* OAIBTReleasePackageInfo_H_ */
