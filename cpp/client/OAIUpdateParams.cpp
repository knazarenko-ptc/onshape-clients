/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIUpdateParams.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIUpdateParams::OAIUpdateParams(QString json) {
    init();
    this->fromJson(json);
}

OAIUpdateParams::OAIUpdateParams() {
    init();
}

OAIUpdateParams::~OAIUpdateParams() {
    this->cleanup();
}

void
OAIUpdateParams::init() {
    from_reference = new OAIBTUniqueDocumentItemParams();
    m_from_reference_isSet = false;
    ids_to_update = new QList<QString*>();
    m_ids_to_update_isSet = false;
    to_reference = new OAIBTUniqueDocumentItemParams();
    m_to_reference_isSet = false;
}

void
OAIUpdateParams::cleanup() {
    if(from_reference != nullptr) { 
        delete from_reference;
    }
    if(ids_to_update != nullptr) { 
        auto arr = ids_to_update;
        for(auto o: *arr) { 
            delete o;
        }
        delete ids_to_update;
    }
    if(to_reference != nullptr) { 
        delete to_reference;
    }
}

OAIUpdateParams*
OAIUpdateParams::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIUpdateParams::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&from_reference, pJson["fromReference"], "OAIBTUniqueDocumentItemParams", "OAIBTUniqueDocumentItemParams");
    
    
    ::OpenAPI::setValue(&ids_to_update, pJson["idsToUpdate"], "QList", "QString");
    ::OpenAPI::setValue(&to_reference, pJson["toReference"], "OAIBTUniqueDocumentItemParams", "OAIBTUniqueDocumentItemParams");
    
}

QString
OAIUpdateParams::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIUpdateParams::asJsonObject() {
    QJsonObject obj;
    if((from_reference != nullptr) && (from_reference->isSet())){
        toJsonValue(QString("fromReference"), from_reference, obj, QString("OAIBTUniqueDocumentItemParams"));
    }
    if(ids_to_update->size() > 0){
        toJsonArray((QList<void*>*)ids_to_update, obj, "idsToUpdate", "QString");
    }
    if((to_reference != nullptr) && (to_reference->isSet())){
        toJsonValue(QString("toReference"), to_reference, obj, QString("OAIBTUniqueDocumentItemParams"));
    }

    return obj;
}

OAIBTUniqueDocumentItemParams*
OAIUpdateParams::getFromReference() {
    return from_reference;
}
void
OAIUpdateParams::setFromReference(OAIBTUniqueDocumentItemParams* from_reference) {
    this->from_reference = from_reference;
    this->m_from_reference_isSet = true;
}

QList<QString*>*
OAIUpdateParams::getIdsToUpdate() {
    return ids_to_update;
}
void
OAIUpdateParams::setIdsToUpdate(QList<QString*>* ids_to_update) {
    this->ids_to_update = ids_to_update;
    this->m_ids_to_update_isSet = true;
}

OAIBTUniqueDocumentItemParams*
OAIUpdateParams::getToReference() {
    return to_reference;
}
void
OAIUpdateParams::setToReference(OAIBTUniqueDocumentItemParams* to_reference) {
    this->to_reference = to_reference;
    this->m_to_reference_isSet = true;
}


bool
OAIUpdateParams::isSet(){
    bool isObjectUpdated = false;
    do{
        if(from_reference != nullptr && from_reference->isSet()){ isObjectUpdated = true; break;}
        if(ids_to_update->size() > 0){ isObjectUpdated = true; break;}
        if(to_reference != nullptr && to_reference->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

