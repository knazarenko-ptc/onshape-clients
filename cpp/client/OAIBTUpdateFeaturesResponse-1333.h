/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTUpdateFeaturesResponse-1333.h
 *
 * 
 */

#ifndef OAIBTUpdateFeaturesResponse-1333_H_
#define OAIBTUpdateFeaturesResponse-1333_H_

#include <QJsonObject>


#include "OAIBTFeatureApiBase-1430.h"
#include "OAIBTFeatureState-1688.h"
#include "OAIBTMFeature-134.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTUpdateFeaturesResponse-1333: public OAIObject {
public:
    OAIBTUpdateFeaturesResponse-1333();
    OAIBTUpdateFeaturesResponse-1333(QString json);
    ~OAIBTUpdateFeaturesResponse-1333();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTUpdateFeaturesResponse-1333* fromJson(QString jsonString) override;

    QString* getBtType();
    void setBtType(QString* bt_type);

    qint32 getLibraryVersion();
    void setLibraryVersion(qint32 library_version);

    bool isMicroversionSkew();
    void setMicroversionSkew(bool microversion_skew);

    bool isRejectMicroversionSkew();
    void setRejectMicroversionSkew(bool reject_microversion_skew);

    QString* getSerializationVersion();
    void setSerializationVersion(QString* serialization_version);

    QString* getSourceMicroversion();
    void setSourceMicroversion(QString* source_microversion);

    QList<OAIBTMFeature-134*>* getFeatures();
    void setFeatures(QList<OAIBTMFeature-134*>* features);

    QMap<QString, OAIBTFeatureState-1688*>* getFeatureStates();
    void setFeatureStates(QMap<QString, OAIBTFeatureState-1688*>* feature_states);


    virtual bool isSet() override;

private:
    QString* bt_type;
    bool m_bt_type_isSet;

    qint32 library_version;
    bool m_library_version_isSet;

    bool microversion_skew;
    bool m_microversion_skew_isSet;

    bool reject_microversion_skew;
    bool m_reject_microversion_skew_isSet;

    QString* serialization_version;
    bool m_serialization_version_isSet;

    QString* source_microversion;
    bool m_source_microversion_isSet;

    QList<OAIBTMFeature-134*>* features;
    bool m_features_isSet;

    QMap<QString, OAIBTFeatureState-1688*>* feature_states;
    bool m_feature_states_isSet;

};

}

#endif /* OAIBTUpdateFeaturesResponse-1333_H_ */
