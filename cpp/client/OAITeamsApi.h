/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef _OAI_OAITeamsApi_H_
#define _OAI_OAITeamsApi_H_

#include "OAIHttpRequest.h"

#include "OAIBTGlobalTreeNodeListResponseBTTeamInfo.h"
#include "OAIBTTeamInfo.h"
#include <QString>

#include <QObject>

namespace OpenAPI {

class OAITeamsApi: public QObject {
    Q_OBJECT

public:
    OAITeamsApi();
    OAITeamsApi(QString host, QString basePath);
    ~OAITeamsApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void find(QString* prefix, QString* uid, QString* company_id, bool include_company_owned_teams);
    void getTeam(QString* tid);
    
private:
    void findCallback (OAIHttpRequestWorker * worker);
    void getTeamCallback (OAIHttpRequestWorker * worker);
    
signals:
    void findSignal(OAIBTGlobalTreeNodeListResponseBTTeamInfo* summary);
    void getTeamSignal(OAIBTTeamInfo* summary);
    
    void findSignalE(OAIBTGlobalTreeNodeListResponseBTTeamInfo* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void getTeamSignalE(OAIBTTeamInfo* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    
    void findSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void getTeamSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
