/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTRootDiffInfo.h
 *
 * 
 */

#ifndef OAIBTRootDiffInfo_H_
#define OAIBTRootDiffInfo_H_

#include <QJsonObject>


#include "OAIBTDiffInfo.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTRootDiffInfo: public OAIObject {
public:
    OAIBTRootDiffInfo();
    OAIBTRootDiffInfo(QString json);
    ~OAIBTRootDiffInfo();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTRootDiffInfo* fromJson(QString jsonString) override;

    QMap<QString, OAIBTDiffInfo*>* getChanges();
    void setChanges(QMap<QString, OAIBTDiffInfo*>* changes);

    QMap<QString, QList<OAIBTDiffInfo*>*>* getCollectionChanges();
    void setCollectionChanges(QMap<QString, QList<OAIBTDiffInfo*>*>* collection_changes);

    QString* getEntityType();
    void setEntityType(QString* entity_type);

    QList<QString*>* getGeometryChangeMessages();
    void setGeometryChangeMessages(QList<QString*>* geometry_change_messages);

    QString* getSourceConfiguration();
    void setSourceConfiguration(QString* source_configuration);

    QString* getSourceId();
    void setSourceId(QString* source_id);

    QString* getSourceMicroversionId();
    void setSourceMicroversionId(QString* source_microversion_id);

    QString* getSourceValue();
    void setSourceValue(QString* source_value);

    QString* getSourceVersionId();
    void setSourceVersionId(QString* source_version_id);

    QString* getSourceWorkspaceId();
    void setSourceWorkspaceId(QString* source_workspace_id);

    QString* getTargetConfiguration();
    void setTargetConfiguration(QString* target_configuration);

    QString* getTargetId();
    void setTargetId(QString* target_id);

    QString* getTargetMicroversionId();
    void setTargetMicroversionId(QString* target_microversion_id);

    QString* getTargetValue();
    void setTargetValue(QString* target_value);

    QString* getTargetVersionId();
    void setTargetVersionId(QString* target_version_id);

    QString* getTargetWorkspaceId();
    void setTargetWorkspaceId(QString* target_workspace_id);

    QString* getType();
    void setType(QString* type);


    virtual bool isSet() override;

private:
    QMap<QString, OAIBTDiffInfo*>* changes;
    bool m_changes_isSet;

    QMap<QString, QList<OAIBTDiffInfo*>*>* collection_changes;
    bool m_collection_changes_isSet;

    QString* entity_type;
    bool m_entity_type_isSet;

    QList<QString*>* geometry_change_messages;
    bool m_geometry_change_messages_isSet;

    QString* source_configuration;
    bool m_source_configuration_isSet;

    QString* source_id;
    bool m_source_id_isSet;

    QString* source_microversion_id;
    bool m_source_microversion_id_isSet;

    QString* source_value;
    bool m_source_value_isSet;

    QString* source_version_id;
    bool m_source_version_id_isSet;

    QString* source_workspace_id;
    bool m_source_workspace_id_isSet;

    QString* target_configuration;
    bool m_target_configuration_isSet;

    QString* target_id;
    bool m_target_id_isSet;

    QString* target_microversion_id;
    bool m_target_microversion_id_isSet;

    QString* target_value;
    bool m_target_value_isSet;

    QString* target_version_id;
    bool m_target_version_id_isSet;

    QString* target_workspace_id;
    bool m_target_workspace_id_isSet;

    QString* type;
    bool m_type_isSet;

};

}

#endif /* OAIBTRootDiffInfo_H_ */
