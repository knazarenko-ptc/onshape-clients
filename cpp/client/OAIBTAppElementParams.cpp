/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTAppElementParams.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTAppElementParams::OAIBTAppElementParams(QString json) {
    init();
    this->fromJson(json);
}

OAIBTAppElementParams::OAIBTAppElementParams() {
    init();
}

OAIBTAppElementParams::~OAIBTAppElementParams() {
    this->cleanup();
}

void
OAIBTAppElementParams::init() {
    description = new QString("");
    m_description_isSet = false;
    format_id = new QString("");
    m_format_id_isSet = false;
    location = new OAIBTElementLocationParams();
    m_location_isSet = false;
    name = new QString("");
    m_name_isSet = false;
    subelements = new QList<OAIBTAppElementChangeParams*>();
    m_subelements_isSet = false;
}

void
OAIBTAppElementParams::cleanup() {
    if(description != nullptr) { 
        delete description;
    }
    if(format_id != nullptr) { 
        delete format_id;
    }
    if(location != nullptr) { 
        delete location;
    }
    if(name != nullptr) { 
        delete name;
    }
    if(subelements != nullptr) { 
        auto arr = subelements;
        for(auto o: *arr) { 
            delete o;
        }
        delete subelements;
    }
}

OAIBTAppElementParams*
OAIBTAppElementParams::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTAppElementParams::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&description, pJson["description"], "QString", "QString");
    
    ::OpenAPI::setValue(&format_id, pJson["formatId"], "QString", "QString");
    
    ::OpenAPI::setValue(&location, pJson["location"], "OAIBTElementLocationParams", "OAIBTElementLocationParams");
    
    ::OpenAPI::setValue(&name, pJson["name"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&subelements, pJson["subelements"], "QList", "OAIBTAppElementChangeParams");
}

QString
OAIBTAppElementParams::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTAppElementParams::asJsonObject() {
    QJsonObject obj;
    if(description != nullptr && *description != QString("")){
        toJsonValue(QString("description"), description, obj, QString("QString"));
    }
    if(format_id != nullptr && *format_id != QString("")){
        toJsonValue(QString("formatId"), format_id, obj, QString("QString"));
    }
    if((location != nullptr) && (location->isSet())){
        toJsonValue(QString("location"), location, obj, QString("OAIBTElementLocationParams"));
    }
    if(name != nullptr && *name != QString("")){
        toJsonValue(QString("name"), name, obj, QString("QString"));
    }
    if(subelements->size() > 0){
        toJsonArray((QList<void*>*)subelements, obj, "subelements", "OAIBTAppElementChangeParams");
    }

    return obj;
}

QString*
OAIBTAppElementParams::getDescription() {
    return description;
}
void
OAIBTAppElementParams::setDescription(QString* description) {
    this->description = description;
    this->m_description_isSet = true;
}

QString*
OAIBTAppElementParams::getFormatId() {
    return format_id;
}
void
OAIBTAppElementParams::setFormatId(QString* format_id) {
    this->format_id = format_id;
    this->m_format_id_isSet = true;
}

OAIBTElementLocationParams*
OAIBTAppElementParams::getLocation() {
    return location;
}
void
OAIBTAppElementParams::setLocation(OAIBTElementLocationParams* location) {
    this->location = location;
    this->m_location_isSet = true;
}

QString*
OAIBTAppElementParams::getName() {
    return name;
}
void
OAIBTAppElementParams::setName(QString* name) {
    this->name = name;
    this->m_name_isSet = true;
}

QList<OAIBTAppElementChangeParams*>*
OAIBTAppElementParams::getSubelements() {
    return subelements;
}
void
OAIBTAppElementParams::setSubelements(QList<OAIBTAppElementChangeParams*>* subelements) {
    this->subelements = subelements;
    this->m_subelements_isSet = true;
}


bool
OAIBTAppElementParams::isSet(){
    bool isObjectUpdated = false;
    do{
        if(description != nullptr && *description != QString("")){ isObjectUpdated = true; break;}
        if(format_id != nullptr && *format_id != QString("")){ isObjectUpdated = true; break;}
        if(location != nullptr && location->isSet()){ isObjectUpdated = true; break;}
        if(name != nullptr && *name != QString("")){ isObjectUpdated = true; break;}
        if(subelements->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

