/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTExportModelLoop-1182.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTExportModelLoop-1182::OAIBTExportModelLoop-1182(QString json) {
    init();
    this->fromJson(json);
}

OAIBTExportModelLoop-1182::OAIBTExportModelLoop-1182() {
    init();
}

OAIBTExportModelLoop-1182::~OAIBTExportModelLoop-1182() {
    this->cleanup();
}

void
OAIBTExportModelLoop-1182::init() {
    coedges = new QList<OAIBTExportModelCoedge-1342*>();
    m_coedges_isSet = false;
    is_inner = false;
    m_is_inner_isSet = false;
    is_outer = false;
    m_is_outer_isSet = false;
}

void
OAIBTExportModelLoop-1182::cleanup() {
    if(coedges != nullptr) { 
        auto arr = coedges;
        for(auto o: *arr) { 
            delete o;
        }
        delete coedges;
    }


}

OAIBTExportModelLoop-1182*
OAIBTExportModelLoop-1182::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTExportModelLoop-1182::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&coedges, pJson["coedges"], "QList", "OAIBTExportModelCoedge-1342");
    ::OpenAPI::setValue(&is_inner, pJson["isInner"], "bool", "");
    
    ::OpenAPI::setValue(&is_outer, pJson["isOuter"], "bool", "");
    
}

QString
OAIBTExportModelLoop-1182::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTExportModelLoop-1182::asJsonObject() {
    QJsonObject obj;
    if(coedges->size() > 0){
        toJsonArray((QList<void*>*)coedges, obj, "coedges", "OAIBTExportModelCoedge-1342");
    }
    if(m_is_inner_isSet){
        obj.insert("isInner", QJsonValue(is_inner));
    }
    if(m_is_outer_isSet){
        obj.insert("isOuter", QJsonValue(is_outer));
    }

    return obj;
}

QList<OAIBTExportModelCoedge-1342*>*
OAIBTExportModelLoop-1182::getCoedges() {
    return coedges;
}
void
OAIBTExportModelLoop-1182::setCoedges(QList<OAIBTExportModelCoedge-1342*>* coedges) {
    this->coedges = coedges;
    this->m_coedges_isSet = true;
}

bool
OAIBTExportModelLoop-1182::isIsInner() {
    return is_inner;
}
void
OAIBTExportModelLoop-1182::setIsInner(bool is_inner) {
    this->is_inner = is_inner;
    this->m_is_inner_isSet = true;
}

bool
OAIBTExportModelLoop-1182::isIsOuter() {
    return is_outer;
}
void
OAIBTExportModelLoop-1182::setIsOuter(bool is_outer) {
    this->is_outer = is_outer;
    this->m_is_outer_isSet = true;
}


bool
OAIBTExportModelLoop-1182::isSet(){
    bool isObjectUpdated = false;
    do{
        if(coedges->size() > 0){ isObjectUpdated = true; break;}
        if(m_is_inner_isSet){ isObjectUpdated = true; break;}
        if(m_is_outer_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

