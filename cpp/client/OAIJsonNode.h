/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJsonNode.h
 *
 * 
 */

#ifndef OAIJsonNode_H_
#define OAIJsonNode_H_

#include <QJsonObject>


#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIJsonNode: public OAIObject {
public:
    OAIJsonNode();
    OAIJsonNode(QString json);
    ~OAIJsonNode();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIJsonNode* fromJson(QString jsonString) override;

    bool isArray();
    void setArray(bool array);

    bool isBigDecimal();
    void setBigDecimal(bool big_decimal);

    bool isBigInteger();
    void setBigInteger(bool big_integer);

    bool isBinary();
    void setBinary(bool binary);

    bool isBoolean();
    void setBoolean(bool boolean);

    bool isContainerNode();
    void setContainerNode(bool container_node);

    bool isDouble();
    void setDouble(bool _double);

    bool isEmpty();
    void setEmpty(bool empty);

    bool isFloat();
    void setFloat(bool _float);

    bool isFloatingPointNumber();
    void setFloatingPointNumber(bool floating_point_number);

    bool isInt();
    void setInt(bool _int);

    bool isIntegralNumber();
    void setIntegralNumber(bool integral_number);

    bool isLong();
    void setLong(bool _long);

    bool isMissingNode();
    void setMissingNode(bool missing_node);

    QString* getNodeType();
    void setNodeType(QString* node_type);

    bool isNull();
    void setNull(bool null);

    bool isNumber();
    void setNumber(bool number);

    bool isObject();
    void setObject(bool object);

    bool isPojo();
    void setPojo(bool pojo);

    bool isShort();
    void setShort(bool _short);

    bool isTextual();
    void setTextual(bool textual);

    bool isValueNode();
    void setValueNode(bool value_node);


    virtual bool isSet() override;

private:
    bool array;
    bool m_array_isSet;

    bool big_decimal;
    bool m_big_decimal_isSet;

    bool big_integer;
    bool m_big_integer_isSet;

    bool binary;
    bool m_binary_isSet;

    bool boolean;
    bool m_boolean_isSet;

    bool container_node;
    bool m_container_node_isSet;

    bool _double;
    bool m__double_isSet;

    bool empty;
    bool m_empty_isSet;

    bool _float;
    bool m__float_isSet;

    bool floating_point_number;
    bool m_floating_point_number_isSet;

    bool _int;
    bool m__int_isSet;

    bool integral_number;
    bool m_integral_number_isSet;

    bool _long;
    bool m__long_isSet;

    bool missing_node;
    bool m_missing_node_isSet;

    QString* node_type;
    bool m_node_type_isSet;

    bool null;
    bool m_null_isSet;

    bool number;
    bool m_number_isSet;

    bool object;
    bool m_object_isSet;

    bool pojo;
    bool m_pojo_isSet;

    bool _short;
    bool m__short_isSet;

    bool textual;
    bool m_textual_isSet;

    bool value_node;
    bool m_value_node_isSet;

};

}

#endif /* OAIJsonNode_H_ */
