/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIRoleMapEntry.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIRoleMapEntry::OAIRoleMapEntry(QString json) {
    init();
    this->fromJson(json);
}

OAIRoleMapEntry::OAIRoleMapEntry() {
    init();
}

OAIRoleMapEntry::~OAIRoleMapEntry() {
    this->cleanup();
}

void
OAIRoleMapEntry::init() {
    identities = new QList<OAIBTIdentityInfo*>();
    m_identities_isSet = false;
    role = new OAIBTRbacRoleInfo();
    m_role_isSet = false;
}

void
OAIRoleMapEntry::cleanup() {
    if(identities != nullptr) { 
        auto arr = identities;
        for(auto o: *arr) { 
            delete o;
        }
        delete identities;
    }
    if(role != nullptr) { 
        delete role;
    }
}

OAIRoleMapEntry*
OAIRoleMapEntry::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIRoleMapEntry::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&identities, pJson["identities"], "QList", "OAIBTIdentityInfo");
    ::OpenAPI::setValue(&role, pJson["role"], "OAIBTRbacRoleInfo", "OAIBTRbacRoleInfo");
    
}

QString
OAIRoleMapEntry::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIRoleMapEntry::asJsonObject() {
    QJsonObject obj;
    if(identities->size() > 0){
        toJsonArray((QList<void*>*)identities, obj, "identities", "OAIBTIdentityInfo");
    }
    if((role != nullptr) && (role->isSet())){
        toJsonValue(QString("role"), role, obj, QString("OAIBTRbacRoleInfo"));
    }

    return obj;
}

QList<OAIBTIdentityInfo*>*
OAIRoleMapEntry::getIdentities() {
    return identities;
}
void
OAIRoleMapEntry::setIdentities(QList<OAIBTIdentityInfo*>* identities) {
    this->identities = identities;
    this->m_identities_isSet = true;
}

OAIBTRbacRoleInfo*
OAIRoleMapEntry::getRole() {
    return role;
}
void
OAIRoleMapEntry::setRole(OAIBTRbacRoleInfo* role) {
    this->role = role;
    this->m_role_isSet = true;
}


bool
OAIRoleMapEntry::isSet(){
    bool isObjectUpdated = false;
    do{
        if(identities->size() > 0){ isObjectUpdated = true; break;}
        if(role != nullptr && role->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

