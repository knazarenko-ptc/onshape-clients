/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTPurchaseInfo.h
 *
 * 
 */

#ifndef OAIBTPurchaseInfo_H_
#define OAIBTPurchaseInfo_H_

#include <QJsonObject>


#include "OAIBTAPIApplicationSummaryInfo.h"
#include "OAIBTBillingPlanInfo.h"
#include "OAIBTCardInfo.h"
#include "OAIBTPlanSubscriberInfo.h"
#include "OAINextCharge.h"
#include "OAIProratedCharges.h"
#include "OAISubscription.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTPurchaseInfo: public OAIObject {
public:
    OAIBTPurchaseInfo();
    OAIBTPurchaseInfo(QString json);
    ~OAIBTPurchaseInfo();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTPurchaseInfo* fromJson(QString jsonString) override;

    QString* getAccountId();
    void setAccountId(QString* account_id);

    qint64 getActualAmountPaidCents();
    void setActualAmountPaidCents(qint64 actual_amount_paid_cents);

    qint64 getAmountCents();
    void setAmountCents(qint64 amount_cents);

    OAIBTAPIApplicationSummaryInfo* getApplication();
    void setApplication(OAIBTAPIApplicationSummaryInfo* application);

    QDateTime* getCanceledAt();
    void setCanceledAt(QDateTime* canceled_at);

    OAIBTCardInfo* getCard();
    void setCard(OAIBTCardInfo* card);

    QString* getClientId();
    void setClientId(QString* client_id);

    qint64 getCouponAmountOff();
    void setCouponAmountOff(qint64 coupon_amount_off);

    qint32 getCouponPercentOff();
    void setCouponPercentOff(qint32 coupon_percent_off);

    QString* getCreatedBy();
    void setCreatedBy(QString* created_by);

    QString* getCurrency();
    void setCurrency(QString* currency);

    qint32 getDuration();
    void setDuration(qint32 duration);

    qint32 getDurationMonths();
    void setDurationMonths(qint32 duration_months);

    QString* getGroup();
    void setGroup(QString* group);

    QString* getHref();
    void setHref(QString* href);

    QString* getId();
    void setId(QString* id);

    QDateTime* getLastModified();
    void setLastModified(QDateTime* last_modified);

    QString* getLastModifiedBy();
    void setLastModifiedBy(QString* last_modified_by);

    qint64 getLightSeats();
    void setLightSeats(qint64 light_seats);

    QString* getName();
    void setName(QString* name);

    OAINextCharge* getNextCharge();
    void setNextCharge(OAINextCharge* next_charge);

    qint32 getPaymentType();
    void setPaymentType(qint32 payment_type);

    bool isPendingCancelation();
    void setPendingCancelation(bool pending_cancelation);

    OAIBTBillingPlanInfo* getPlan();
    void setPlan(OAIBTBillingPlanInfo* plan);

    QString* getPlanId();
    void setPlanId(QString* plan_id);

    QString* getPlanName();
    void setPlanName(QString* plan_name);

    qint32 getPlanType();
    void setPlanType(qint32 plan_type);

    QList<OAIProratedCharges*>* getProratedCharges();
    void setProratedCharges(QList<OAIProratedCharges*>* prorated_charges);

    qint64 getProratedTotal();
    void setProratedTotal(qint64 prorated_total);

    QDateTime* getPurchaseDate();
    void setPurchaseDate(QDateTime* purchase_date);

    QString* getResellerName();
    void setResellerName(QString* reseller_name);

    qint64 getSeats();
    void setSeats(qint64 seats);

    qint32 getState();
    void setState(qint32 state);

    QList<OAIBTPlanSubscriberInfo*>* getSubscribers();
    void setSubscribers(QList<OAIBTPlanSubscriberInfo*>* subscribers);

    QDateTime* getSubscriptionBeginAt();
    void setSubscriptionBeginAt(QDateTime* subscription_begin_at);

    QDateTime* getSubscriptionEndAt();
    void setSubscriptionEndAt(QDateTime* subscription_end_at);

    OAISubscription* getSubscriptionFields();
    void setSubscriptionFields(OAISubscription* subscription_fields);

    QString* getSubscriptionId();
    void setSubscriptionId(QString* subscription_id);

    qint32 getSubscriptionType();
    void setSubscriptionType(qint32 subscription_type);

    QDateTime* getTrialEnd();
    void setTrialEnd(QDateTime* trial_end);

    QString* getTrialInitiatedBy();
    void setTrialInitiatedBy(QString* trial_initiated_by);

    QString* getViewRef();
    void setViewRef(QString* view_ref);


    virtual bool isSet() override;

private:
    QString* account_id;
    bool m_account_id_isSet;

    qint64 actual_amount_paid_cents;
    bool m_actual_amount_paid_cents_isSet;

    qint64 amount_cents;
    bool m_amount_cents_isSet;

    OAIBTAPIApplicationSummaryInfo* application;
    bool m_application_isSet;

    QDateTime* canceled_at;
    bool m_canceled_at_isSet;

    OAIBTCardInfo* card;
    bool m_card_isSet;

    QString* client_id;
    bool m_client_id_isSet;

    qint64 coupon_amount_off;
    bool m_coupon_amount_off_isSet;

    qint32 coupon_percent_off;
    bool m_coupon_percent_off_isSet;

    QString* created_by;
    bool m_created_by_isSet;

    QString* currency;
    bool m_currency_isSet;

    qint32 duration;
    bool m_duration_isSet;

    qint32 duration_months;
    bool m_duration_months_isSet;

    QString* group;
    bool m_group_isSet;

    QString* href;
    bool m_href_isSet;

    QString* id;
    bool m_id_isSet;

    QDateTime* last_modified;
    bool m_last_modified_isSet;

    QString* last_modified_by;
    bool m_last_modified_by_isSet;

    qint64 light_seats;
    bool m_light_seats_isSet;

    QString* name;
    bool m_name_isSet;

    OAINextCharge* next_charge;
    bool m_next_charge_isSet;

    qint32 payment_type;
    bool m_payment_type_isSet;

    bool pending_cancelation;
    bool m_pending_cancelation_isSet;

    OAIBTBillingPlanInfo* plan;
    bool m_plan_isSet;

    QString* plan_id;
    bool m_plan_id_isSet;

    QString* plan_name;
    bool m_plan_name_isSet;

    qint32 plan_type;
    bool m_plan_type_isSet;

    QList<OAIProratedCharges*>* prorated_charges;
    bool m_prorated_charges_isSet;

    qint64 prorated_total;
    bool m_prorated_total_isSet;

    QDateTime* purchase_date;
    bool m_purchase_date_isSet;

    QString* reseller_name;
    bool m_reseller_name_isSet;

    qint64 seats;
    bool m_seats_isSet;

    qint32 state;
    bool m_state_isSet;

    QList<OAIBTPlanSubscriberInfo*>* subscribers;
    bool m_subscribers_isSet;

    QDateTime* subscription_begin_at;
    bool m_subscription_begin_at_isSet;

    QDateTime* subscription_end_at;
    bool m_subscription_end_at_isSet;

    OAISubscription* subscription_fields;
    bool m_subscription_fields_isSet;

    QString* subscription_id;
    bool m_subscription_id_isSet;

    qint32 subscription_type;
    bool m_subscription_type_isSet;

    QDateTime* trial_end;
    bool m_trial_end_isSet;

    QString* trial_initiated_by;
    bool m_trial_initiated_by_isSet;

    QString* view_ref;
    bool m_view_ref_isSet;

};

}

#endif /* OAIBTPurchaseInfo_H_ */
