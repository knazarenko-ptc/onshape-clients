/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTWebhookParams.h
 *
 * 
 */

#ifndef OAIBTWebhookParams_H_
#define OAIBTWebhookParams_H_

#include <QJsonObject>


#include "OAIBTWebhookOptions.h"
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTWebhookParams: public OAIObject {
public:
    OAIBTWebhookParams();
    OAIBTWebhookParams(QString json);
    ~OAIBTWebhookParams();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTWebhookParams* fromJson(QString jsonString) override;

    QString* getClientId();
    void setClientId(QString* client_id);

    QString* getCompanyId();
    void setCompanyId(QString* company_id);

    QString* getData();
    void setData(QString* data);

    QString* getDocumentId();
    void setDocumentId(QString* document_id);

    QString* getElementId();
    void setElementId(QString* element_id);

    QList<QString*>* getEvents();
    void setEvents(QList<QString*>* events);

    QString* getFilter();
    void setFilter(QString* filter);

    QString* getFolderId();
    void setFolderId(QString* folder_id);

    QString* getId();
    void setId(QString* id);

    OAIBTWebhookOptions* getOptions();
    void setOptions(OAIBTWebhookOptions* options);

    QString* getPartId();
    void setPartId(QString* part_id);

    QString* getProjectId();
    void setProjectId(QString* project_id);

    QString* getUrl();
    void setUrl(QString* url);

    QString* getUserId();
    void setUserId(QString* user_id);

    QString* getVersionId();
    void setVersionId(QString* version_id);

    QString* getWorkspaceId();
    void setWorkspaceId(QString* workspace_id);


    virtual bool isSet() override;

private:
    QString* client_id;
    bool m_client_id_isSet;

    QString* company_id;
    bool m_company_id_isSet;

    QString* data;
    bool m_data_isSet;

    QString* document_id;
    bool m_document_id_isSet;

    QString* element_id;
    bool m_element_id_isSet;

    QList<QString*>* events;
    bool m_events_isSet;

    QString* filter;
    bool m_filter_isSet;

    QString* folder_id;
    bool m_folder_id_isSet;

    QString* id;
    bool m_id_isSet;

    OAIBTWebhookOptions* options;
    bool m_options_isSet;

    QString* part_id;
    bool m_part_id_isSet;

    QString* project_id;
    bool m_project_id_isSet;

    QString* url;
    bool m_url_isSet;

    QString* user_id;
    bool m_user_id_isSet;

    QString* version_id;
    bool m_version_id_isSet;

    QString* workspace_id;
    bool m_workspace_id_isSet;

};

}

#endif /* OAIBTWebhookParams_H_ */
