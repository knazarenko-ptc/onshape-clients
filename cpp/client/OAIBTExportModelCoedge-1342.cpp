/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTExportModelCoedge-1342.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTExportModelCoedge-1342::OAIBTExportModelCoedge-1342(QString json) {
    init();
    this->fromJson(json);
}

OAIBTExportModelCoedge-1342::OAIBTExportModelCoedge-1342() {
    init();
}

OAIBTExportModelCoedge-1342::~OAIBTExportModelCoedge-1342() {
    this->cleanup();
}

void
OAIBTExportModelCoedge-1342::init() {
    edge_id = new QString("");
    m_edge_id_isSet = false;
    orientation = false;
    m_orientation_isSet = false;
}

void
OAIBTExportModelCoedge-1342::cleanup() {
    if(edge_id != nullptr) { 
        delete edge_id;
    }

}

OAIBTExportModelCoedge-1342*
OAIBTExportModelCoedge-1342::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTExportModelCoedge-1342::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&edge_id, pJson["edgeId"], "QString", "QString");
    
    ::OpenAPI::setValue(&orientation, pJson["orientation"], "bool", "");
    
}

QString
OAIBTExportModelCoedge-1342::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTExportModelCoedge-1342::asJsonObject() {
    QJsonObject obj;
    if(edge_id != nullptr && *edge_id != QString("")){
        toJsonValue(QString("edgeId"), edge_id, obj, QString("QString"));
    }
    if(m_orientation_isSet){
        obj.insert("orientation", QJsonValue(orientation));
    }

    return obj;
}

QString*
OAIBTExportModelCoedge-1342::getEdgeId() {
    return edge_id;
}
void
OAIBTExportModelCoedge-1342::setEdgeId(QString* edge_id) {
    this->edge_id = edge_id;
    this->m_edge_id_isSet = true;
}

bool
OAIBTExportModelCoedge-1342::isOrientation() {
    return orientation;
}
void
OAIBTExportModelCoedge-1342::setOrientation(bool orientation) {
    this->orientation = orientation;
    this->m_orientation_isSet = true;
}


bool
OAIBTExportModelCoedge-1342::isSet(){
    bool isObjectUpdated = false;
    do{
        if(edge_id != nullptr && *edge_id != QString("")){ isObjectUpdated = true; break;}
        if(m_orientation_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

