/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTExportModelBody-1272.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTExportModelBody-1272::OAIBTExportModelBody-1272(QString json) {
    init();
    this->fromJson(json);
}

OAIBTExportModelBody-1272::OAIBTExportModelBody-1272() {
    init();
}

OAIBTExportModelBody-1272::~OAIBTExportModelBody-1272() {
    this->cleanup();
}

void
OAIBTExportModelBody-1272::init() {
    edges = new QList<OAIBTExportModelEdge-1782*>();
    m_edges_isSet = false;
    faces = new QList<OAIBTExportModelFace-1363*>();
    m_faces_isSet = false;
    id = new QString("");
    m_id_isSet = false;
    type = new QString("");
    m_type_isSet = false;
    vertices = new QList<OAIBTExportModelVertex-858*>();
    m_vertices_isSet = false;
}

void
OAIBTExportModelBody-1272::cleanup() {
    if(edges != nullptr) { 
        auto arr = edges;
        for(auto o: *arr) { 
            delete o;
        }
        delete edges;
    }
    if(faces != nullptr) { 
        auto arr = faces;
        for(auto o: *arr) { 
            delete o;
        }
        delete faces;
    }
    if(id != nullptr) { 
        delete id;
    }
    if(type != nullptr) { 
        delete type;
    }
    if(vertices != nullptr) { 
        auto arr = vertices;
        for(auto o: *arr) { 
            delete o;
        }
        delete vertices;
    }
}

OAIBTExportModelBody-1272*
OAIBTExportModelBody-1272::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTExportModelBody-1272::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&edges, pJson["edges"], "QList", "OAIBTExportModelEdge-1782");
    
    ::OpenAPI::setValue(&faces, pJson["faces"], "QList", "OAIBTExportModelFace-1363");
    ::OpenAPI::setValue(&id, pJson["id"], "QString", "QString");
    
    ::OpenAPI::setValue(&type, pJson["type"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&vertices, pJson["vertices"], "QList", "OAIBTExportModelVertex-858");
}

QString
OAIBTExportModelBody-1272::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTExportModelBody-1272::asJsonObject() {
    QJsonObject obj;
    if(edges->size() > 0){
        toJsonArray((QList<void*>*)edges, obj, "edges", "OAIBTExportModelEdge-1782");
    }
    if(faces->size() > 0){
        toJsonArray((QList<void*>*)faces, obj, "faces", "OAIBTExportModelFace-1363");
    }
    if(id != nullptr && *id != QString("")){
        toJsonValue(QString("id"), id, obj, QString("QString"));
    }
    if(type != nullptr && *type != QString("")){
        toJsonValue(QString("type"), type, obj, QString("QString"));
    }
    if(vertices->size() > 0){
        toJsonArray((QList<void*>*)vertices, obj, "vertices", "OAIBTExportModelVertex-858");
    }

    return obj;
}

QList<OAIBTExportModelEdge-1782*>*
OAIBTExportModelBody-1272::getEdges() {
    return edges;
}
void
OAIBTExportModelBody-1272::setEdges(QList<OAIBTExportModelEdge-1782*>* edges) {
    this->edges = edges;
    this->m_edges_isSet = true;
}

QList<OAIBTExportModelFace-1363*>*
OAIBTExportModelBody-1272::getFaces() {
    return faces;
}
void
OAIBTExportModelBody-1272::setFaces(QList<OAIBTExportModelFace-1363*>* faces) {
    this->faces = faces;
    this->m_faces_isSet = true;
}

QString*
OAIBTExportModelBody-1272::getId() {
    return id;
}
void
OAIBTExportModelBody-1272::setId(QString* id) {
    this->id = id;
    this->m_id_isSet = true;
}

QString*
OAIBTExportModelBody-1272::getType() {
    return type;
}
void
OAIBTExportModelBody-1272::setType(QString* type) {
    this->type = type;
    this->m_type_isSet = true;
}

QList<OAIBTExportModelVertex-858*>*
OAIBTExportModelBody-1272::getVertices() {
    return vertices;
}
void
OAIBTExportModelBody-1272::setVertices(QList<OAIBTExportModelVertex-858*>* vertices) {
    this->vertices = vertices;
    this->m_vertices_isSet = true;
}


bool
OAIBTExportModelBody-1272::isSet(){
    bool isObjectUpdated = false;
    do{
        if(edges->size() > 0){ isObjectUpdated = true; break;}
        if(faces->size() > 0){ isObjectUpdated = true; break;}
        if(id != nullptr && *id != QString("")){ isObjectUpdated = true; break;}
        if(type != nullptr && *type != QString("")){ isObjectUpdated = true; break;}
        if(vertices->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

