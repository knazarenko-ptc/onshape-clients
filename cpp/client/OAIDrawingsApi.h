/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef _OAI_OAIDrawingsApi_H_
#define _OAI_OAIDrawingsApi_H_

#include "OAIHttpRequest.h"

#include "OAIBTDocumentElementInfo.h"
#include "OAIBTDrawingParams.h"
#include "OAIBTModelFormatInfo.h"
#include "OAIBTTranslateFormatParams.h"
#include "OAIBTTranslationRequestInfo.h"
#include <QString>

#include <QObject>

namespace OpenAPI {

class OAIDrawingsApi: public QObject {
    Q_OBJECT

public:
    OAIDrawingsApi();
    OAIDrawingsApi(QString host, QString basePath);
    ~OAIDrawingsApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void createDrawingAppElement(OAIBTDrawingParams& oaibt_drawing_params);
    void createDrawingTranslation(QString* did, QString* wv, QString* wvid, QString* eid, OAIBTTranslateFormatParams& oaibt_translate_format_params);
    void getDrawingTranslatorFormats(QString* did, QString* wid, QString* eid);
    
private:
    void createDrawingAppElementCallback (OAIHttpRequestWorker * worker);
    void createDrawingTranslationCallback (OAIHttpRequestWorker * worker);
    void getDrawingTranslatorFormatsCallback (OAIHttpRequestWorker * worker);
    
signals:
    void createDrawingAppElementSignal(OAIBTDocumentElementInfo* summary);
    void createDrawingTranslationSignal(OAIBTTranslationRequestInfo* summary);
    void getDrawingTranslatorFormatsSignal(QList<OAIBTModelFormatInfo*>* summary);
    
    void createDrawingAppElementSignalE(OAIBTDocumentElementInfo* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void createDrawingTranslationSignalE(OAIBTTranslationRequestInfo* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void getDrawingTranslatorFormatsSignalE(QList<OAIBTModelFormatInfo*>* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    
    void createDrawingAppElementSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void createDrawingTranslationSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void getDrawingTranslatorFormatsSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
