/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIBTRbacRoleInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIBTRbacRoleInfo::OAIBTRbacRoleInfo(QString json) {
    init();
    this->fromJson(json);
}

OAIBTRbacRoleInfo::OAIBTRbacRoleInfo() {
    init();
}

OAIBTRbacRoleInfo::~OAIBTRbacRoleInfo() {
    this->cleanup();
}

void
OAIBTRbacRoleInfo::init() {
    active = false;
    m_active_isSet = false;
    description = new QString("");
    m_description_isSet = false;
    href = new QString("");
    m_href_isSet = false;
    id = new QString("");
    m_id_isSet = false;
    name = new QString("");
    m_name_isSet = false;
    predefined_role = 0;
    m_predefined_role_isSet = false;
    view_ref = new QString("");
    m_view_ref_isSet = false;
}

void
OAIBTRbacRoleInfo::cleanup() {

    if(description != nullptr) { 
        delete description;
    }
    if(href != nullptr) { 
        delete href;
    }
    if(id != nullptr) { 
        delete id;
    }
    if(name != nullptr) { 
        delete name;
    }

    if(view_ref != nullptr) { 
        delete view_ref;
    }
}

OAIBTRbacRoleInfo*
OAIBTRbacRoleInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIBTRbacRoleInfo::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&active, pJson["active"], "bool", "");
    
    ::OpenAPI::setValue(&description, pJson["description"], "QString", "QString");
    
    ::OpenAPI::setValue(&href, pJson["href"], "QString", "QString");
    
    ::OpenAPI::setValue(&id, pJson["id"], "QString", "QString");
    
    ::OpenAPI::setValue(&name, pJson["name"], "QString", "QString");
    
    ::OpenAPI::setValue(&predefined_role, pJson["predefinedRole"], "qint32", "");
    
    ::OpenAPI::setValue(&view_ref, pJson["viewRef"], "QString", "QString");
    
}

QString
OAIBTRbacRoleInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIBTRbacRoleInfo::asJsonObject() {
    QJsonObject obj;
    if(m_active_isSet){
        obj.insert("active", QJsonValue(active));
    }
    if(description != nullptr && *description != QString("")){
        toJsonValue(QString("description"), description, obj, QString("QString"));
    }
    if(href != nullptr && *href != QString("")){
        toJsonValue(QString("href"), href, obj, QString("QString"));
    }
    if(id != nullptr && *id != QString("")){
        toJsonValue(QString("id"), id, obj, QString("QString"));
    }
    if(name != nullptr && *name != QString("")){
        toJsonValue(QString("name"), name, obj, QString("QString"));
    }
    if(m_predefined_role_isSet){
        obj.insert("predefinedRole", QJsonValue(predefined_role));
    }
    if(view_ref != nullptr && *view_ref != QString("")){
        toJsonValue(QString("viewRef"), view_ref, obj, QString("QString"));
    }

    return obj;
}

bool
OAIBTRbacRoleInfo::isActive() {
    return active;
}
void
OAIBTRbacRoleInfo::setActive(bool active) {
    this->active = active;
    this->m_active_isSet = true;
}

QString*
OAIBTRbacRoleInfo::getDescription() {
    return description;
}
void
OAIBTRbacRoleInfo::setDescription(QString* description) {
    this->description = description;
    this->m_description_isSet = true;
}

QString*
OAIBTRbacRoleInfo::getHref() {
    return href;
}
void
OAIBTRbacRoleInfo::setHref(QString* href) {
    this->href = href;
    this->m_href_isSet = true;
}

QString*
OAIBTRbacRoleInfo::getId() {
    return id;
}
void
OAIBTRbacRoleInfo::setId(QString* id) {
    this->id = id;
    this->m_id_isSet = true;
}

QString*
OAIBTRbacRoleInfo::getName() {
    return name;
}
void
OAIBTRbacRoleInfo::setName(QString* name) {
    this->name = name;
    this->m_name_isSet = true;
}

qint32
OAIBTRbacRoleInfo::getPredefinedRole() {
    return predefined_role;
}
void
OAIBTRbacRoleInfo::setPredefinedRole(qint32 predefined_role) {
    this->predefined_role = predefined_role;
    this->m_predefined_role_isSet = true;
}

QString*
OAIBTRbacRoleInfo::getViewRef() {
    return view_ref;
}
void
OAIBTRbacRoleInfo::setViewRef(QString* view_ref) {
    this->view_ref = view_ref;
    this->m_view_ref_isSet = true;
}


bool
OAIBTRbacRoleInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_active_isSet){ isObjectUpdated = true; break;}
        if(description != nullptr && *description != QString("")){ isObjectUpdated = true; break;}
        if(href != nullptr && *href != QString("")){ isObjectUpdated = true; break;}
        if(id != nullptr && *id != QString("")){ isObjectUpdated = true; break;}
        if(name != nullptr && *name != QString("")){ isObjectUpdated = true; break;}
        if(m_predefined_role_isSet){ isObjectUpdated = true; break;}
        if(view_ref != nullptr && *view_ref != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

