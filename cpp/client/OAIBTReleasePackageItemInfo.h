/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.111
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBTReleasePackageItemInfo.h
 *
 * 
 */

#ifndef OAIBTReleasePackageItemInfo_H_
#define OAIBTReleasePackageItemInfo_H_

#include <QJsonObject>


#include "OAIBTMetadataPropertyInfo.h"
#include "OAIBTReleasePackageItemError.h"
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIBTReleasePackageItemInfo: public OAIObject {
public:
    OAIBTReleasePackageItemInfo();
    OAIBTReleasePackageItemInfo(QString json);
    ~OAIBTReleasePackageItemInfo();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIBTReleasePackageItemInfo* fromJson(QString jsonString) override;

    bool isCanExport();
    void setCanExport(bool can_export);

    QString* getCompanyId();
    void setCompanyId(QString* company_id);

    QString* getConfiguration();
    void setConfiguration(QString* configuration);

    QString* getConfigurationKey();
    void setConfigurationKey(QString* configuration_key);

    QString* getDiffThumbnailConfigurationKey();
    void setDiffThumbnailConfigurationKey(QString* diff_thumbnail_configuration_key);

    QString* getDocumentId();
    void setDocumentId(QString* document_id);

    QString* getElementId();
    void setElementId(QString* element_id);

    qint32 getElementType();
    void setElementType(qint32 element_type);

    QList<OAIBTReleasePackageItemError*>* getErrors();
    void setErrors(QList<OAIBTReleasePackageItemError*>* errors);

    QString* getHref();
    void setHref(QString* href);

    QString* getId();
    void setId(QString* id);

    bool isIsIncludedEditable();
    void setIsIncludedEditable(bool is_included_editable);

    bool isIsRevisionManaged();
    void setIsRevisionManaged(bool is_revision_managed);

    bool isIsTranslatable();
    void setIsTranslatable(bool is_translatable);

    QString* getMimeType();
    void setMimeType(QString* mime_type);

    QString* getName();
    void setName(QString* name);

    QString* getObsoletionRevisionId();
    void setObsoletionRevisionId(QString* obsoletion_revision_id);

    QString* getPartId();
    void setPartId(QString* part_id);

    QString* getPartType();
    void setPartType(QString* part_type);

    QList<OAIBTMetadataPropertyInfo*>* getProperties();
    void setProperties(QList<OAIBTMetadataPropertyInfo*>* properties);

    QString* getRpid();
    void setRpid(QString* rpid);

    QString* getSmallThumbnailHref();
    void setSmallThumbnailHref(QString* small_thumbnail_href);

    QString* getVersionId();
    void setVersionId(QString* version_id);

    QString* getViewRef();
    void setViewRef(QString* view_ref);

    QString* getWorkspaceId();
    void setWorkspaceId(QString* workspace_id);


    virtual bool isSet() override;

private:
    bool can_export;
    bool m_can_export_isSet;

    QString* company_id;
    bool m_company_id_isSet;

    QString* configuration;
    bool m_configuration_isSet;

    QString* configuration_key;
    bool m_configuration_key_isSet;

    QString* diff_thumbnail_configuration_key;
    bool m_diff_thumbnail_configuration_key_isSet;

    QString* document_id;
    bool m_document_id_isSet;

    QString* element_id;
    bool m_element_id_isSet;

    qint32 element_type;
    bool m_element_type_isSet;

    QList<OAIBTReleasePackageItemError*>* errors;
    bool m_errors_isSet;

    QString* href;
    bool m_href_isSet;

    QString* id;
    bool m_id_isSet;

    bool is_included_editable;
    bool m_is_included_editable_isSet;

    bool is_revision_managed;
    bool m_is_revision_managed_isSet;

    bool is_translatable;
    bool m_is_translatable_isSet;

    QString* mime_type;
    bool m_mime_type_isSet;

    QString* name;
    bool m_name_isSet;

    QString* obsoletion_revision_id;
    bool m_obsoletion_revision_id_isSet;

    QString* part_id;
    bool m_part_id_isSet;

    QString* part_type;
    bool m_part_type_isSet;

    QList<OAIBTMetadataPropertyInfo*>* properties;
    bool m_properties_isSet;

    QString* rpid;
    bool m_rpid_isSet;

    QString* small_thumbnail_href;
    bool m_small_thumbnail_href_isSet;

    QString* version_id;
    bool m_version_id_isSet;

    QString* view_ref;
    bool m_view_ref_isSet;

    QString* workspace_id;
    bool m_workspace_id_isSet;

};

}

#endif /* OAIBTReleasePackageItemInfo_H_ */
